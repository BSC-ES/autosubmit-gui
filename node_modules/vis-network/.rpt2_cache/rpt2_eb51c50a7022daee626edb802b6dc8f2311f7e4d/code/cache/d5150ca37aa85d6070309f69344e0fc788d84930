{"code":"/**\r\n * Convert Gephi to Vis.\r\n *\r\n * @param gephiJSON - The parsed JSON data in Gephi format.\r\n * @param optionsObj - Additional options.\r\n *\r\n * @returns The converted data ready to be used in Vis.\r\n */\r\nexport function parseGephi(gephiJSON, optionsObj) {\r\n    const options = {\r\n        edges: {\r\n            inheritColor: false,\r\n        },\r\n        nodes: {\r\n            fixed: false,\r\n            parseColor: false,\r\n        },\r\n    };\r\n    if (optionsObj != null) {\r\n        if (optionsObj.fixed != null) {\r\n            options.nodes.fixed = optionsObj.fixed;\r\n        }\r\n        if (optionsObj.parseColor != null) {\r\n            options.nodes.parseColor = optionsObj.parseColor;\r\n        }\r\n        if (optionsObj.inheritColor != null) {\r\n            options.edges.inheritColor = optionsObj.inheritColor;\r\n        }\r\n    }\r\n    const gEdges = gephiJSON.edges;\r\n    const vEdges = gEdges.map((gEdge) => {\r\n        const vEdge = {\r\n            from: gEdge.source,\r\n            id: gEdge.id,\r\n            to: gEdge.target,\r\n        };\r\n        if (gEdge.attributes != null) {\r\n            vEdge.attributes = gEdge.attributes;\r\n        }\r\n        if (gEdge.label != null) {\r\n            vEdge.label = gEdge.label;\r\n        }\r\n        if (gEdge.attributes != null && gEdge.attributes.title != null) {\r\n            vEdge.title = gEdge.attributes.title;\r\n        }\r\n        if (gEdge.type === 'Directed') {\r\n            vEdge.arrows = 'to';\r\n        }\r\n        // edge['value'] = gEdge.attributes != null ? gEdge.attributes.Weight : undefined;\r\n        // edge['width'] = edge['value'] != null ? undefined : edgegEdge.size;\r\n        if (gEdge.color && options.edges.inheritColor === false) {\r\n            vEdge.color = gEdge.color;\r\n        }\r\n        return vEdge;\r\n    });\r\n    const vNodes = gephiJSON.nodes.map((gNode) => {\r\n        const vNode = {\r\n            id: gNode.id,\r\n            fixed: options.nodes.fixed && gNode.x != null && gNode.y != null,\r\n        };\r\n        if (gNode.attributes != null) {\r\n            vNode.attributes = gNode.attributes;\r\n        }\r\n        if (gNode.label != null) {\r\n            vNode.label = gNode.label;\r\n        }\r\n        if (gNode.size != null) {\r\n            vNode.size = gNode.size;\r\n        }\r\n        if (gNode.attributes != null && gNode.attributes.title != null) {\r\n            vNode.title = gNode.attributes.title;\r\n        }\r\n        if (gNode.title != null) {\r\n            vNode.title = gNode.title;\r\n        }\r\n        if (gNode.x != null) {\r\n            vNode.x = gNode.x;\r\n        }\r\n        if (gNode.y != null) {\r\n            vNode.y = gNode.y;\r\n        }\r\n        if (gNode.color != null) {\r\n            if (options.nodes.parseColor === true) {\r\n                vNode.color = gNode.color;\r\n            }\r\n            else {\r\n                vNode.color = {\r\n                    background: gNode.color,\r\n                    border: gNode.color,\r\n                    highlight: {\r\n                        background: gNode.color,\r\n                        border: gNode.color,\r\n                    },\r\n                    hover: {\r\n                        background: gNode.color,\r\n                        border: gNode.color,\r\n                    },\r\n                };\r\n            }\r\n        }\r\n        return vNode;\r\n    });\r\n    return { nodes: vNodes, edges: vEdges };\r\n}\r\n//# sourceMappingURL=gephiParser.js.map","references":[],"map":"{\"version\":3,\"file\":\"gephiParser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/network/gephiParser.ts\"],\"names\":[],\"mappings\":\"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\"}"}
