{"ast":null,"code":"import _slicedToArray from \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/context/experiment/ExperimentState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ExperimentContext from './experimentContext';\nimport ExperimentReducer from './experimentReducer';\nimport { SEARCH_EXPERIMENTS, SET_LOADING, CLEAR_EXPERIMENTS, GET_EXPERIMENT, GET_GRAPH, SET_LOADING_GRAPH, CLEAN_GRAPH_DATA, UPDATE_SELECTION, GET_EXPERIMENT_RUN, SET_LOADING_RUN } from '../types';\n\nconst ExperimentState = props => {\n  const initialState = {\n    experiments: [],\n    experiment: {},\n    loading: false,\n    data: null,\n    loadingGraph: false,\n    loadingRun: false,\n    selection: null,\n    enabledGraphSearch: true\n  };\n\n  const _useReducer = useReducer(ExperimentReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Experiments\n\n\n  const searchExperiments = async text => {\n    setLoading();\n    const res = await axios.get(\"http://84.88.185.94:8888/search/\".concat(text));\n    dispatch({\n      type: SEARCH_EXPERIMENTS,\n      payload: res.data.experiment\n    });\n  }; // Get Experiment\n\n\n  const getExperiment = async expid => {\n    setLoading(); //cleanGraphData();\n\n    const res = await axios.get(\"http://84.88.185.94:8888/expinfo/\".concat(expid));\n    dispatch({\n      type: GET_EXPERIMENT,\n      payload: res.data\n    });\n  }; // Get Experiment Graph\n\n\n  const getExperimentGraph = async expid => {\n    setLoadingGraph();\n    const res = await axios.get(\"http://84.88.185.94:8888/graph/\".concat(expid));\n    console.log(res.data);\n    dispatch({\n      type: GET_GRAPH,\n      payload: res.data\n    }); //this.setState({ data: res.data, loading: false, showGraph: !res.data.error });\n  }; // Get Experiment Run\n\n\n  const getExperimentRun = async expid => {}; // Cleaning\n\n\n  const clearExperiments = () => dispatch({\n    type: CLEAR_EXPERIMENTS\n  });\n\n  const cleanGraphData = () => dispatch({\n    type: CLEAN_GRAPH_DATA\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  const setLoadingGraph = () => dispatch({\n    type: SET_LOADING_GRAPH\n  });\n\n  const setLoadingRun = () => dispatch({\n    type: SET_LOADING_RUN\n  }); // Action Things\n\n\n  const updateSelection = currentSelection => dispatch({\n    type: UPDATE_SELECTION,\n    payload: currentSelection\n  });\n\n  return React.createElement(ExperimentContext.Provider, {\n    value: {\n      experiments: state.experiments,\n      experiment: state.experiment,\n      loading: state.loading,\n      loadingGraph: state.loadingGraph,\n      loadingRun: state.loadingRun,\n      data: state.data,\n      selection: state.selection,\n      enabledGraphSearch: state.enabledGraphSearch,\n      searchExperiments,\n      clearExperiments,\n      getExperiment,\n      getExperimentGraph,\n      cleanGraphData,\n      updateSelection,\n      getExperimentRun\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ExperimentState;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/context/experiment/ExperimentState.js"],"names":["React","useReducer","axios","ExperimentContext","ExperimentReducer","SEARCH_EXPERIMENTS","SET_LOADING","CLEAR_EXPERIMENTS","GET_EXPERIMENT","GET_GRAPH","SET_LOADING_GRAPH","CLEAN_GRAPH_DATA","UPDATE_SELECTION","GET_EXPERIMENT_RUN","SET_LOADING_RUN","ExperimentState","props","initialState","experiments","experiment","loading","data","loadingGraph","loadingRun","selection","enabledGraphSearch","state","dispatch","searchExperiments","text","setLoading","res","get","type","payload","getExperiment","expid","getExperimentGraph","setLoadingGraph","console","log","getExperimentRun","clearExperiments","cleanGraphData","setLoadingRun","updateSelection","currentSelection","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ExperimentContext from './experimentContext';\nimport ExperimentReducer from './experimentReducer';\nimport {\n  SEARCH_EXPERIMENTS,\n  SET_LOADING,\n  CLEAR_EXPERIMENTS,\n  GET_EXPERIMENT,\n  GET_GRAPH,\n  SET_LOADING_GRAPH,\n  CLEAN_GRAPH_DATA,\n  UPDATE_SELECTION,\n  GET_EXPERIMENT_RUN,\n  SET_LOADING_RUN,\n} from '../types';\n\nconst ExperimentState = props => {\n    const initialState = {\n        experiments: [],\n        experiment: {},\n        loading: false,\n        data: null,\n        loadingGraph: false,\n        loadingRun: false,\n        selection: null,\n        enabledGraphSearch: true,\n    }\n\n    const [state, dispatch] = useReducer(ExperimentReducer, initialState);\n\n    // Search Experiments\n    const searchExperiments = async text => {\n        setLoading();\n        const res = await axios.get(`http://84.88.185.94:8888/search/${text}`);\n        dispatch({\n            type: SEARCH_EXPERIMENTS,\n            payload: res.data.experiment,\n        });\n      };\n\n    // Get Experiment\n    const getExperiment = async expid => {\n        setLoading();\n        //cleanGraphData();\n        const res = await axios.get(`http://84.88.185.94:8888/expinfo/${expid}`);        \n        dispatch({\n            type: GET_EXPERIMENT,\n            payload: res.data,\n        });\n      };\n    \n    // Get Experiment Graph\n    const getExperimentGraph = async expid => {\n        setLoadingGraph();\n        \n        const res = await axios.get(`http://84.88.185.94:8888/graph/${expid}`);\n        console.log(res.data);\n        dispatch({\n            type: GET_GRAPH,\n            payload: res.data,\n        });\n        //this.setState({ data: res.data, loading: false, showGraph: !res.data.error });\n      };\n\n    // Get Experiment Run\n    const getExperimentRun = async expid => {\n\n    }\n\n    // Cleaning\n    const clearExperiments = () => dispatch({ type: CLEAR_EXPERIMENTS });\n    const cleanGraphData = () => dispatch({ type: CLEAN_GRAPH_DATA });\n\n    // Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING });\n    const setLoadingGraph = () => dispatch({ type: SET_LOADING_GRAPH });\n    const setLoadingRun = () => dispatch({ type: SET_LOADING_RUN });\n\n    // Action Things\n    const updateSelection = (currentSelection) => dispatch({ type: UPDATE_SELECTION, payload: currentSelection });\n\n\n\n    return (\n        <ExperimentContext.Provider\n        value ={{\n            experiments: state.experiments,\n            experiment: state.experiment,\n            loading: state.loading,\n            loadingGraph: state.loadingGraph,\n            loadingRun: state.loadingRun,\n            data: state.data,\n            selection: state.selection,\n            enabledGraphSearch: state.enabledGraphSearch,\n            searchExperiments,\n            clearExperiments,\n            getExperiment,\n            getExperimentGraph,\n            cleanGraphData, \n            updateSelection,\n            getExperimentRun,         \n        }}>\n            {props.children}\n        </ExperimentContext.Provider>\n    );\n};\n\nexport default ExperimentState;"]},"metadata":{},"sourceType":"module"}