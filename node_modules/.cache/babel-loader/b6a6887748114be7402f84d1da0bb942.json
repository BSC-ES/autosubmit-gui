{"ast":null,"code":"import React,{useContext,Fragment}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import TreeContext from\"../context/tree/treeContext\";import JobHistory from\"./JobHistory\";import{secondsToDelta}from\"../context/utils\";import{DEBUG}from\"../context/vars\";var SelectionTreeNode=function SelectionTreeNode(){var experimentContext=useContext(ExperimentContext);var treeContext=useContext(TreeContext);var experiment=experimentContext.experiment;var selectedTreeNode=treeContext.selectedTreeNode,treedata=treeContext.treedata;var selectedNode=null;//var currentNode = \"\";\nif(selectedTreeNode&&selectedTreeNode.node&&selectedTreeNode.node.refKey){var currentNode=selectedTreeNode.node.refKey;if(treedata&&treedata.jobs){selectedNode=treedata.jobs.find(function(job){return job.id===currentNode;});//console.log(selectedNode);\n}else{selectedNode=null;}}else{selectedNode=null;}var copyContent=function copyContent(inputname){return function(e){e.preventDefault();DEBUG&&console.log(\"Sending \"+inputname);window.copyToClip(inputname);};};//console.log(selectedNode);\nreturn/*#__PURE__*/React.createElement(Fragment,null,selectedNode&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white bg-info\",style:experimentStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center p-0\",style:headerCard},/*#__PURE__*/React.createElement(\"div\",{className:\"mh-100 px-0 mx-0\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,selectedNode.id),\" \"),/*#__PURE__*/React.createElement(JobHistory,{source:\"tree\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body py-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Start:\"),\" \",selectedNode.date)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"End:\"),\" \",selectedNode.date_plus))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Section:\"),\" \",selectedNode.section)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Member:\"),\" \",selectedNode.member)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Chunk:\"),\" \",selectedNode.chunk)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Platform:\"),\" \",selectedNode.platform_name&&selectedNode.platform_name,\" \",!selectedNode.platform_name&&experiment.hpc,selectedNode.rm_id&&/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,\" \\xA0 Id: \"),selectedNode.rm_id))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Processors:\"),\" \",selectedNode.processors)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Wallclock:\"),\" \",selectedNode.wallclock)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},\" \",selectedNode.minutes_queue>=0&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge text-center\",style:{width:\"100%\",backgroundColor:selectedNode.status===\"SUBMITTED\"?\"cyan\":\"pink\",color:\"black\"}},/*#__PURE__*/React.createElement(\"small\",null,selectedNode.status===\"SUBMITTED\"?\"Submit\":\"Queue\",\":\"),\" \",secondsToDelta(selectedNode.minutes_queue))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},selectedNode.minutes>=0&&[\"RUNNING\",\"COMPLETED\",\"FAILED\"].includes(selectedNode.status)&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success text-center ml-1\",style:{width:\"100%\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Run:\"),\" \",secondsToDelta(selectedNode.minutes),\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row py-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"span\",{className:\"badge text-center\",style:{width:\"100%\",backgroundColor:selectedNode.status_color,color:selectedNode.status===\"RUNNING\"?\"white\":\"black\"}},\"Status:\",/*#__PURE__*/React.createElement(\"strong\",null,\" \",selectedNode.status))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 px-1\"},selectedNode.children_list&&selectedNode.children_list.length>0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",\"data-toggle\":\"modal\",\"data-target\":\"#childrenList-tree\",type:\"button\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Out:\"),\" \",selectedNode.children)),selectedNode.children_list&&selectedNode.children_list.length===0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",type:\"button\",disabled:true},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Out:\"),\" \",selectedNode.children))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 px-1\"},selectedNode.parent_list!==null&&selectedNode.parents>0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",\"data-toggle\":\"modal\",\"data-target\":\"#parentList-tree\",type:\"button\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"In:\"),\" \",selectedNode.parents)),selectedNode.parent_list!==null&&selectedNode.parents===0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",type:\"button\",disabled:true},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"In:\"),\" \",selectedNode.parents)))),/*#__PURE__*/React.createElement(\"div\",null,selectedNode.out&&/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-0\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:copyContent(\"g_out_t\"),className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control py-0\",type:\"text\",value:selectedNode.out,id:\"g_out_t\",readOnly:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-light btn-sm py-0\",value:\"Copy out\"})))))),selectedNode.err&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-0\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:copyContent(\"g_err_t\"),className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control py-0\",type:\"text\",value:selectedNode.err,id:\"g_err_t\",readOnly:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-light btn-sm py-0\",value:\"Copy err\"}))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,selectedNode.submit!==null&&/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Submit:\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},selectedNode.submit))),selectedNode.start!==null&&/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Start:\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},selectedNode.start))),selectedNode.finish!==null&&/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Finish:\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},selectedNode.finish))))))),selectedNode.wrapper!==null&&selectedNode.wrapper.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Wrapper:\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"small\",null,selectedNode.wrapper)))))))),!selectedNode&&treedata&&treedata.jobs&&/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white bg-info\",style:experimentStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center py-0\"},/*#__PURE__*/React.createElement(\"small\",null,\"Here goes the Job Id\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"small\",null,\"Select a Node to see more information.\"))))),selectedNode&&selectedNode.children_list&&selectedNode.children_list.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"childrenList-tree\",tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"childrenListTitle-tree\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-list\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:\"childrenListTitle-tree\"},\"Children List\"),/*#__PURE__*/React.createElement(\"button\",{className:\"close\",type:\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},/*#__PURE__*/React.createElement(\"ul\",null,selectedNode.children_list.map(function(item,index){return/*#__PURE__*/React.createElement(\"li\",{key:index},item);}))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"))))),selectedNode&&selectedNode.parent_list&&selectedNode.parent_list.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"parentList-tree\",tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"parentListTitle-tree\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-list\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:\"parentListTitle-tree\"},\"Parent List\"),/*#__PURE__*/React.createElement(\"button\",{className:\"close\",type:\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},/*#__PURE__*/React.createElement(\"ul\",null,selectedNode.parent_list.map(function(item,index){return/*#__PURE__*/React.createElement(\"li\",{key:index},item);}))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"))))));};var experimentStyle={height:430};var headerCard={height:30};export default SelectionTreeNode;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/SelectionTreeNode.js"],"names":["React","useContext","Fragment","ExperimentContext","TreeContext","JobHistory","secondsToDelta","DEBUG","SelectionTreeNode","experimentContext","treeContext","experiment","selectedTreeNode","treedata","selectedNode","node","refKey","currentNode","jobs","find","job","id","copyContent","inputname","e","preventDefault","console","log","window","copyToClip","experimentStyle","headerCard","date","date_plus","section","member","chunk","platform_name","hpc","rm_id","processors","wallclock","minutes_queue","width","backgroundColor","status","color","minutes","includes","status_color","children_list","length","children","parent_list","parents","out","err","submit","start","finish","wrapper","map","item","index","height"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport TreeContext from \"../context/tree/treeContext\";\nimport JobHistory from \"./JobHistory\";\nimport { secondsToDelta } from \"../context/utils\";\nimport { DEBUG } from \"../context/vars\";\n\nconst SelectionTreeNode = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const treeContext = useContext(TreeContext);\n  const { experiment } = experimentContext;\n  const { selectedTreeNode, treedata } = treeContext;\n\n  let selectedNode = null;\n  //var currentNode = \"\";\n  if (\n    selectedTreeNode &&\n    selectedTreeNode.node &&\n    selectedTreeNode.node.refKey\n  ) {\n    const currentNode = selectedTreeNode.node.refKey;\n    if (treedata && treedata.jobs) {\n      selectedNode = treedata.jobs.find((job) => job.id === currentNode);\n      //console.log(selectedNode);\n    } else {\n      selectedNode = null;\n    }\n  } else {\n    selectedNode = null;\n  }\n  \n  const copyContent = (inputname) => (e) => {\n    e.preventDefault();\n    DEBUG && console.log(\"Sending \" + inputname);\n    window.copyToClip(inputname);\n  };\n\n  //console.log(selectedNode);\n  return (\n    <Fragment>\n      {selectedNode && (\n        <Fragment>\n          {/* <div className='row'> */}\n          <div className='col-12 px-0'>\n            <div className='card text-white bg-info' style={experimentStyle}>\n              <div className='card-header text-center p-0' style={headerCard}>\n                <div className='mh-100 px-0 mx-0'>\n                  <small>\n                    <strong>{selectedNode.id}</strong>{\" \"}\n                  </small>\n                  <JobHistory source='tree' />\n                </div>\n              </div>\n              <div className='card-body py-0'>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <small>\n                      <strong>Start:</strong> {selectedNode.date}\n                    </small>\n                  </div>\n                  <div className='col-md-6'>\n                    <small>\n                      <strong>End:</strong> {selectedNode.date_plus}\n                    </small>\n                  </div>\n                </div>\n                <div>\n                  <div className='row'>\n                    <div className='col-12'>\n                      <small>\n                        <strong>Section:</strong> {selectedNode.section}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <div className='row'>\n                    <div className='col-md-6'>\n                      <small>\n                        <strong>Member:</strong> {selectedNode.member}\n                      </small>\n                    </div>\n                    <div className='col-md-6'>\n                      <small>\n                        <strong>Chunk:</strong> {selectedNode.chunk}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <div className='row'>\n                    <div className='col-12'>\n                      <small>\n                        <strong>Platform:</strong>{\" \"}\n                        {selectedNode.platform_name &&\n                          selectedNode.platform_name}{\" \"}\n                        {!selectedNode.platform_name && experiment.hpc}\n                        {selectedNode.rm_id && (\n                          <span>\n                            <strong> &nbsp; Id: </strong>\n                            {selectedNode.rm_id}\n                          </span>\n                        )}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <div className='row'>\n                    <div className='col-6'>\n                      <small>\n                        <strong>Processors:</strong> {selectedNode.processors}\n                      </small>\n                    </div>\n                    <div className='col-6'>\n                      <small>\n                        <strong>Wallclock:</strong> {selectedNode.wallclock}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    {\" \"}\n                    {selectedNode.minutes_queue >= 0 && (\n                      <span\n                        className='badge text-center'\n                        style={{\n                          width: \"100%\",\n                          backgroundColor:\n                            selectedNode.status === \"SUBMITTED\"\n                              ? \"cyan\"\n                              : \"pink\",\n                          color: \"black\",\n                        }}\n                      >\n                        <small>\n                          {selectedNode.status === \"SUBMITTED\"\n                            ? \"Submit\"\n                            : \"Queue\"}\n                          :\n                        </small>{\" \"}\n                        {secondsToDelta(selectedNode.minutes_queue)}\n                        {/* <small>min.</small> */}\n                      </span>\n                    )}\n                  </div>\n                  <div className='col-md-6'>\n                    {selectedNode.minutes >= 0 &&\n                      [\"RUNNING\", \"COMPLETED\", \"FAILED\"].includes(\n                        selectedNode.status\n                      ) && (\n                        <span\n                          className='badge badge-success text-center ml-1'\n                          style={{ width: \"100%\" }}\n                        >\n                          <small>Run:</small>{\" \"}\n                          {secondsToDelta(selectedNode.minutes)}{\" \"}\n                          {/* <small>min.</small> */}\n                        </span>\n                      )}\n                  </div>\n                </div>\n\n                <div className='row py-1'>\n                  <div className='col-md-6'>\n                    <span\n                      className='badge text-center'\n                      style={{\n                        width: \"100%\",\n                        backgroundColor: selectedNode.status_color,\n                        color:\n                          selectedNode.status === \"RUNNING\" ? \"white\" : \"black\",\n                      }}\n                    >\n                      Status:\n                      <strong> {selectedNode.status}</strong>\n                    </span>\n                  </div>\n                  <div className='col-md-3 px-1'>\n                    {selectedNode.children_list &&\n                      selectedNode.children_list.length > 0 && (\n                        <button\n                          className='btn-sm btn-dark btn-block'\n                          data-toggle='modal'\n                          data-target='#childrenList-tree'\n                          type='button'\n                        >\n                          <small>\n                            <strong>Out:</strong> {selectedNode.children}\n                          </small>\n                        </button>\n                      )}\n                    {selectedNode.children_list &&\n                      selectedNode.children_list.length === 0 && (\n                        <button\n                          className='btn-sm btn-dark btn-block'\n                          type='button'\n                          disabled\n                        >\n                          <small>\n                            <strong>Out:</strong> {selectedNode.children}\n                          </small>\n                        </button>\n                      )}\n                  </div>\n                  <div className='col-md-3 px-1'>\n                    {selectedNode.parent_list !== null &&\n                      selectedNode.parents > 0 && (\n                        <button\n                          className='btn-sm btn-dark btn-block'\n                          data-toggle='modal'\n                          data-target='#parentList-tree'\n                          type='button'\n                        >\n                          <small>\n                            <strong>In:</strong> {selectedNode.parents}\n                          </small>\n                        </button>\n                      )}\n                    {selectedNode.parent_list !== null &&\n                      selectedNode.parents === 0 && (\n                        <button\n                          className='btn-sm btn-dark btn-block'\n                          type='button'\n                          disabled\n                        >\n                          <small>\n                            <strong>In:</strong> {selectedNode.parents}\n                          </small>\n                        </button>\n                      )}\n                  </div>\n                </div>\n                <div>\n                  {selectedNode.out && (\n                    <div className='row'>\n                      <div className='col-12 px-0'>\n                        <form\n                          onSubmit={copyContent(\"g_out_t\")}\n                          className='form'\n                        >\n                          <div className='input-group input-group-sm'>\n                            <input\n                              className='form-control py-0'\n                              type='text'\n                              value={selectedNode.out}\n                              id='g_out_t'\n                              readOnly\n                            />\n                            <div className='input-group-append'>\n                              <input\n                                type='submit'\n                                className='btn btn-light btn-sm py-0'\n                                value='Copy out'\n                              />\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  )}\n                  {selectedNode.err && (\n                    <div className='row mt-1'>\n                      <div className='col-12 px-0'>\n                        <form\n                          onSubmit={copyContent(\"g_err_t\")}\n                          className='form'\n                        >\n                          <div className='input-group input-group-sm'>\n                            <input\n                              className='form-control py-0'\n                              type='text'\n                              value={selectedNode.err}\n                              id='g_err_t'\n                              readOnly\n                            />\n                            <div className='input-group-append'>\n                              <input\n                                type='submit'\n                                className='btn btn-light btn-sm py-0'\n                                value='Copy err'\n                              />\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div className='row'>\n                  <div className='col'>\n                    <table>\n                      <tbody>\n                        {selectedNode.submit !== null && (\n                          <tr>\n                            <td>\n                              <small>Submit:</small>\n                            </td>\n                            <td>\n                              <span className='badge badge-dark'>\n                                {selectedNode.submit}\n                              </span>\n                            </td>\n                          </tr>\n                        )}\n                        {selectedNode.start !== null && (\n                          <tr>\n                            <td>\n                              <small>Start:</small>\n                            </td>\n                            <td>\n                              <span className='badge badge-dark'>\n                                {selectedNode.start}\n                              </span>\n                            </td>\n                          </tr>\n                        )}\n                        {selectedNode.finish !== null && (\n                          <tr>\n                            <td>\n                              <small>Finish:</small>\n                            </td>\n                            <td>\n                              <span className='badge badge-dark'>\n                                {selectedNode.finish}\n                              </span>\n                            </td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                {selectedNode.wrapper !== null &&\n                  selectedNode.wrapper.length > 0 && (\n                    <div>\n                      <div className='row'>\n                        <div className='col-12'>\n                          <small>\n                            <strong>Wrapper:</strong>\n                          </small>\n                        </div>\n                      </div>\n                      <div className='row'>\n                        <div className='col-12'>\n                          <small>{selectedNode.wrapper}</small>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                {/* {selectedNode.wrapper_code !== null &&\n                  selectedNode.wrapper_code.length > 0 && (\n                    <div>\n                      <div className='row'>\n                        <div className='col-6'>\n                          <small>\n                            <strong>Code:</strong>\n                          </small>\n                        </div>\n                        <div className='col-6'>\n                          <small>{selectedNode.wrapper_code}</small>\n                        </div>\n                      </div>\n                    </div>\n                  )} */}\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n      {!selectedNode && treedata && treedata.jobs && (\n        <div className='col-12 px-0'>\n          <div className='card text-white bg-info' style={experimentStyle}>\n            <div className='card-header text-center py-0'>\n              <small>Here goes the Job Id</small>\n            </div>\n            <div className='card-body'>\n              <div className='text-center'>\n                <small>Select a Node to see more information.</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {selectedNode &&\n        selectedNode.children_list &&\n        selectedNode.children_list.length > 0 && (\n          <div\n            className='modal fade'\n            id='childrenList-tree'\n            tabIndex='-1'\n            role='dialog'\n            aria-labelledby='childrenListTitle-tree'\n            aria-hidden='true'\n          >\n            <div className='modal-dialog modal-dialog-list' role='document'>\n              <div className='modal-content'>\n                <div className='modal-header'>\n                  <h5 className='modal-title' id='childrenListTitle-tree'>\n                    Children List\n                  </h5>\n                  <button\n                    className='close'\n                    type='button'\n                    data-dismiss='modal'\n                    aria-label='Close'\n                  >\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  <ul>\n                    {selectedNode.children_list.map((item, index) => (\n                      <li key={index}>{item}</li>\n                    ))}\n                  </ul>\n                </div>\n                <div className='modal-footer'>\n                  <button\n                    type='button'\n                    className='btn btn-secondary'\n                    data-dismiss='modal'\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      {selectedNode &&\n        selectedNode.parent_list &&\n        selectedNode.parent_list.length > 0 && (\n          <div\n            className='modal fade'\n            id='parentList-tree'\n            tabIndex='-1'\n            role='dialog'\n            aria-labelledby='parentListTitle-tree'\n            aria-hidden='true'\n          >\n            <div className='modal-dialog modal-dialog-list' role='document'>\n              <div className='modal-content'>\n                <div className='modal-header'>\n                  <h5 className='modal-title' id='parentListTitle-tree'>\n                    Parent List\n                  </h5>\n                  <button\n                    className='close'\n                    type='button'\n                    data-dismiss='modal'\n                    aria-label='Close'\n                  >\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  <ul>\n                    {selectedNode.parent_list.map((item, index) => (\n                      <li key={index}>{item}</li>\n                    ))}\n                  </ul>\n                </div>\n                <div className='modal-footer'>\n                  <button\n                    type='button'\n                    className='btn btn-secondary'\n                    data-dismiss='modal'\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nconst experimentStyle = {\n  height: 430,\n};\n\nconst headerCard = {\n  height: 30,\n};\n\nexport default SelectionTreeNode;\n"]},"metadata":{},"sourceType":"module"}