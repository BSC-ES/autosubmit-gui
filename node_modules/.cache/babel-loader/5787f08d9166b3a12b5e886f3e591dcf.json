{"ast":null,"code":"import _slicedToArray from \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/statistics/StatsSearch.js\";\nimport React, { useState, useContext } from 'react';\nimport StatsContext from '../context/statistics/statsContext';\nimport ExperimentContext from '../context/experiment/experimentContext';\nimport Chart from 'react-google-charts';\nimport Spinner from '../layout/Spinner';\n\nconst StatsSearch = () => {\n  const statsContext = useContext(StatsContext);\n  const experimentContext = useContext(ExperimentContext);\n  const getExperimentStats = statsContext.getExperimentStats,\n        statdata = statsContext.statdata,\n        loading = statsContext.loading,\n        clearStats = statsContext.clearStats,\n        isError = statsContext.isError,\n        errorMessage = statsContext.errorMessage;\n  const experiment = experimentContext.experiment; // const data = [\n  //     [\"Year\", \"Visitations\", \"Crashes\", { role: \"style\" }],\n  //     [\"2010\", 10, 30, \"color: gray\"],\n  //     [\"2020\", 14, 25, \"color: #76A7FA\"],\n  //     [\"2030\", 16, 24, \"color: blue\"],\n  //     [\"2040\", 22, 32, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"],\n  //     [\n  //       \"2050\",\n  //       28,\n  //       23,\n  //       \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"\n  //     ]\n  // ];\n\n  const options = {\n    chartArea: {\n      width: '90%'\n    },\n    hAxis: {\n      title: 'Jobs'\n    },\n    vAxis: {\n      title: 'Hours'\n    }\n  };\n\n  const onSubmitStats = e => {\n    e.preventDefault();\n    console.log(experiment.expid);\n    console.log(\"Hours : \" + hour);\n    console.log(\"Type : \" + section);\n    getExperimentStats(experiment.expid, hour, section);\n  };\n\n  const onSubmitClear = e => {\n    e.preventDefault();\n    clearStats();\n  };\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        hour = _useState2[0],\n        setHour = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        section = _useState4[0],\n        setSection = _useState4[1];\n\n  const onChangeHour = e => setHour(e.target.value);\n\n  const onChangeSection = e => setSection(e.target.value);\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-4 offset-md-4 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, !statdata && React.createElement(\"form\", {\n    onSubmit: onSubmitStats,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group input-group-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"section\",\n    placeholder: \"Section\",\n    onChange: onChangeSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"hours\",\n    placeholder: \"Hours\",\n    onChange: onChangeHour,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Get Statistics\",\n    className: \"btn btn-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })))), statdata && React.createElement(\"form\", {\n    onSubmit: onSubmitClear,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Clear Statistics\",\n    className: \"btn btn-dark btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), statdata && !isError && React.createElement(Chart, {\n    chartType: \"ColumnChart\",\n    width: '100%',\n    height: '500px',\n    data: statdata,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), statdata && isError && React.createElement(\"div\", {\n    className: \"col-md-12 text-center p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, errorMessage)));\n};\n\nexport default StatsSearch;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/statistics/StatsSearch.js"],"names":["React","useState","useContext","StatsContext","ExperimentContext","Chart","Spinner","StatsSearch","statsContext","experimentContext","getExperimentStats","statdata","loading","clearStats","isError","errorMessage","experiment","options","chartArea","width","hAxis","title","vAxis","onSubmitStats","e","preventDefault","console","log","expid","hour","section","onSubmitClear","setHour","setSection","onChangeHour","target","value","onChangeSection"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport StatsContext from '../context/statistics/statsContext';\nimport ExperimentContext from '../context/experiment/experimentContext';\nimport Chart from 'react-google-charts';\nimport Spinner from '../layout/Spinner';\n\nconst StatsSearch = () => {\n    const statsContext = useContext(StatsContext); \n    const experimentContext = useContext(ExperimentContext);\n    \n    const { getExperimentStats, \n            statdata, \n            loading, \n            clearStats, \n            isError, \n            errorMessage } = statsContext;\n    const { experiment } = experimentContext;\n\n    // const data = [\n    //     [\"Year\", \"Visitations\", \"Crashes\", { role: \"style\" }],\n    //     [\"2010\", 10, 30, \"color: gray\"],\n    //     [\"2020\", 14, 25, \"color: #76A7FA\"],\n    //     [\"2030\", 16, 24, \"color: blue\"],\n    //     [\"2040\", 22, 32, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"],\n    //     [\n    //       \"2050\",\n    //       28,\n    //       23,\n    //       \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"\n    //     ]\n    // ];\n\n    const options = {   \n        chartArea: { width: '90%'},\n        hAxis: {\n            title: 'Jobs',\n        },\n        vAxis: {\n            title: 'Hours',\n        }, \n    }\n    \n    \n    \n    const onSubmitStats = e => {\n        e.preventDefault();    \n        console.log(experiment.expid);\n        console.log(\"Hours : \" + hour);\n        console.log(\"Type : \" + section);\n        getExperimentStats(experiment.expid, hour, section)\n    }\n\n    const onSubmitClear = e => {\n        e.preventDefault();\n        clearStats();\n\n    }\n    \n    const [hour, setHour] = useState('');\n    const [section, setSection] = useState('');\n    const onChangeHour = e => setHour(e.target.value);\n    const onChangeSection = e => setSection(e.target.value);\n\n    return (\n        <div className='row'>\n            <div className='col-md-4 offset-md-4 text-center'>\n                {!statdata && \n                    <form onSubmit={onSubmitStats} className='form'>\n                        <div className=\"input-group input-group-sm\">                      \n                            <input\n                                className=\"form-control\"\n                                type='text'\n                                name='section'\n                                placeholder='Section'                          \n                                onChange={onChangeSection}\n                            />\n                            <input\n                                className=\"form-control\"\n                                type='text'\n                                name='hours'\n                                placeholder='Hours'                          \n                                onChange={onChangeHour}\n                            />                    \n                            <div className=\"input-group-append\">\n                                <input          \n                                type='submit'\n                                value='Get Statistics'\n                                className='btn btn-info'\n                                />\n                            </div>                    \n                        </div>\n                    </form>\n                }                \n                {statdata &&\n                    <form onSubmit={onSubmitClear} className='form'> \n                        <div className=\"\">\n                            <input          \n                            type='submit'\n                            value='Clear Statistics'\n                            className='btn btn-dark btn-sm'\n                            />\n                        </div>        \n                    </form>\n                }   \n            </div>\n            <div className=\"col-md-12\">\n                {loading && <Spinner />}\n                {statdata && !isError &&\n                    <Chart\n                    chartType=\"ColumnChart\"\n                    width={'100%'}\n                    height={'500px'}\n                    data={statdata}\n                    options={options}\n                    /> \n                }\n                {statdata && isError &&\n                    <div className=\"col-md-12 text-center p-3\">\n                        {errorMessage}\n                    </div>\n                }\n            </div>\n        </div>\n        \n    )\n}\n\nexport default StatsSearch;\n"]},"metadata":{},"sourceType":"module"}