{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js\";\nimport React, { Fragment, useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport GraphRepresentation from \"./GraphRepresentation\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiment = ({\n  match\n}) => {\n  const experimentContext = useContext(ExperimentContext);\n  const getExperiment = experimentContext.getExperiment,\n        getExperimentGraph = experimentContext.getExperimentGraph,\n        loading = experimentContext.loading,\n        experiment = experimentContext.experiment,\n        data = experimentContext.data;\n  useEffect(() => {\n    console.log(match.params.expid);\n    getExperiment(match.params.expid); // eslint-disable-next-line\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  }; // const cleanParentLocal = () => {\n  //   console.log('Exp clean ')\n  //   cleanParent();\n  // };\n\n\n  const expid = experiment.expid,\n        contents = experiment.contents,\n        error_message = experiment.error_message,\n        owner = experiment.owner,\n        owner_id = experiment.owner_id,\n        path = experiment.path,\n        time_last_access = experiment.time_last_access,\n        time_last_mod = experiment.time_last_mod,\n        description = experiment.description,\n        version = experiment.version,\n        model = experiment.model,\n        branch = experiment.branch,\n        hpc = experiment.hpc;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Back To Search\"), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Owner: \", owner_id, \" \", owner), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Last Access: \", time_last_access), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Last Modified: \", time_last_mod)), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, expid), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Description: \", description), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Version: \", version)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, error_message !== \"None\" && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Error Message: \", error_message, \" \"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, path && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Path: \"), \" \", path)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, time_last_access && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Last Access: \"), \" \", time_last_access)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, time_last_mod && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Last Modified: \"), \" \", time_last_mod)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, contents && React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Contents\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, contents && contents.map(content => React.createElement(\"li\", {\n    key: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"- \", path, \"/\", content))))))), React.createElement(\"div\", {\n    className: \"card grid-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Show Graph\",\n    className: \"btn btn-success btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card grid-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Model:\"), \" \", model), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Branch:\"), \" \", branch), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Hpc:\"), \" \", hpc))));\n}; // const experimentStyle = {\n//   display: \"grid\",\n//   gridTemplateColumns: \"repeat(4, 1fr)\",\n//   gridGap: \"1rem\"\n// };\n\n\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js"],"names":["React","Fragment","useEffect","useContext","Spinner","GraphRepresentation","PropTypes","Link","ExperimentContext","Experiment","match","experimentContext","getExperiment","getExperimentGraph","loading","experiment","data","console","log","params","expid","onSubmit","e","preventDefault","contents","error_message","owner","owner_id","path","time_last_access","time_last_mod","description","version","model","branch","hpc","map","content","propTypes","bool","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport GraphRepresentation from \"./GraphRepresentation\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiment = ({ match }) => {\n  const experimentContext = useContext(ExperimentContext); \n  const { getExperiment, getExperimentGraph, loading, experiment, data } = experimentContext;\n  useEffect(() => {\n    console.log(match.params.expid);\n    getExperiment(match.params.expid);\n    // eslint-disable-next-line\n  }, []);\n\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  };\n\n  // const cleanParentLocal = () => {\n  //   console.log('Exp clean ')\n  //   cleanParent();\n  // };\n\n  const {\n    expid,\n    contents,\n    error_message,\n    owner,\n    owner_id,\n    path,\n    time_last_access,\n    time_last_mod,\n    description,\n    version,\n    model,\n    branch,\n    hpc,\n  } = experiment;\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back To Search\n      </Link>\n      {/* Message:{' '} */}\n      {/* {error_message.length() === 4 ? (\n        <i className='fas fa-check text-success' />\n      ) : (\n        <i className='fas fa-times-circle text-danger' />\n      )} */}\n      <div className='card text-center'>\n        <div className='badge badge-primary'>\n          Owner: {owner_id} {owner}\n        </div>\n        <div className='badge badge-success'>\n          Last Access: {time_last_access}\n        </div>\n        <div className='badge badge-light'>\n          Last Modified: {time_last_mod}\n        </div>\n      </div>\n      <div className='card grid-2'>\n        <div className='all-center'>\n          {/* <img\n            src={avatar_url}\n            className='round-img'\n            alt=''\n            style={{ width: '150px' }}\n          /> */}\n          <h1>{expid}</h1>\n          <p>Description: {description}</p>\n          <small>Version: {version}</small>\n        </div>\n        <div>\n          {/* {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1'>\n            Visit Github Profile\n          </a> */}\n          <ul>\n            <li>\n              {error_message !== \"None\" && (\n                <Fragment>\n                  <strong>Error Message: {error_message} </strong>\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {path && (\n                <Fragment>\n                  <strong>Path: </strong> {path}\n                </Fragment>\n              )}\n            </li>\n\n            <li>\n              {time_last_access && (\n                <Fragment>\n                  <strong>Last Access: </strong> {time_last_access}\n                </Fragment>\n              )}\n            </li>\n\n            <li>\n              {time_last_mod && (\n                <Fragment>\n                  <strong>Last Modified: </strong> {time_last_mod}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {contents && <strong>Contents</strong>}\n              <ul>\n                {contents &&\n                  contents.map(content => (\n                    <li key={content}>\n                      - {path}/{content}\n                    </li>\n                  ))}\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className='card grid-1'>\n        <form onSubmit={onSubmit} className='form'>\n          <input\n            type='submit'\n            value='Show Graph'\n            className='btn btn-success btn-block'\n          />\n        </form>\n                    \n        {/* {data.error === true &&\n        <p className='text-danger'>{data.error_message}</p>}\n        {showGraph && (\n          <GraphRepresentation\n            nodes_prop={data.nodes}\n            edges_prop={data.edges}\n          />\n        )} */}\n      </div>\n      <div>\n        <div className=\"card grid-3\">\n          <div>\n          <strong>Model:</strong> {model}\n          </div>\n          <div>\n          <strong>Branch:</strong> {branch}\n          </div>\n          <div>\n          <strong>Hpc:</strong> {hpc}\n          </div>          \n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\n// const experimentStyle = {\n//   display: \"grid\",\n//   gridTemplateColumns: \"repeat(4, 1fr)\",\n//   gridGap: \"1rem\"\n// };\n\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}