{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/pages/ExperimentCentral.js\";\nimport React, { Fragment, useContext } from 'react';\nimport Experiment from '../experiment/Experiment';\nimport GraphRepresentation from '../experiment/GraphRepresentation';\nimport ExperimentContext from '../context/experiment/experimentContext';\nimport Selection from '../experiment/Selection';\nimport OpenRun from '../experiment/OpenRun';\nimport Running from '../experiment/Running';\n\nconst ExperimentCentral = ({\n  match\n}) => {\n  const expid = match.params.expid;\n  const experimentContext = useContext(ExperimentContext);\n  const rundata = experimentContext.rundata,\n        data = experimentContext.data,\n        updateSelection = experimentContext.updateSelection,\n        loadingGraph = experimentContext.loadingGraph,\n        loadingRun = experimentContext.loadingRun,\n        cleanGraphData = experimentContext.cleanGraphData,\n        cleanRunData = experimentContext.cleanRunData,\n        hashCode = experimentContext.hashCode;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Experiment, {\n    expidToken: expid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(GraphRepresentation, {\n    data: data,\n    updateSelection: updateSelection,\n    loadingGraph: loadingGraph,\n    cleanGraphData: cleanGraphData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Selection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(OpenRun, {\n    expidToken: expid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Running, {\n    rundata: rundata,\n    loadingRun: loadingRun,\n    cleanRunData: cleanRunData,\n    hashCode: hashCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nexport default ExperimentCentral;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/pages/ExperimentCentral.js"],"names":["React","Fragment","useContext","Experiment","GraphRepresentation","ExperimentContext","Selection","OpenRun","Running","ExperimentCentral","match","expid","params","experimentContext","rundata","data","updateSelection","loadingGraph","loadingRun","cleanGraphData","cleanRunData","hashCode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACrC,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,QAAME,iBAAiB,GAAGX,UAAU,CAACG,iBAAD,CAApC;AAFqC,QAG7BS,OAH6B,GAGwED,iBAHxE,CAG7BC,OAH6B;AAAA,QAGpBC,IAHoB,GAGwEF,iBAHxE,CAGpBE,IAHoB;AAAA,QAGdC,eAHc,GAGwEH,iBAHxE,CAGdG,eAHc;AAAA,QAGGC,YAHH,GAGwEJ,iBAHxE,CAGGI,YAHH;AAAA,QAGiBC,UAHjB,GAGwEL,iBAHxE,CAGiBK,UAHjB;AAAA,QAG6BC,cAH7B,GAGwEN,iBAHxE,CAG6BM,cAH7B;AAAA,QAG6CC,YAH7C,GAGwEP,iBAHxE,CAG6CO,YAH7C;AAAA,QAG2DC,QAH3D,GAGwER,iBAHxE,CAG2DQ,QAH3D;AAKrC,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEV,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAEI,IAA3B;AAAiC,IAAA,eAAe,EAAEC,eAAlD;AAAmE,IAAA,YAAY,EAAEC,YAAjF;AAA+F,IAAA,cAAc,EAAEE,cAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAER,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEG,OAAlB;AAA2B,IAAA,UAAU,EAAEI,UAAvC;AAAmD,IAAA,YAAY,EAAEE,YAAjE;AAA+E,IAAA,QAAQ,EAAEC,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADA;AASH,CAdD;;AAgBA,eAAeZ,iBAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport Experiment from '../experiment/Experiment';\nimport GraphRepresentation from '../experiment/GraphRepresentation';\nimport ExperimentContext from '../context/experiment/experimentContext';\nimport Selection from '../experiment/Selection';\nimport OpenRun from '../experiment/OpenRun';\nimport Running from '../experiment/Running';\n\nconst ExperimentCentral = ({ match }) => {\n    const expid = match.params.expid;\n    const experimentContext = useContext(ExperimentContext);\n    const { rundata, data, updateSelection, loadingGraph, loadingRun, cleanGraphData, cleanRunData, hashCode } = experimentContext;\n    \n    return (\n    <Fragment>\n        <Experiment expidToken={expid} />\n        <GraphRepresentation data={data} updateSelection={updateSelection} loadingGraph={loadingGraph} cleanGraphData={cleanGraphData} />\n        <Selection />\n        <OpenRun expidToken={expid}/>\n        <Running rundata={rundata} loadingRun={loadingRun} cleanRunData={cleanRunData} hashCode={hashCode} />\n    </Fragment>\n    );\n};  \n\nexport default ExperimentCentral;"]},"metadata":{},"sourceType":"module"}