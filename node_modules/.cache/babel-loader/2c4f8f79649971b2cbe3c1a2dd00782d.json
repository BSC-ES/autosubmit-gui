{"ast":null,"code":"import _slicedToArray from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";//import ExperimentContext from \"../context/experiment/experimentContext\";\nimport TreeContext from\"../context/tree/treeContext\";import AlertTotal from\"./AlertTotal\";//import GraphNodeSelection from \"./GraphNodeSelection\";\nvar JobFilter=function JobFilter(){//const experimentContext = useContext(ExperimentContext);\nvar treeContext=useContext(TreeContext);var filterTreeView=treeContext.filterTreeView,treedata=treeContext.treedata,loadingFilterTree=treeContext.loadingFilterTree,clearFilterTreeView=treeContext.clearFilterTreeView,returnFilter=treeContext.returnFilter;// const { totalJobs } = experimentContext;\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),filterString=_useState2[0],setFilterString=_useState2[1];var onSubmit=function onSubmit(e){e.preventDefault();filterTreeView(filterString);};var onChangeFilter=function onChangeFilter(e){return setFilterString(e.target.value);};var onClearFilter=function onClearFilter(e){e.preventDefault();clearFilterTreeView();};var clearText=\"Clear\";if(returnFilter&&returnFilter>=0){clearText=\"Clear Result\";}// if (treedata) {\n//   if (totalJobs !== treedata.total) {\n//     alert(\n//       \"The number of jobs in the experiment is different than the number of jobs in your current run. This might be due to a change in the config files of your experiment while Autosubmit was already running.\"\n//     );\n//   }\n// }\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4 pr-1\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit,className:\"form\",autoComplete:\"off\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"text\",name:\"section\",placeholder:\"Filter text\",onChange:onChangeFilter}),loadingFilterTree&&/*#__PURE__*/React.createElement(\"span\",null,\"Searching...\"),!loadingFilterTree&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Filter\",className:\"btn btn-dark btn-sm\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4 text-left pl-1\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onClearFilter,className:\"form\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:clearText,className:\"btn btn-info btn-sm\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4 text-right text-muted pr-4\"},treedata&&treedata.jobs&&/*#__PURE__*/React.createElement(\"small\",null,\"Total #Jobs: \",treedata.total,\" \",/*#__PURE__*/React.createElement(AlertTotal,{source:\"tree\"}),\" | Chunk unit: \",/*#__PURE__*/React.createElement(\"strong\",null,treedata.reference.chunk_unit),\" | Chunk size:\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,treedata.reference.chunk_size),\" \")));};export default JobFilter;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobFilter.js"],"names":["React","useContext","useState","TreeContext","AlertTotal","JobFilter","treeContext","filterTreeView","treedata","loadingFilterTree","clearFilterTreeView","returnFilter","filterString","setFilterString","onSubmit","e","preventDefault","onChangeFilter","target","value","onClearFilter","clearText","jobs","total","reference","chunk_unit","chunk_size"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA;AAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB;AACA,GAAMC,CAAAA,WAAW,CAAGL,UAAU,CAACE,WAAD,CAA9B,CAFsB,GAIpBI,CAAAA,cAJoB,CASlBD,WATkB,CAIpBC,cAJoB,CAKpBC,QALoB,CASlBF,WATkB,CAKpBE,QALoB,CAMpBC,iBANoB,CASlBH,WATkB,CAMpBG,iBANoB,CAOpBC,mBAPoB,CASlBJ,WATkB,CAOpBI,mBAPoB,CAQpBC,YARoB,CASlBL,WATkB,CAQpBK,YARoB,CAUtB;AAVsB,cAYkBT,QAAQ,CAAC,EAAD,CAZ1B,wCAYfU,YAZe,eAYDC,eAZC,eAatB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACAT,cAAc,CAACK,YAAD,CAAd,CACD,CAHD,CAKA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,CAAD,QAAOF,CAAAA,eAAe,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAtB,EAAvB,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAN,mBAAmB,GACpB,CAHD,CAKA,GAAIW,CAAAA,SAAS,CAAG,OAAhB,CACA,GAAIV,YAAY,EAAIA,YAAY,EAAI,CAApC,CAAuC,CACrCU,SAAS,CAAG,cAAZ,CACD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,eAAf,eACE,4BAAM,QAAQ,CAAEP,QAAhB,CAA0B,SAAS,CAAC,MAApC,CAA2C,YAAY,CAAC,KAAxD,eACE,2BAAK,SAAS,CAAC,4BAAf,eACE,6BACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,SAHP,CAIE,WAAW,CAAC,aAJd,CAKE,QAAQ,CAAEG,cALZ,EADF,CAQGR,iBAAiB,eAAI,+CARxB,CASG,CAACA,iBAAD,eACC,2BAAK,SAAS,CAAC,oBAAf,eACE,6BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,QAFR,CAGE,SAAS,CAAC,qBAHZ,EADF,CAVJ,CADF,CADF,CADF,cAwBE,2BAAK,SAAS,CAAC,yBAAf,eACE,4BAAM,QAAQ,CAAEW,aAAhB,CAA+B,SAAS,CAAC,MAAzC,eACE,6BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEC,SAFT,CAGE,SAAS,CAAC,qBAHZ,EADF,CADF,CAxBF,cAiCE,2BAAK,SAAS,CAAC,qCAAf,EACGb,QAAQ,EAAIA,QAAQ,CAACc,IAArB,eACC,iDACgBd,QAAQ,CAACe,KADzB,kBACgC,oBAAC,UAAD,EAAY,MAAM,CAAE,MAApB,EADhC,gCAEQ,kCAASf,QAAQ,CAACgB,SAAT,CAAmBC,UAA5B,CAFR,kBAEuE,GAFvE,cAGE,kCAASjB,QAAQ,CAACgB,SAAT,CAAmBE,UAA5B,CAHF,CAGmD,GAHnD,CAFJ,CAjCF,CADF,CA6CD,CAlFD,CAoFA,cAAerB,CAAAA,SAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\n//import ExperimentContext from \"../context/experiment/experimentContext\";\nimport TreeContext from \"../context/tree/treeContext\";\nimport AlertTotal from \"./AlertTotal\";\n//import GraphNodeSelection from \"./GraphNodeSelection\";\n\nconst JobFilter = () => {\n  //const experimentContext = useContext(ExperimentContext);\n  const treeContext = useContext(TreeContext);\n  const {\n    filterTreeView,\n    treedata,\n    loadingFilterTree,\n    clearFilterTreeView,\n    returnFilter,\n  } = treeContext;\n  // const { totalJobs } = experimentContext;\n\n  const [filterString, setFilterString] = useState(\"\");\n  const onSubmit = (e) => {\n    e.preventDefault();\n    filterTreeView(filterString);\n  };\n\n  const onChangeFilter = (e) => setFilterString(e.target.value);\n  const onClearFilter = (e) => {\n    e.preventDefault();\n    clearFilterTreeView();\n  };\n\n  var clearText = \"Clear\";\n  if (returnFilter && returnFilter >= 0) {\n    clearText = \"Clear Result\";\n  }\n\n  // if (treedata) {\n  //   if (totalJobs !== treedata.total) {\n  //     alert(\n  //       \"The number of jobs in the experiment is different than the number of jobs in your current run. This might be due to a change in the config files of your experiment while Autosubmit was already running.\"\n  //     );\n  //   }\n  // }\n\n  return (\n    <div className='row'>\n      <div className='col-md-4 pr-1'>\n        <form onSubmit={onSubmit} className='form' autoComplete='off'>\n          <div className='input-group input-group-sm'>\n            <input\n              className='form-control'\n              type='text'\n              name='section'\n              placeholder='Filter text'\n              onChange={onChangeFilter}\n            />\n            {loadingFilterTree && <span>Searching...</span>}\n            {!loadingFilterTree && (\n              <div className='input-group-append'>\n                <input\n                  type='submit'\n                  value='Filter'\n                  className='btn btn-dark btn-sm'\n                />\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n      <div className='col-md-4 text-left pl-1'>\n        <form onSubmit={onClearFilter} className='form'>\n          <input\n            type='submit'\n            value={clearText}\n            className='btn btn-info btn-sm'\n          />\n        </form>\n      </div>\n      <div className='col-md-4 text-right text-muted pr-4'>\n        {treedata && treedata.jobs && (\n          <small>\n            Total #Jobs: {treedata.total} <AlertTotal source={\"tree\"} /> | Chunk\n            unit: <strong>{treedata.reference.chunk_unit}</strong> | Chunk size:{\" \"}\n            <strong>{treedata.reference.chunk_size}</strong>{\" \"}\n          </small>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JobFilter;\n"]},"metadata":{},"sourceType":"module"}