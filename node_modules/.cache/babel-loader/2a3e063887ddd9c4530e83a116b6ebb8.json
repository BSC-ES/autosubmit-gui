{"ast":null,"code":"import React, { Fragment, useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiment = ({\n  match\n}) => {\n  const experimentContext = useContext(ExperimentContext);\n  const getExperiment = experimentContext.getExperiment,\n        getExperimentGraph = experimentContext.getExperimentGraph,\n        loading = experimentContext.loading,\n        experiment = experimentContext.experiment;\n  useEffect(() => {\n    console.log(match.params.expid);\n    getExperiment(match.params.expid); // eslint-disable-next-line\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  }; // const cleanParentLocal = () => {\n  //   console.log('Exp clean ')\n  //   cleanParent();\n  // };\n  // const {\n  //   expid,\n  //   contents,\n  //   error_message,\n  //   owner,\n  //   owner_id,\n  //   path,\n  //   time_last_access,\n  //   time_last_mod,\n  //   description,\n  //   version,\n  //   model,\n  //   branch,\n  //   hpc,\n  // } = experiment;\n  // if (loading) return <Spinner />;\n  // return (\n  //   <Fragment>\n  //     <Link to='/' className='btn btn-light'>\n  //       Back To Search\n  //     </Link>\n  //     <div className='card text-center'>\n  //       <div className='badge badge-primary'>\n  //         Owner: {owner_id} {owner}\n  //       </div>\n  //       <div className='badge badge-success'>\n  //         Last Access: {time_last_access}\n  //       </div>\n  //       <div className='badge badge-light'>\n  //         Last Modified: {time_last_mod}\n  //       </div>\n  //     </div>\n  //     <div className='card grid-2'>\n  //       <div className='all-center'>\n  //         <h1>{expid}</h1>\n  //         <p>Description: {description}</p>\n  //         <small>Version: {version}</small>\n  //       </div>\n  //       <div>\n  //         <ul>\n  //           <li>\n  //             {error_message !== \"None\" && (\n  //               <Fragment>\n  //                 <strong>Error Message: {error_message} </strong>\n  //               </Fragment>\n  //             )}\n  //           </li>\n  //           <li>\n  //             {path && (\n  //               <Fragment>\n  //                 <strong>Path: </strong> {path}\n  //               </Fragment>\n  //             )}\n  //           </li>\n  //           <li>\n  //             {time_last_access && (\n  //               <Fragment>\n  //                 <strong>Last Access: </strong> {time_last_access}\n  //               </Fragment>\n  //             )}\n  //           </li>\n  //           <li>\n  //             {time_last_mod && (\n  //               <Fragment>\n  //                 <strong>Last Modified: </strong> {time_last_mod}\n  //               </Fragment>\n  //             )}\n  //           </li>\n  //           <li>\n  //             {contents && <strong>Contents</strong>}\n  //             <ul>\n  //               {contents &&\n  //                 contents.map(content => (\n  //                   <li key={content}>\n  //                     - {path}/{content}\n  //                   </li>\n  //                 ))}\n  //             </ul>\n  //           </li>\n  //         </ul>\n  //       </div>\n  //     </div>\n  //     <div className='card grid-1'>\n  //       <form onSubmit={onSubmit} className='form'>\n  //         <input\n  //           type='submit'\n  //           value='Show Graph'\n  //           className='btn btn-success btn-block'\n  //         />\n  //       </form>\n  //       {/* {data.error === true &&\n  //       <p className='text-danger'>{data.error_message}</p>}\n  //       {showGraph && (\n  //         <GraphRepresentation\n  //           nodes_prop={data.nodes}\n  //           edges_prop={data.edges}\n  //         />\n  //       )} */}\n  //     </div>\n  //     <div>\n  //       <div className=\"card grid-3\">\n  //         <div>\n  //         <strong>Model:</strong> {model}\n  //         </div>\n  //         <div>\n  //         <strong>Branch:</strong> {branch}\n  //         </div>\n  //         <div>\n  //         <strong>Hpc:</strong> {hpc}\n  //         </div>          \n  //       </div>\n  //     </div>\n  //   </Fragment>\n  // );\n\n};\n\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Link","ExperimentContext","Experiment","match","experimentContext","getExperiment","getExperimentGraph","loading","experiment","console","log","params","expid","onSubmit","e","preventDefault"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAChC,QAAMC,iBAAiB,GAAGN,UAAU,CAACG,iBAAD,CAApC;AADgC,QAExBI,aAFwB,GAEmCD,iBAFnC,CAExBC,aAFwB;AAAA,QAETC,kBAFS,GAEmCF,iBAFnC,CAETE,kBAFS;AAAA,QAEWC,OAFX,GAEmCH,iBAFnC,CAEWG,OAFX;AAAA,QAEoBC,UAFpB,GAEmCJ,iBAFnC,CAEoBI,UAFpB;AAIhCX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,MAAN,CAAaC,KAAzB;AACAP,IAAAA,aAAa,CAACF,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAb,CAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,kBAAkB,CAACE,UAAU,CAACI,KAAZ,CAAlB;AACD,GAHD,CAVgC,CAehgJA,eAAeV,UAAf","sourcesContent":["import React, { Fragment, useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiment = ({ match }) => {\n  const experimentContext = useContext(ExperimentContext); \n  const { getExperiment, getExperimentGraph, loading, experiment } = experimentContext;\n\n  useEffect(() => {\n    console.log(match.params.expid);\n    getExperiment(match.params.expid);\n    // eslint-disable-next-line\n  }, []);\n  \n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  };\n\n  // const cleanParentLocal = () => {\n  //   console.log('Exp clean ')\n  //   cleanParent();\n  // };\n\n  \n  // const {\n  //   expid,\n  //   contents,\n  //   error_message,\n  //   owner,\n  //   owner_id,\n  //   path,\n  //   time_last_access,\n  //   time_last_mod,\n  //   description,\n  //   version,\n  //   model,\n  //   branch,\n  //   hpc,\n  // } = experiment;\n\n  // if (loading) return <Spinner />;\n\n  // return (\n  //   <Fragment>\n  //     <Link to='/' className='btn btn-light'>\n  //       Back To Search\n  //     </Link>\n\n  //     <div className='card text-center'>\n  //       <div className='badge badge-primary'>\n  //         Owner: {owner_id} {owner}\n  //       </div>\n  //       <div className='badge badge-success'>\n  //         Last Access: {time_last_access}\n  //       </div>\n  //       <div className='badge badge-light'>\n  //         Last Modified: {time_last_mod}\n  //       </div>\n  //     </div>\n  //     <div className='card grid-2'>\n  //       <div className='all-center'>\n  //         <h1>{expid}</h1>\n  //         <p>Description: {description}</p>\n  //         <small>Version: {version}</small>\n  //       </div>\n  //       <div>\n  //         <ul>\n  //           <li>\n  //             {error_message !== \"None\" && (\n  //               <Fragment>\n  //                 <strong>Error Message: {error_message} </strong>\n  //               </Fragment>\n  //             )}\n  //           </li>\n  //           <li>\n  //             {path && (\n  //               <Fragment>\n  //                 <strong>Path: </strong> {path}\n  //               </Fragment>\n  //             )}\n  //           </li>\n\n  //           <li>\n  //             {time_last_access && (\n  //               <Fragment>\n  //                 <strong>Last Access: </strong> {time_last_access}\n  //               </Fragment>\n  //             )}\n  //           </li>\n\n  //           <li>\n  //             {time_last_mod && (\n  //               <Fragment>\n  //                 <strong>Last Modified: </strong> {time_last_mod}\n  //               </Fragment>\n  //             )}\n  //           </li>\n  //           <li>\n  //             {contents && <strong>Contents</strong>}\n  //             <ul>\n  //               {contents &&\n  //                 contents.map(content => (\n  //                   <li key={content}>\n  //                     - {path}/{content}\n  //                   </li>\n  //                 ))}\n  //             </ul>\n  //           </li>\n  //         </ul>\n  //       </div>\n  //     </div>\n  //     <div className='card grid-1'>\n  //       <form onSubmit={onSubmit} className='form'>\n  //         <input\n  //           type='submit'\n  //           value='Show Graph'\n  //           className='btn btn-success btn-block'\n  //         />\n  //       </form>\n                    \n  //       {/* {data.error === true &&\n  //       <p className='text-danger'>{data.error_message}</p>}\n  //       {showGraph && (\n  //         <GraphRepresentation\n  //           nodes_prop={data.nodes}\n  //           edges_prop={data.edges}\n  //         />\n  //       )} */}\n  //     </div>\n  //     <div>\n  //       <div className=\"card grid-3\">\n  //         <div>\n  //         <strong>Model:</strong> {model}\n  //         </div>\n  //         <div>\n  //         <strong>Branch:</strong> {branch}\n  //         </div>\n  //         <div>\n  //         <strong>Hpc:</strong> {hpc}\n  //         </div>          \n  //       </div>\n  //     </div>\n  //   </Fragment>\n  // );\n}\n\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}