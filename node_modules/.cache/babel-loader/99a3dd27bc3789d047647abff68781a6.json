{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js\";\nimport React, { Fragment, Component } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport Graph from \"./Graph\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nexport class Experiment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.getExperimentGraph(this.props.experiment.expid);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getExperiment(this.props.match.params.expid);\n  }\n\n  render() {\n    const _this$props$experimen = this.props.experiment,\n          expid = _this$props$experimen.expid,\n          contents = _this$props$experimen.contents,\n          contents_conf = _this$props$experimen.contents_conf,\n          contents_pkl = _this$props$experimen.contents_pkl,\n          contents_plot = _this$props$experimen.contents_plot,\n          contents_tmp = _this$props$experimen.contents_tmp,\n          error_message = _this$props$experimen.error_message,\n          owner = _this$props$experimen.owner,\n          owner_id = _this$props$experimen.owner_id,\n          path = _this$props$experimen.path,\n          time_last_access = _this$props$experimen.time_last_access,\n          time_last_mod = _this$props$experimen.time_last_mod,\n          description = _this$props$experimen.description,\n          version = _this$props$experimen.version,\n          size = _this$props$experimen.size;\n    const loading = this.props.loading;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Back To Search\"), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Owner: \", owner_id, \" \", owner), React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Last Access: \", time_last_access), React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Last Modified: \", time_last_mod)), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, expid), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Description: \", description), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Version: \", version)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, error_message !== \"None\" && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Error Message: \", error_message, \" \"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, path && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Path: \"), \" \", path)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, time_last_access && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Last Access: \"), \" \", time_last_access)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, time_last_mod && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Last Modified: \"), \" \", time_last_mod)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, size && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Size: \"), \" \", size)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, contents && React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, contents && contents.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"- \", path, \"/\", content))))))), React.createElement(\"div\", {\n      className: \"card grid-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Show Graph\",\n      className: \"btn btn-success btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), this.props.data && React.createElement(Graph, {\n      nodes_prop: this.props.data.nodes,\n      edges_prop: this.props.data.edges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: experimentStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"CONF contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, contents_conf && contents_conf.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"- \", content))))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"PKL contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, contents_pkl && contents_pkl.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"- \", content))))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"PLOT contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, contents_plot && contents_plot.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"- \", content))))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"TMP contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, contents_tmp && contents_tmp.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"- \", content)))))));\n  }\n\n}\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\nconst experimentStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(4, 1fr)\",\n  gridGap: \"1rem\"\n};\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js"],"names":["React","Fragment","Component","Spinner","Graph","PropTypes","Link","Experiment","onSubmit","e","preventDefault","props","getExperimentGraph","experiment","expid","componentDidMount","getExperiment","match","params","render","contents","contents_conf","contents_pkl","contents_plot","contents_tmp","error_message","owner","owner_id","path","time_last_access","time_last_mod","description","version","size","loading","map","content","data","nodes","edges","experimentStyle","propTypes","bool","object","isRequired","func","display","gridTemplateColumns","gridGap"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport Graph from \"./Graph\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport class Experiment extends Component {\n  componentDidMount() {\n    this.props.getExperiment(this.props.match.params.expid);\n  }\n\n  static propTypes = {\n    loading: PropTypes.bool,\n    experiment: PropTypes.object.isRequired,\n    getExperiment: PropTypes.func.isRequired\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.getExperimentGraph(this.props.experiment.expid);\n  };\n\n  render() {\n    const {\n      expid,\n      contents,\n      contents_conf,\n      contents_pkl,\n      contents_plot,\n      contents_tmp,\n      error_message,\n      owner,\n      owner_id,\n      path,\n      time_last_access,\n      time_last_mod,\n      description,\n      version,\n      size\n    } = this.props.experiment;\n\n    const { loading } = this.props;\n\n    if (loading) return <Spinner />;\n\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n          Back To Search\n        </Link>\n        {/* Message:{' '} */}\n        {/* {error_message.length() === 4 ? (\n          <i className='fas fa-check text-success' />\n        ) : (\n          <i className='fas fa-times-circle text-danger' />\n        )} */}\n        <div className='card text-center'>\n          <div className='badge badge-primary'>\n            Owner: {owner_id} {owner}\n          </div>\n          <div className='badge badge-success'>\n            Last Access: {time_last_access}\n          </div>\n          <div className='badge badge-light'>\n            Last Modified: {time_last_mod}\n          </div>\n        </div>\n        <div className='card grid-2'>\n          <div className='all-center'>\n            {/* <img\n              src={avatar_url}\n              className='round-img'\n              alt=''\n              style={{ width: '150px' }}\n            /> */}\n            <h1>{expid}</h1>\n            <p>Description: {description}</p>\n            <small>Version: {version}</small>\n          </div>\n          <div>\n            {/* {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className='btn btn-dark my-1'>\n              Visit Github Profile\n            </a> */}\n            <ul>\n              <li>\n                {error_message !== \"None\" && (\n                  <Fragment>\n                    <strong>Error Message: {error_message} </strong>\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {path && (\n                  <Fragment>\n                    <strong>Path: </strong> {path}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {time_last_access && (\n                  <Fragment>\n                    <strong>Last Access: </strong> {time_last_access}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {time_last_mod && (\n                  <Fragment>\n                    <strong>Last Modified: </strong> {time_last_mod}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {size && (\n                  <Fragment>\n                    <strong>Size: </strong> {size}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {contents && <strong>Contents</strong>}\n                <ul>\n                  {contents &&\n                    contents.map(content => (\n                      <li key={content}>\n                        - {path}/{content}\n                      </li>\n                    ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className='card grid-1'>\n          <form onSubmit={this.onSubmit} className='form'>\n            <input\n              type='submit'\n              value='Show Graph'\n              className='btn btn-success btn-block'\n            />\n          </form>\n\n          {this.props.data && (\n            <Graph\n              nodes_prop={this.props.data.nodes}\n              edges_prop={this.props.data.edges}\n            />\n          )}\n        </div>\n        <div style={experimentStyle}>\n          <div className='card'>\n            <strong>CONF contents</strong>\n            <ul>\n              {contents_conf &&\n                contents_conf.map(content => (\n                  <li key={content}>\n                    <small>- {content}</small>\n                  </li>\n                ))}\n            </ul>\n          </div>\n          <div className='card'>\n            <strong>PKL contents</strong>\n            <ul>\n              {contents_pkl &&\n                contents_pkl.map(content => (\n                  <li key={content}>\n                    <small>- {content}</small>\n                  </li>\n                ))}\n            </ul>\n          </div>\n          <div className='card'>\n            <strong>PLOT contents</strong>\n            <ul>\n              {contents_plot &&\n                contents_plot.map(content => (\n                  <li key={content}>\n                    <small>- {content}</small>\n                  </li>\n                ))}\n            </ul>\n          </div>\n          <div className='card'>\n            <strong>TMP contents</strong>\n            <ul>\n              {contents_tmp &&\n                contents_tmp.map(content => (\n                  <li key={content}>\n                    <small>- {content}</small>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst experimentStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(4, 1fr)\",\n  gridGap: \"1rem\"\n};\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}