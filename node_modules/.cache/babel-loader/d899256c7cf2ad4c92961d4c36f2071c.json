{"ast":null,"code":"import React,{useContext}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import GraphContext from\"../context/graph/graphContext\";var WrapperList=function WrapperList(){var experimentContext=useContext(ExperimentContext);var graphContext=useContext(GraphContext);var experiment=experimentContext.experiment;var data=graphContext.data,navigateToGroup=graphContext.navigateToGroup;var packages={};var wrapperTitles=null;var wrapperItems=null;var Honk=function Honk(id){return function(e){e.preventDefault();if(packages){//console.log(id[\"wrapper\"]);\n//console.log(packages[id[\"wrapper\"]]);\nnavigateToGroup(packages[id[\"wrapper\"]]);}//navigateToGroup()\n};};if(experiment&&data&&data.packages&&Object.keys(data.packages).length>0){packages=data.packages;wrapperTitles=Object.keys(packages);wrapperItems=wrapperTitles.map(function(wrapper,index){return/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-warning btn-block\",type:\"button\",key:index,onClick:Honk({wrapper:wrapper})},/*#__PURE__*/React.createElement(\"small\",null,wrapper.split(\"_\").slice(1).join(\"_\")));});// for(var key in packages){\n//     map += \"<span>\" + key + \"</span>\";\n// }\n// map = packages.map(x => x)\n// console.log(map)\n// for(var key in packages){\n//     var value = packages[key]\n//     console.log(key + \" : \" + value);\n// }\n}return/*#__PURE__*/React.createElement(\"div\",null,experiment&&packages&&/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white bg-info scroll\",style:experimentStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center p-0\",style:headerCard},/*#__PURE__*/React.createElement(\"div\",{className:\"mh-100 px-0 mx-0\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"WRAPPERS\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body py-0\"},wrapperTitles&&wrapperItems)))));};var experimentStyle={height:660};var headerCard={height:30};export default WrapperList;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/WrapperList.js"],"names":["React","useContext","ExperimentContext","GraphContext","WrapperList","experimentContext","graphContext","experiment","data","navigateToGroup","packages","wrapperTitles","wrapperItems","Honk","id","e","preventDefault","Object","keys","length","map","wrapper","index","split","slice","join","experimentStyle","headerCard","height"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yCAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,iBAAiB,CAAGJ,UAAU,CAACC,iBAAD,CAApC,CACA,GAAMI,CAAAA,YAAY,CAAGL,UAAU,CAACE,YAAD,CAA/B,CAFwB,GAGhBI,CAAAA,UAHgB,CAGDF,iBAHC,CAGhBE,UAHgB,IAIhBC,CAAAA,IAJgB,CAIUF,YAJV,CAIhBE,IAJgB,CAIVC,eAJU,CAIUH,YAJV,CAIVG,eAJU,CAKxB,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,aAAa,CAAG,IAApB,CACA,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,EAAD,QAAQ,UAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAIN,QAAJ,CAAc,CACZ;AACA;AACAD,eAAe,CAACC,QAAQ,CAACI,EAAE,CAAC,SAAD,CAAH,CAAT,CAAf,CACD,CAED;AACD,CATY,EAAb,CAUA,GACEP,UAAU,EACVC,IADA,EAEAA,IAAI,CAACE,QAFL,EAGAO,MAAM,CAACC,IAAP,CAAYV,IAAI,CAACE,QAAjB,EAA2BS,MAA3B,CAAoC,CAJtC,CAKE,CACAT,QAAQ,CAAGF,IAAI,CAACE,QAAhB,CACAC,aAAa,CAAGM,MAAM,CAACC,IAAP,CAAYR,QAAZ,CAAhB,CACAE,YAAY,CAAGD,aAAa,CAACS,GAAd,CAAkB,SAACC,OAAD,CAAUC,KAAV,qBAC/B,8BACE,SAAS,CAAC,8BADZ,CAEE,IAAI,CAAC,QAFP,CAGE,GAAG,CAAEA,KAHP,CAIE,OAAO,CAAET,IAAI,CAAC,CAAEQ,OAAO,CAAPA,OAAF,CAAD,CAJf,eAME,iCAAQA,OAAO,CAACE,KAAR,CAAc,GAAd,EAAmBC,KAAnB,CAAyB,CAAzB,EAA4BC,IAA5B,CAAiC,GAAjC,CAAR,CANF,CAD+B,EAAlB,CAAf,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAED,mBACE,+BACGlB,UAAU,EAAIG,QAAd,eACC,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,2BACE,SAAS,CAAC,gCADZ,CAEE,KAAK,CAAEgB,eAFT,eAIE,2BAAK,SAAS,CAAC,6BAAf,CAA6C,KAAK,CAAEC,UAApD,eACE,2BAAK,SAAS,CAAC,kBAAf,eACE,8CACE,6CADF,CADF,CADF,CAJF,cAWE,2BAAK,SAAS,CAAC,gBAAf,EACGhB,aAAa,EAAIC,YADpB,CAXF,CADF,CADF,CAFJ,CADF,CAyBD,CAxED,CA0EA,GAAMc,CAAAA,eAAe,CAAG,CACtBE,MAAM,CAAE,GADc,CAAxB,CAIA,GAAMD,CAAAA,UAAU,CAAG,CACjBC,MAAM,CAAE,EADS,CAAnB,CAIA,cAAexB,CAAAA,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport GraphContext from \"../context/graph/graphContext\";\n\nconst WrapperList = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const { experiment } = experimentContext;\n  const { data, navigateToGroup } = graphContext;\n  var packages = {};\n  var wrapperTitles = null;\n  var wrapperItems = null;\n  const Honk = (id) => (e) => {\n    e.preventDefault();\n    if (packages) {\n      //console.log(id[\"wrapper\"]);\n      //console.log(packages[id[\"wrapper\"]]);\n      navigateToGroup(packages[id[\"wrapper\"]]);\n    }\n\n    //navigateToGroup()\n  };\n  if (\n    experiment &&\n    data &&\n    data.packages &&\n    Object.keys(data.packages).length > 0\n  ) {\n    packages = data.packages;\n    wrapperTitles = Object.keys(packages);\n    wrapperItems = wrapperTitles.map((wrapper, index) => (\n      <button\n        className='btn-sm btn-warning btn-block'\n        type='button'\n        key={index}\n        onClick={Honk({ wrapper })}\n      >\n        <small>{wrapper.split(\"_\").slice(1).join(\"_\")}</small>\n      </button>\n    ));\n    // for(var key in packages){\n    //     map += \"<span>\" + key + \"</span>\";\n    // }\n    // map = packages.map(x => x)\n    // console.log(map)\n    // for(var key in packages){\n    //     var value = packages[key]\n    //     console.log(key + \" : \" + value);\n    // }\n  }\n\n  return (\n    <div>\n      {experiment && packages && (\n        <div className='row'>\n          <div className='col-12'>\n            <div\n              className='card text-white bg-info scroll'\n              style={experimentStyle}\n            >\n              <div className='card-header text-center p-0' style={headerCard}>\n                <div className='mh-100 px-0 mx-0'>\n                  <small>\n                    <strong>WRAPPERS</strong>\n                  </small>\n                </div>\n              </div>\n              <div className='card-body py-0'>\n                {wrapperTitles && wrapperItems}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst experimentStyle = {\n  height: 660,\n};\n\nconst headerCard = {\n  height: 30,\n};\n\nexport default WrapperList;\n"]},"metadata":{},"sourceType":"module"}