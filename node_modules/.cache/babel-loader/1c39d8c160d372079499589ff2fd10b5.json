{"ast":null,"code":"import React,{useContext}from\"react\";import GraphContext from\"../context/graph/graphContext\";import ExperimentContext from\"../context/experiment/experimentContext\";import{DEBUG}from\"../context/vars\";import{commandGenerator,commandGeneratorGraph,statusChangeTextGeneratorGraph,statusChangeTextGenerator}from\"../context/utils\";var CommandModal=function CommandModal(_ref){var source=_ref.source,target=_ref.target;var graphContext=useContext(GraphContext);var experimentContext=useContext(ExperimentContext);var currentSelected=experimentContext.currentSelected,setCurrentCommand=experimentContext.setCurrentCommand,setCurrentTextCommand=experimentContext.setCurrentTextCommand,experiment=experimentContext.experiment,currentCommand=experimentContext.currentCommand,currentTextCommand=experimentContext.currentTextCommand;var graphSelectedNodes=graphContext.graphSelectedNodes,setCurrentCommandGraph=graphContext.setCurrentCommandGraph,setCurrentTextCommandGraph=graphContext.setCurrentTextCommandGraph,currentTextCommandGraph=graphContext.currentTextCommandGraph,currentCommandGraph=graphContext.currentCommandGraph;var expid=null;if(experiment){expid=experiment.expid;}var sourceSelection=source===\"graph-only\"?graphSelectedNodes:currentSelected;var sourceCommand=source===\"graph-only\"?currentCommandGraph:currentCommand;var sourceTextCommand=source===\"graph-only\"?currentTextCommandGraph:currentTextCommand;var invalidMessage=source===\"graph-only\"?\"Invalid Selection: You have to select at least one job from the Graph. You can select multiple jobs.\":\"Invalid Selection: You have to select at least one job.\";// console.log(sourceSelection);\n// console.log(sourceCommand);\nvar setStatusTextCommand=function setStatusTextCommand(status){return function(e){e.preventDefault();var command=\"\";if(source===\"graph-only\"){command=statusChangeTextGeneratorGraph(sourceSelection,status);copyContent(command);setCurrentTextCommandGraph(command);}else{command=statusChangeTextGenerator(sourceSelection,status);copyContent(command);setCurrentTextCommand(command);}};};var setStatusCommand=function setStatusCommand(status){return function(e){e.preventDefault();var command=\"\";if(source===\"graph-only\"){command=commandGeneratorGraph(expid,sourceSelection,status);copyContent(command);setCurrentCommandGraph(command);}else{command=commandGenerator(expid,sourceSelection,status);copyContent(command);setCurrentCommand(command);}};};var copyContent=function copyContent(inputname){//e.preventDefault();\nDEBUG&&console.log(\"Sending \"+inputname);window.copyTextToClipboard(inputname);};//copying to Clipboard\n// if (sourceCommand && sourceCommand.length > 0) {\n//   if (canCopyToClipboard === true) {\n//     DEBUG && console.log(sourceCommand);\n//     copyContent(JSON.parse(JSON.stringify(sourceCommand)));\n//   }\n// }\nvar modalHeader=/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},invalidMessage);var modalHeader2=/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},invalidMessage);if(sourceSelection&&sourceSelection.length>0){modalHeader=/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},\"Set status to:\",\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group\",role:\"group\",\"aria-label\":\"Status\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"lightblue\"},onClick:setStatusCommand(\"READY\")},\"Ready\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm btn-secondary\",onClick:setStatusCommand(\"WAITING\")},\"Waiting\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"yellow\"},onClick:setStatusCommand(\"COMPLETED\")},\"Completed\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"orange\"},onClick:setStatusCommand(\"SUSPENDED\")},\"Suspended\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm btn-danger\",onClick:setStatusCommand(\"FAILED\")},\"Failed\")));modalHeader2=/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},\"Generate file text:\",\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group\",role:\"group\",\"aria-label\":\"Status\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"lightblue\"},onClick:setStatusTextCommand(\"READY\")},\"Ready\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm btn-secondary\",onClick:setStatusTextCommand(\"WAITING\")},\"Waiting\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"yellow\"},onClick:setStatusTextCommand(\"COMPLETED\")},\"Completed\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"orange\"},onClick:setStatusTextCommand(\"SUSPENDED\")},\"Suspended\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm btn-danger\",onClick:setStatusTextCommand(\"FAILED\")},\"Failed\")));}return/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"command\"+target,tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"commandTitle\"+target,\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-status\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body pb-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},modalHeader),/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-2 mx-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\",style:{fontFamily:\"Courier\",background:\"black\",color:\"white\"}},sourceCommand&&/*#__PURE__*/React.createElement(\"div\",{className:\"p-2\"},JSON.parse(JSON.stringify(sourceCommand)))))),sourceCommand&&sourceCommand.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mx-1 mb-2 float-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},\"The command has been copied to the clipboard. Paste it in your terminal.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body pb-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},modalHeader2),/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-2 mx-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\",style:{fontFamily:\"Courier\",background:\"black\",color:\"white\"}},sourceTextCommand&&/*#__PURE__*/React.createElement(\"div\",{className:\"p-2\"},sourceTextCommand.split(\"\\n\").map(function(item,index){return/*#__PURE__*/React.createElement(\"p\",null,item);}))))),sourceTextCommand&&sourceTextCommand.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mx-1 mb-2 float-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},\"The text has been copied to the clipboard. Paste it in your status change file.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-sm btn-dark\",\"data-dismiss\":\"modal\"},\"Close\")))));};export default CommandModal;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/CommandModal.js"],"names":["React","useContext","GraphContext","ExperimentContext","DEBUG","commandGenerator","commandGeneratorGraph","statusChangeTextGeneratorGraph","statusChangeTextGenerator","CommandModal","source","target","graphContext","experimentContext","currentSelected","setCurrentCommand","setCurrentTextCommand","experiment","currentCommand","currentTextCommand","graphSelectedNodes","setCurrentCommandGraph","setCurrentTextCommandGraph","currentTextCommandGraph","currentCommandGraph","expid","sourceSelection","sourceCommand","sourceTextCommand","invalidMessage","setStatusTextCommand","status","e","preventDefault","command","copyContent","setStatusCommand","inputname","console","log","window","copyTextToClipboard","modalHeader","modalHeader2","length","background","fontFamily","color","JSON","parse","stringify","split","map","item","index"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport { DEBUG } from \"../context/vars\";\nimport { commandGenerator, commandGeneratorGraph, statusChangeTextGeneratorGraph, statusChangeTextGenerator } from \"../context/utils\";\n\nconst CommandModal = ({ source, target }) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n\n  const {\n    currentSelected,\n    setCurrentCommand,\n    setCurrentTextCommand,\n    experiment,\n    currentCommand,\n    currentTextCommand,\n  } = experimentContext;\n  const {\n    graphSelectedNodes,\n    setCurrentCommandGraph,\n    setCurrentTextCommandGraph,\n    currentTextCommandGraph,\n    currentCommandGraph,\n  } = graphContext;\n  let expid = null;\n  if (experiment) {\n    expid = experiment.expid;\n  }\n  const sourceSelection =\n    source === \"graph-only\" ? graphSelectedNodes : currentSelected;\n  const sourceCommand =\n    source === \"graph-only\" ? currentCommandGraph : currentCommand;\n  const sourceTextCommand = source === \"graph-only\" ? currentTextCommandGraph : currentTextCommand;\n\n  const invalidMessage =\n    source === \"graph-only\"\n      ? \"Invalid Selection: You have to select at least one job from the Graph. You can select multiple jobs.\"\n      : \"Invalid Selection: You have to select at least one job.\";\n\n  // console.log(sourceSelection);\n  // console.log(sourceCommand);\n\n  const setStatusTextCommand = (status) => (e) => {\n    e.preventDefault();\n    let command = \"\";\n    if (source === \"graph-only\") {\n      command = statusChangeTextGeneratorGraph(sourceSelection, status);\n      copyContent(command);\n      setCurrentTextCommandGraph(command);\n    } else {\n      command = statusChangeTextGenerator(sourceSelection, status);\n      copyContent(command);\n      setCurrentTextCommand(command);\n    }\n  };\n\n  const setStatusCommand = (status) => (e) => {\n    e.preventDefault();\n    let command = \"\";\n    if (source === \"graph-only\") {\n      command = commandGeneratorGraph(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommandGraph(command);\n    } else {\n      command = commandGenerator(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommand(command);\n    }\n  };\n\n  const copyContent = (inputname) => {\n    //e.preventDefault();\n    DEBUG && console.log(\"Sending \" + inputname);\n    window.copyTextToClipboard(inputname);\n  };\n\n  //copying to Clipboard\n  // if (sourceCommand && sourceCommand.length > 0) {\n  //   if (canCopyToClipboard === true) {\n  //     DEBUG && console.log(sourceCommand);\n  //     copyContent(JSON.parse(JSON.stringify(sourceCommand)));\n  //   }\n  // }\n\n  let modalHeader = <div className='col-12'>{invalidMessage}</div>;\n  let modalHeader2 = <div className='col-12'>{invalidMessage}</div>;\n\n  if (sourceSelection && sourceSelection.length > 0) {\n    modalHeader = (\n      <div className='col-12'>\n        Set status to:{\" \"}\n        <div className='btn-group' role='group' aria-label='Status'>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"lightblue\" }}\n            onClick={setStatusCommand(\"READY\")}\n          >\n            Ready\n          </button>\n          <button\n            className='btn btn-sm btn-secondary'\n            onClick={setStatusCommand(\"WAITING\")}\n          >\n            Waiting\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"yellow\" }}\n            onClick={setStatusCommand(\"COMPLETED\")}\n          >\n            Completed\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"orange\" }}\n            onClick={setStatusCommand(\"SUSPENDED\")}\n          >\n            Suspended\n          </button>\n          <button\n            className='btn btn-sm btn-danger'\n            onClick={setStatusCommand(\"FAILED\")}\n          >\n            Failed\n          </button>\n        </div>\n      </div>\n    );\n\n    modalHeader2 = (\n      <div className=\"col-12\">\n      Generate file text:{\" \"}\n      <div className='btn-group' role='group' aria-label='Status'>\n        <button\n          className='btn btn-sm'\n          style={{ background: \"lightblue\" }}\n          onClick={setStatusTextCommand(\"READY\")}\n        >\n          Ready\n        </button>\n        <button\n          className='btn btn-sm btn-secondary'\n          onClick={setStatusTextCommand(\"WAITING\")}\n        >\n          Waiting\n        </button>\n        <button\n          className='btn btn-sm'\n          style={{ background: \"yellow\" }}\n          onClick={setStatusTextCommand(\"COMPLETED\")}\n        >\n          Completed\n        </button>\n        <button\n          className='btn btn-sm'\n          style={{ background: \"orange\" }}\n          onClick={setStatusTextCommand(\"SUSPENDED\")}\n        >\n          Suspended\n        </button>\n        <button\n          className='btn btn-sm btn-danger'\n          onClick={setStatusTextCommand(\"FAILED\")}\n        >\n          Failed\n        </button>\n      </div>\n    </div>\n    );\n  }\n  return (\n    <div\n      className='modal fade'\n      id={\"command\" + target}\n      tabIndex='-1'\n      role='dialog'\n      aria-labelledby={\"commandTitle\" + target}\n      aria-hidden='true'\n    >\n      <div className='modal-dialog modal-dialog-status' role='document'>\n        <div className='modal-content'>\n          <div className='modal-body pb-1'>\n            <div className='row'>{modalHeader}</div>\n            <div className='row mt-2 mx-1'>\n              <div\n                className='col-12'\n                style={{\n                  fontFamily: \"Courier\",\n                  background: \"black\",\n                  color: \"white\",\n                }}\n              >\n                {sourceCommand && (\n                  <div className='p-2'>\n                    {JSON.parse(JSON.stringify(sourceCommand))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          {sourceCommand && sourceCommand.length > 0 && (\n            <div className='row mx-1 mb-2 float-left'>\n              <div className='col-12'>\n                The command has been copied to the clipboard. Paste it in your\n                terminal.\n              </div>\n            </div>\n          )}\n          <div className='modal-body pb-1'>\n            <div className='row'>{modalHeader2}</div>\n            <div className='row mt-2 mx-1'>\n              <div\n                className='col-12'\n                style={{\n                  fontFamily: \"Courier\",\n                  background: \"black\",\n                  color: \"white\",\n                }}\n              >\n                {sourceTextCommand && (\n                  <div className='p-2'>\n                    {/* {JSON.parse(JSON.stringify(sourceTextCommand))} */}\n                    {sourceTextCommand.split(\"\\n\").map((item, index) => (\n                      <p>{item}</p>)\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          {sourceTextCommand && sourceTextCommand.length > 0 && (\n            <div className='row mx-1 mb-2 float-left'>\n              <div className='col-12'>\n                The text has been copied to the clipboard. Paste it in your status change file.\n              </div>\n            </div>\n          )}\n          <div className='modal-footer'>\n            <button\n              type='button'\n              className='btn btn-sm btn-dark'\n              data-dismiss='modal'\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommandModal;\n"]},"metadata":{},"sourceType":"module"}