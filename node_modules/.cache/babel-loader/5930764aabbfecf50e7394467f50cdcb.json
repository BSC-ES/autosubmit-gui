{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/statistics/StatsSearch.js\";\nimport React, { useState, useContext, Fragment } from \"react\";\nimport StatsContext from \"../context/statistics/statsContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport Chart from \"react-google-charts\";\nimport Spinner from \"../layout/Spinner\";\nimport { DEBUG } from \"../context/vars\";\n\nconst StatsSearch = () => {\n  const statsContext = useContext(StatsContext);\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    getExperimentStats,\n    statdata,\n    loading,\n    clearStats,\n    isError,\n    errorMessage,\n    totaldata,\n    ticksdata\n  } = statsContext;\n  const {\n    experiment\n  } = experimentContext; // const data = [\n  //     [\"Year\", \"Visitations\", \"Crashes\", { role: \"style\" }],\n  //     [\"2010\", 10, 30, \"color: gray\"],\n  //     [\"2020\", 14, 25, \"color: #76A7FA\"],\n  //     [\"2030\", 16, 24, \"color: blue\"],\n  //     [\"2040\", 22, 32, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"],\n  //     [\n  //       \"2050\",\n  //       28,\n  //       23,\n  //       \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"\n  //     ]\n  // ];\n  // const jsonTicks = JSON.stringify({ticksdata});\n  // console.log(jsonTicks['ticksdata'])\n\n  const options = {\n    chartArea: {\n      width: \"90%\",\n      height: \"700px\"\n    },\n    hAxis: {\n      title: \"Jobs\",\n      ticks: ticksdata //ticks: [{v:1, f:'job_1-2323'}, {v:2, f:'job_other'}],\n\n    },\n    vAxis: {\n      title: \"Hours\"\n    },\n    legend: {\n      position: \"top\"\n    },\n    explorer: {\n      actions: [\"dragToZoom\", \"rightClickToReset\"],\n      axis: \"horizontal\" // maxZoomIn: 4.0,\n\n    }\n  }; // console.log(options);\n\n  var summary = null;\n\n  if (totaldata && totaldata.stats && totaldata.stats.totals) {\n    summary = totaldata.stats.totals.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, item)); // console.log(totaldata.stats.totals[0]);\n    // for(var i = 0; i < totaldata.stats.totals.length; i++){\n    //     console.log(totaldata.stats.totals[i]);\n    //     summary += <li key={i}>{totaldata.stats.totals[i]}</li>\n    // }\n  }\n\n  const onSubmitStats = e => {\n    e.preventDefault();\n    DEBUG && console.log(experiment.expid);\n    DEBUG && console.log(\"Hours : \" + hour);\n    DEBUG && console.log(\"Type : \" + section);\n    getExperimentStats(experiment.expid, hour, section);\n  };\n\n  const onSubmitClear = e => {\n    e.preventDefault();\n    setHour(\"\");\n    setSection(\"\");\n    clearStats();\n  };\n\n  const [hour, setHour] = useState(\"\");\n  const [section, setSection] = useState(\"\");\n\n  const onChangeHour = e => setHour(e.target.value);\n\n  const onChangeSection = e => setSection(e.target.value);\n\n  const pStyle = {\n    listStyleType: \"none\"\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 offset-md-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, !statdata && experiment && experimentContext.loading === false && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitStats,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"section\",\n    placeholder: \"Section\",\n    onChange: onChangeSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"hours\",\n    placeholder: \"Hours\",\n    onChange: onChangeHour,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Get Statistics\",\n    className: \"btn btn-info\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  })))), statdata && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitClear,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Clear Statistics\",\n    className: \"btn btn-dark btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, !statdata && experiment && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Supply a Section (Type) in the appropriate textbox to filter the jobs that will be included in the query. Also, you can also supply the Hours value that determines how many hours before the current time you want to query. Leave both empty and a query for Any Section since the date of creation of the experiment will be executed.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Press \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, \"Get Statistics\"), \" \", \"to generate the statistics, this will generate a Bar Chart and some extra statistics below. Drag the mouse inside the chart to zoom in; however, zoom in capabilities are not unlimited, so try to narrow your query.\")), loading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 23\n    }\n  }), statdata && !isError && /*#__PURE__*/React.createElement(Chart, {\n    chartType: \"ColumnChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, \"Loading Chart\"),\n    width: \"100%\",\n    height: \"700px\",\n    data: statdata,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), statdata && isError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-center p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, errorMessage), totaldata && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, totaldata && /*#__PURE__*/React.createElement(\"ul\", {\n    style: pStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, summary && summary)))));\n}; // const experimentBuffer = {\n//   minHeight: \"100%\",\n// };\n\n\nexport default StatsSearch;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/statistics/StatsSearch.js"],"names":["React","useState","useContext","Fragment","StatsContext","ExperimentContext","Chart","Spinner","DEBUG","StatsSearch","statsContext","experimentContext","getExperimentStats","statdata","loading","clearStats","isError","errorMessage","totaldata","ticksdata","experiment","options","chartArea","width","height","hAxis","title","ticks","vAxis","legend","position","explorer","actions","axis","summary","stats","totals","map","item","index","onSubmitStats","e","preventDefault","console","log","expid","hour","section","onSubmitClear","setHour","setSection","onChangeHour","target","value","onChangeSection","pStyle","listStyleType"],"mappings":"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","sourcesContent":["import React, { useState, useContext, Fragment } from \"react\";\nimport StatsContext from \"../context/statistics/statsContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport Chart from \"react-google-charts\";\nimport Spinner from \"../layout/Spinner\";\nimport { DEBUG } from \"../context/vars\";\n\nconst StatsSearch = () => {\n  const statsContext = useContext(StatsContext);\n  const experimentContext = useContext(ExperimentContext);\n\n  const {\n    getExperimentStats,\n    statdata,\n    loading,\n    clearStats,\n    isError,\n    errorMessage,\n    totaldata,\n    ticksdata,\n  } = statsContext;\n  const { experiment } = experimentContext;\n\n  // const data = [\n  //     [\"Year\", \"Visitations\", \"Crashes\", { role: \"style\" }],\n  //     [\"2010\", 10, 30, \"color: gray\"],\n  //     [\"2020\", 14, 25, \"color: #76A7FA\"],\n  //     [\"2030\", 16, 24, \"color: blue\"],\n  //     [\"2040\", 22, 32, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"],\n  //     [\n  //       \"2050\",\n  //       28,\n  //       23,\n  //       \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"\n  //     ]\n  // ];\n\n  // const jsonTicks = JSON.stringify({ticksdata});\n  // console.log(jsonTicks['ticksdata'])\n  const options = {\n    chartArea: { width: \"90%\", height: \"700px\" },\n    hAxis: {\n      title: \"Jobs\",\n      ticks: ticksdata, //ticks: [{v:1, f:'job_1-2323'}, {v:2, f:'job_other'}],\n    },\n    vAxis: {\n      title: \"Hours\",\n    },\n    legend: {\n      position: \"top\",\n    },\n    explorer: {\n      actions: [\"dragToZoom\", \"rightClickToReset\"],\n      axis: \"horizontal\",\n      // maxZoomIn: 4.0,\n    },\n  };\n\n  // console.log(options);\n\n  var summary = null;\n  if (totaldata && totaldata.stats && totaldata.stats.totals) {\n    summary = totaldata.stats.totals.map((item, index) => (\n      <li key={index}>{item}</li>\n    ));\n    // console.log(totaldata.stats.totals[0]);\n    // for(var i = 0; i < totaldata.stats.totals.length; i++){\n    //     console.log(totaldata.stats.totals[i]);\n    //     summary += <li key={i}>{totaldata.stats.totals[i]}</li>\n    // }\n  }\n\n  const onSubmitStats = (e) => {\n    e.preventDefault();\n    DEBUG && console.log(experiment.expid);\n    DEBUG && console.log(\"Hours : \" + hour);\n    DEBUG && console.log(\"Type : \" + section);\n    getExperimentStats(experiment.expid, hour, section);\n  };\n\n  const onSubmitClear = (e) => {\n    e.preventDefault();\n    setHour(\"\");\n    setSection(\"\");\n    clearStats();\n  };\n\n  const [hour, setHour] = useState(\"\");\n  const [section, setSection] = useState(\"\");\n  const onChangeHour = (e) => setHour(e.target.value);\n  const onChangeSection = (e) => setSection(e.target.value);\n  const pStyle = {\n    listStyleType: \"none\",\n  };\n\n  return (\n    <Fragment>\n      <div className='row'>\n        <div className='col-md-4 offset-md-4 text-center'>\n          {!statdata && experiment && experimentContext.loading === false && (\n            <form onSubmit={onSubmitStats} className='form'>\n              <div className='input-group input-group-sm'>\n                <input\n                  className='form-control'\n                  type='text'\n                  name='section'\n                  placeholder='Section'\n                  onChange={onChangeSection}\n                />\n                <input\n                  className='form-control'\n                  type='text'\n                  name='hours'\n                  placeholder='Hours'\n                  onChange={onChangeHour}\n                />\n                <div className='input-group-append'>\n                  <input\n                    type='submit'\n                    value='Get Statistics'\n                    className='btn btn-info'\n                    disabled={loading}\n                  />\n                </div>\n              </div>\n            </form>\n          )}\n          {statdata && (\n            <form onSubmit={onSubmitClear} className='form'>\n              <div className=''>\n                <input\n                  type='submit'\n                  value='Clear Statistics'\n                  className='btn btn-dark btn-sm'\n                />\n              </div>\n            </form>\n          )}\n        </div>\n        <div className='col-md-12'>\n          {!statdata && experiment && (\n            <div className='col-md-12 p-3'>\n              <p className='lead'>\n                Supply a Section (Type) in the appropriate textbox to filter the\n                jobs that will be included in the query. Also, you can also\n                supply the Hours value that determines how many hours before the\n                current time you want to query. Leave both empty and a query for\n                Any Section since the date of creation of the experiment will be\n                executed.\n              </p>\n              <p className='lead'>\n                Press <span className='badge badge-info'>Get Statistics</span>{\" \"}\n                to generate the statistics, this will generate a Bar Chart and\n                some extra statistics below. Drag the mouse inside the chart to\n                zoom in; however, zoom in capabilities are not unlimited, so try\n                to narrow your query.\n              </p>\n            </div>\n          )}\n          {loading && <Spinner />}\n          {statdata && !isError && (\n            <Chart\n              chartType='ColumnChart'\n              loader={<div>Loading Chart</div>}\n              width={\"100%\"}\n              height={\"700px\"}\n              data={statdata}\n              options={options}\n            />\n          )}\n          {statdata && isError && (\n            <div className='col-md-12 text-center p-3'>{errorMessage}</div>\n          )}\n          {totaldata && (\n            <div className='col-md-8 offset-md-4 mt-2'>\n              {totaldata && <ul style={pStyle}>{summary && summary}</ul>}\n            </div>\n          )}\n        </div>\n      </div>\n      {/* <div className='row' style={experimentBuffer}></div> */}\n    </Fragment>\n  );\n};\n\n// const experimentBuffer = {\n//   minHeight: \"100%\",\n// };\n\nexport default StatsSearch;\n"]},"metadata":{},"sourceType":"module"}