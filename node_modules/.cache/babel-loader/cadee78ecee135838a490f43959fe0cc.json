{"ast":null,"code":"import _regeneratorRuntime from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from\"react\";import axios from\"axios\";import ExperimentContext from\"./experimentContext\";import ExperimentReducer from\"./experimentReducer\";import{SEARCH_EXPERIMENTS,SET_LOADING,CLEAR_EXPERIMENTS,GET_EXPERIMENT//GET_TREE,\n//SET_LOADING_TREE,\n,GET_EXPERIMENT_RUN,SET_LOADING_RUN,CLEAN_RUN_DATA,SET_AUTOUPDATE_RUN,SET_LOADING_STATE,GET_RUNNING_STATE,UPDATE_EXPERIMENT_TS,CURRENT_RUNNING,GET_EXPERIMENT_SUMMARY,CLEAR_SUMMARY_EXP,GET_EXPERIMENT_PERFORMANCE,CLEAN_PERFORMANCE_METRICS,ACTIVATE_SELECTION_MODE,DEACTIVATE_SELECTION_MODE,REMOVE_SELECTED_JOB,SET_CURRENT_COMMAND,UPDATE_SELECTED_JOBS,SET_LOADING_SUMMARY,CLEAN_EXPERIMENT_DATA,LOADING_PERFORMANCE_METRICS,GET_JOB_HISTORY,LOADING_JOB_HISTORY,LOADING_EXPERIMENT_RUNS,GET_EXPERIMENT_RUNS,GET_FILE_STATUS,CLEAN_FILE_STATUS_DATA}from\"../types\";import{AUTOSUBMIT_API_SOURCE,DEBUG,ERROR_MESSAGE,NOAPI}from\"../vars\";import{timeStampToDate}from\"../utils\";var ExperimentState=function ExperimentState(props){var initialState={experiments:[],summaries:[],experiment:{},totalJobs:0,jobHistory:null,experimentRuns:null,expectedLoadingTreeTime:0,expectedLoadingQuickView:0,loadingSummary:new Map(),loading:false,loadingPerformance:false,experimentRunning:false,rundata:null,performancedata:null,loadingRun:false,loadingState:false,loadingFilterTree:false,loadingExperimentRuns:false,currentCommand:null,currentSelected:[],startAutoUpdateRun:false,startAutoUpdateTreePkl:false,fancyTree:null,allowJobMonitor:false,canSelect:false,esarchiveStatus:null};var _useReducer=useReducer(ExperimentReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var localserver=AUTOSUBMIT_API_SOURCE;//const localserver = \"http://84.88.185.94:8081\";\nvar debug=DEBUG;// Search Experiments\nvar searchExperiments=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var result,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading();result=null;if(!NOAPI){_context.next=6;break;}result=require(\"../data/search.json\").experiment;_context.next=11;break;case 6:_context.next=8;return axios.get(\"\".concat(localserver,\"/search/\").concat(text)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 8:res=_context.sent;debug&&console.log(res.data);result=res?res.data.experiment:[];case 11:dispatch({type:SEARCH_EXPERIMENTS,payload:result});case 12:case\"end\":return _context.stop();}}},_callee);}));return function searchExperiments(_x){return _ref.apply(this,arguments);};}();var getSummaries=function getSummaries(){var experiments=state.experiments;for(var exp in experiments){var exp_name=experiments[exp].name;getExperimentSummary(exp_name);}};var getJobHistory=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(expid,job_name){var result,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoadingJobHistory();result=null;if(!NOAPI){_context2.next=6;break;}// Only one job for NO-API mode\nresult=require(\"../data/history_\"+String(expid)+\".json\");_context2.next=11;break;case 6:_context2.next=8;return axios.get(\"\".concat(localserver,\"/history/\").concat(expid,\"/\").concat(job_name)).catch(function(error){alert(error.message);});case 8:res=_context2.sent;debug&&console.log(res.data);result=res?res.data:null;case 11:dispatch({type:GET_JOB_HISTORY,payload:result});case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function getJobHistory(_x2,_x3){return _ref2.apply(this,arguments);};}();var getExperimentRuns=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(expid){var result,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoadingExperimentRuns();result=null;if(!NOAPI){_context3.next=6;break;}result=require(\"../data/runs_\"+String(expid)+\".json\");_context3.next=11;break;case 6:_context3.next=8;return axios.get(\"\".concat(localserver,\"/runs/\").concat(expid)).catch(function(error){alert(error.message);});case 8:res=_context3.sent;result=res?res.data:null;debug&&console.log(result);case 11:// console.log(result);\ndispatch({type:GET_EXPERIMENT_RUNS,payload:result});case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function getExperimentRuns(_x4){return _ref3.apply(this,arguments);};}();// Get Summary for Search item\nvar getExperimentSummary=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(expid){var summary,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:clearSummary(expid);setLoadingSummary(expid);summary=null;if(!NOAPI){_context4.next=7;break;}summary=require(\"../data/summary_\"+String(expid)+\".json\");_context4.next=12;break;case 7:_context4.next=9;return axios.get(\"\".concat(localserver,\"/summary/\").concat(expid)).catch(function(error){alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 9:res=_context4.sent;summary=res?res.data:null;debug&&console.log(summary);case 12:// console.log(summary);\n// console.log(state.summaries);\n//state.summaries.push({ key: expid, value: summary });\ndispatch({type:GET_EXPERIMENT_SUMMARY,payload:{expid:expid,summary:summary}//payload: { currentSummaries, summary, expid }\n});case 13:case\"end\":return _context4.stop();}}},_callee4);}));return function getExperimentSummary(_x5){return _ref4.apply(this,arguments);};}();var getExperimentPerformanceMetrics=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(expid){var metrics,res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:cleanPerformanceMetrics();setLoadingPerformanceMetrics();metrics=null;if(!NOAPI){_context5.next=7;break;}metrics=require(\"../data/performance_\"+String(expid)+\".json\");_context5.next=12;break;case 7:_context5.next=9;return axios.get(\"\".concat(localserver,\"/performance/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 9:res=_context5.sent;metrics=res?res.data:null;debug&&console.log(metrics);case 12:dispatch({type:GET_EXPERIMENT_PERFORMANCE,payload:metrics});case 13:case\"end\":return _context5.stop();}}},_callee5);}));return function getExperimentPerformanceMetrics(_x6){return _ref5.apply(this,arguments);};}();var clearSummary=function clearSummary(expid){dispatch({type:CLEAR_SUMMARY_EXP,payload:expid});};var getCurrentRunning=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var result,res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:setLoading();result=null;if(!NOAPI){_context6.next=6;break;}result=require(\"../data/search.json\").experiment;_context6.next=11;break;case 6:_context6.next=8;return axios.get(\"\".concat(localserver,\"/running/\")).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 8:res=_context6.sent;result=res?res.data.experiment:null;debug&&console.log(result);case 11:dispatch({type:CURRENT_RUNNING,payload:result});case 12:case\"end\":return _context6.stop();}}},_callee6);}));return function getCurrentRunning(){return _ref6.apply(this,arguments);};}();//const updateSelection = async () => {};\n// Get Experiment\nvar getExperiment=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(expid){var result,res;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:setLoading();result=null;//cleanGraphData();\nif(!NOAPI){_context7.next=6;break;}result=require(\"../data/expinfo_\"+String(expid)+\".json\");_context7.next=11;break;case 6:_context7.next=8;return axios.get(\"\".concat(localserver,\"/expinfo/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 8:res=_context7.sent;result=res?res.data:null;debug&&console.log(result);case 11:dispatch({type:GET_EXPERIMENT,payload:result});case 12:case\"end\":return _context7.stop();}}},_callee7);}));return function getExperiment(_x7){return _ref7.apply(this,arguments);};}();// Get Experiment Log Run\nvar getExperimentRun=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(expid){var result,res;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:setLoadingRun();result=null;if(!NOAPI){_context8.next=6;break;}result=require(\"../data/exprun_\"+String(expid)+\".json\");_context8.next=11;break;case 6:_context8.next=8;return axios.get(\"\".concat(localserver,\"/exprun/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 8:res=_context8.sent;result=res?res.data:null;debug&&console.log(result);case 11:dispatch({type:GET_EXPERIMENT_RUN,payload:result});case 12:case\"end\":return _context8.stop();}}},_callee8);}));return function getExperimentRun(_x8){return _ref8.apply(this,arguments);};}();// Get current esarchive status\nvar getFileStatus=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var result,res;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:result=null;if(!NOAPI){_context9.next=5;break;}result=require(\"../data/filestatus.json\");_context9.next=10;break;case 5:_context9.next=7;return axios.get(\"\".concat(localserver,\"/filestatus/\")).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 7:res=_context9.sent;result=res?res.data:null;debug&&console.log(result);case 10:dispatch({type:GET_FILE_STATUS,payload:result});case 11:case\"end\":return _context9.stop();}}},_callee9);}));return function getFileStatus(){return _ref9.apply(this,arguments);};}();// Get Running State\nvar getRunningState=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(expid){var result,res;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:setLoadingState();result=null;if(!NOAPI){_context10.next=6;break;}result=require(\"../data/ifrun_\"+String(expid)+\".json\");_context10.next=11;break;case 6:_context10.next=8;return axios.get(\"\".concat(localserver,\"/ifrun/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 8:res=_context10.sent;result=res?res.data:null;debug&&console.log(result);case 11:dispatch({type:GET_RUNNING_STATE,payload:result});case 12:case\"end\":return _context10.stop();}}},_callee10);}));return function getRunningState(_x9){return _ref10.apply(this,arguments);};}();var setCurrentCommand=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(command){return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:// for change status\ndispatch({type:SET_CURRENT_COMMAND,payload:command});//return command;\ncase 1:case\"end\":return _context11.stop();}}},_callee11);}));return function setCurrentCommand(_x10){return _ref11.apply(this,arguments);};}();// Cleaning\nvar clearExperiments=function clearExperiments(){return dispatch({type:CLEAR_EXPERIMENTS});};//const cleanGraphData = () => dispatch({ type: CLEAN_GRAPH_DATA });\nvar cleanFileStatusData=function cleanFileStatusData(){return dispatch({type:CLEAN_FILE_STATUS_DATA});};var cleanRunData=function cleanRunData(){return dispatch({type:CLEAN_RUN_DATA});};var cleanPerformanceMetrics=function cleanPerformanceMetrics(){return dispatch({type:CLEAN_PERFORMANCE_METRICS});};var cleanExperimentData=function cleanExperimentData(){return dispatch({type:CLEAN_EXPERIMENT_DATA});};// Set Loading\nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};var setLoadingRun=function setLoadingRun(){return dispatch({type:SET_LOADING_RUN});};var setLoadingState=function setLoadingState(){return dispatch({type:SET_LOADING_STATE});};var setLoadingSummary=function setLoadingSummary(summExpid){return dispatch({type:SET_LOADING_SUMMARY,payload:summExpid});};var setLoadingPerformanceMetrics=function setLoadingPerformanceMetrics(){return dispatch({type:LOADING_PERFORMANCE_METRICS});};var setLoadingJobHistory=function setLoadingJobHistory(){return dispatch({type:LOADING_JOB_HISTORY});};var setLoadingExperimentRuns=function setLoadingExperimentRuns(){return dispatch({type:LOADING_EXPERIMENT_RUNS});};// Action Things\nvar updateExperimentTimeStamp=function updateExperimentTimeStamp(timeStamp){//console.log(timeStamp);\ndispatch({type:UPDATE_EXPERIMENT_TS,payload:timeStamp});};// Updates for the Selection Tool\n// source: Tree, Graph\nvar updateCurrentSelectedTree=function updateCurrentSelectedTree(selectedJob,treedata){debug&&console.log(treedata);if(treedata){var currentNode={name:selectedJob,color:\"yellow\",source:\"Tree\"};var selectedNode=treedata.jobs.find(function(job){return job.id===currentNode.name;});currentNode.color=selectedNode.status_color;dispatch({type:UPDATE_SELECTED_JOBS,payload:currentNode});}};var updateCurrentSelectedGraph=function updateCurrentSelectedGraph(selectedJob,data){// console.log(data);\n// console.log(selectedJob);\nif(data){var currentNode={name:selectedJob,color:\"yellow\"};var selectedNode=data.nodes.find(function(node){return node.id===currentNode.name;});currentNode.color=selectedNode.status_color;dispatch({type:UPDATE_SELECTED_JOBS,payload:currentNode});}};var setAutoUpdateRun=function setAutoUpdateRun(value){return dispatch({type:SET_AUTOUPDATE_RUN,payload:value});};var activateSelectionMode=function activateSelectionMode(){return dispatch({type:ACTIVATE_SELECTION_MODE});};var deactivateSelectionMode=function deactivateSelectionMode(){return dispatch({type:DEACTIVATE_SELECTION_MODE});};var removeSelectedJob=function removeSelectedJob(name){return dispatch({type:REMOVE_SELECTED_JOB,payload:name});};return/*#__PURE__*/React.createElement(ExperimentContext.Provider,{value:{experiments:state.experiments,experiment:state.experiment,summaries:state.summaries,loadingSummary:state.loadingSummary,loading:state.loading,loadingRun:state.loadingRun,loadingState:state.loadingState,loadingPerformance:state.loadingPerformance,jobHistory:state.jobHistory,performancedata:state.performancedata,experimentRuns:state.experimentRuns,rundata:state.rundata,currentSelected:state.currentSelected,startAutoUpdateRun:state.startAutoUpdateRun,experimentRunning:state.experimentRunning,currentCommand:state.currentCommand,canSelect:state.canSelect,totalJobs:state.totalJobs,expectedLoadingTreeTime:state.expectedLoadingTreeTime,expectedLoadingQuickView:state.expectedLoadingQuickView,experimentRunDetailForTree:state.experimentRunDetailForTree,esarchiveStatus:state.esarchiveStatus,setAutoUpdateRun:setAutoUpdateRun,searchExperiments:searchExperiments,getCurrentRunning:getCurrentRunning,clearExperiments:clearExperiments,getExperiment:getExperiment,cleanPerformanceMetrics:cleanPerformanceMetrics,cleanRunData:cleanRunData,getExperimentRun:getExperimentRun,timeStampToDate:timeStampToDate,getRunningState:getRunningState,getExperimentPerformanceMetrics:getExperimentPerformanceMetrics,getExperimentSummary:getExperimentSummary,clearSummary:clearSummary,getSummaries:getSummaries,activateSelectionMode:activateSelectionMode,deactivateSelectionMode:deactivateSelectionMode,removeSelectedJob:removeSelectedJob,setCurrentCommand:setCurrentCommand,updateCurrentSelectedGraph:updateCurrentSelectedGraph,updateCurrentSelectedTree:updateCurrentSelectedTree,updateExperimentTimeStamp:updateExperimentTimeStamp,cleanExperimentData:cleanExperimentData,getJobHistory:getJobHistory,getExperimentRuns:getExperimentRuns,getFileStatus:getFileStatus,cleanFileStatusData:cleanFileStatusData}},props.children);};export default ExperimentState;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/experiment/ExperimentState.js"],"names":["React","useReducer","axios","ExperimentContext","ExperimentReducer","SEARCH_EXPERIMENTS","SET_LOADING","CLEAR_EXPERIMENTS","GET_EXPERIMENT","GET_EXPERIMENT_RUN","SET_LOADING_RUN","CLEAN_RUN_DATA","SET_AUTOUPDATE_RUN","SET_LOADING_STATE","GET_RUNNING_STATE","UPDATE_EXPERIMENT_TS","CURRENT_RUNNING","GET_EXPERIMENT_SUMMARY","CLEAR_SUMMARY_EXP","GET_EXPERIMENT_PERFORMANCE","CLEAN_PERFORMANCE_METRICS","ACTIVATE_SELECTION_MODE","DEACTIVATE_SELECTION_MODE","REMOVE_SELECTED_JOB","SET_CURRENT_COMMAND","UPDATE_SELECTED_JOBS","SET_LOADING_SUMMARY","CLEAN_EXPERIMENT_DATA","LOADING_PERFORMANCE_METRICS","GET_JOB_HISTORY","LOADING_JOB_HISTORY","LOADING_EXPERIMENT_RUNS","GET_EXPERIMENT_RUNS","GET_FILE_STATUS","CLEAN_FILE_STATUS_DATA","AUTOSUBMIT_API_SOURCE","DEBUG","ERROR_MESSAGE","NOAPI","timeStampToDate","ExperimentState","props","initialState","experiments","summaries","experiment","totalJobs","jobHistory","experimentRuns","expectedLoadingTreeTime","expectedLoadingQuickView","loadingSummary","Map","loading","loadingPerformance","experimentRunning","rundata","performancedata","loadingRun","loadingState","loadingFilterTree","loadingExperimentRuns","currentCommand","currentSelected","startAutoUpdateRun","startAutoUpdateTreePkl","fancyTree","allowJobMonitor","canSelect","esarchiveStatus","state","dispatch","localserver","debug","searchExperiments","text","setLoading","result","require","get","catch","error","alert","message","res","console","log","data","type","payload","getSummaries","exp","exp_name","name","getExperimentSummary","getJobHistory","expid","job_name","setLoadingJobHistory","String","getExperimentRuns","setLoadingExperimentRuns","clearSummary","setLoadingSummary","summary","getExperimentPerformanceMetrics","cleanPerformanceMetrics","setLoadingPerformanceMetrics","metrics","getCurrentRunning","getExperiment","getExperimentRun","setLoadingRun","getFileStatus","getRunningState","setLoadingState","setCurrentCommand","command","clearExperiments","cleanFileStatusData","cleanRunData","cleanExperimentData","summExpid","updateExperimentTimeStamp","timeStamp","updateCurrentSelectedTree","selectedJob","treedata","currentNode","color","source","selectedNode","jobs","find","job","id","status_color","updateCurrentSelectedGraph","nodes","node","setAutoUpdateRun","value","activateSelectionMode","deactivateSelectionMode","removeSelectedJob","experimentRunDetailForTree","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ExperimentContext from \"./experimentContext\";\nimport ExperimentReducer from \"./experimentReducer\";\nimport {\n  SEARCH_EXPERIMENTS,\n  SET_LOADING,\n  CLEAR_EXPERIMENTS,\n  GET_EXPERIMENT,\n  //GET_TREE,\n  //SET_LOADING_TREE,\n  GET_EXPERIMENT_RUN,\n  SET_LOADING_RUN,\n  CLEAN_RUN_DATA,\n  SET_AUTOUPDATE_RUN,\n  SET_LOADING_STATE,\n  GET_RUNNING_STATE,\n  UPDATE_EXPERIMENT_TS,\n  CURRENT_RUNNING,\n  GET_EXPERIMENT_SUMMARY,\n  CLEAR_SUMMARY_EXP,\n  GET_EXPERIMENT_PERFORMANCE,\n  CLEAN_PERFORMANCE_METRICS,\n  ACTIVATE_SELECTION_MODE,\n  DEACTIVATE_SELECTION_MODE,\n  REMOVE_SELECTED_JOB,\n  SET_CURRENT_COMMAND,\n  UPDATE_SELECTED_JOBS,\n  SET_LOADING_SUMMARY,\n  CLEAN_EXPERIMENT_DATA,\n  LOADING_PERFORMANCE_METRICS,\n  GET_JOB_HISTORY,\n  LOADING_JOB_HISTORY,\n  LOADING_EXPERIMENT_RUNS,\n  GET_EXPERIMENT_RUNS,\n  GET_FILE_STATUS,\n  CLEAN_FILE_STATUS_DATA\n} from \"../types\";\n\nimport { AUTOSUBMIT_API_SOURCE, DEBUG, ERROR_MESSAGE, NOAPI } from \"../vars\";\n\nimport { timeStampToDate } from \"../utils\";\n\nconst ExperimentState = (props) => {\n  const initialState = {\n    experiments: [],\n    summaries: [],\n    experiment: {},\n    totalJobs: 0,\n    jobHistory: null,\n    experimentRuns: null,        \n    expectedLoadingTreeTime: 0,\n    expectedLoadingQuickView: 0,\n    loadingSummary: new Map(),\n    loading: false,\n    loadingPerformance: false,\n    experimentRunning: false,\n    rundata: null,\n    performancedata: null,\n    loadingRun: false,\n    loadingState: false,\n    loadingFilterTree: false,\n    loadingExperimentRuns: false,\n    currentCommand: null,\n    currentSelected: [],\n    startAutoUpdateRun: false,\n    startAutoUpdateTreePkl: false,\n    fancyTree: null,\n    allowJobMonitor: false,\n    canSelect: false,\n    esarchiveStatus: null,\n  };\n\n  const [state, dispatch] = useReducer(ExperimentReducer, initialState);\n\n  const localserver = AUTOSUBMIT_API_SOURCE;\n  //const localserver = \"http://84.88.185.94:8081\";\n  const debug = DEBUG;\n\n  // Search Experiments\n  const searchExperiments = async (text) => {\n    setLoading();\n    let result = null;\n    if (NOAPI) {      \n      result = require(\"../data/search.json\").experiment;\n    } else {\n      const res = await axios.get(`${localserver}/search/${text}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      debug && console.log(res.data);\n      result = res ? res.data.experiment : [];\n    }  \n    dispatch({\n      type: SEARCH_EXPERIMENTS,\n      payload: result,\n    });\n  };\n\n  const getSummaries = () => {\n    const experiments = state.experiments;\n    for (var exp in experiments) {\n      var exp_name = experiments[exp].name;\n      getExperimentSummary(exp_name);\n    }\n  };\n\n  const getJobHistory = async (expid, job_name) => {\n    setLoadingJobHistory();\n    let result = null;\n    if (NOAPI) {\n      // Only one job for NO-API mode\n      result = require(\"../data/history_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios\n      .get(`${localserver}/history/${expid}/${job_name}`)\n      .catch((error) => {\n        alert(error.message);\n      });\n      debug && console.log(res.data);\n      result = res ? res.data : null;\n    }    \n    dispatch({\n      type: GET_JOB_HISTORY,\n      payload: result,\n    });\n  };\n\n  const getExperimentRuns = async (expid) => {\n    setLoadingExperimentRuns();\n    let result = null;\n    if (NOAPI) {\n      result = require(\"../data/runs_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios.get(`${localserver}/runs/${expid}`).catch((error) => {alert(error.message);});    \n      result = res ? res.data : null;\n      debug && console.log(result);\n    }    \n    // console.log(result);\n    dispatch({\n      type: GET_EXPERIMENT_RUNS,\n      payload: result,\n    })\n  }\n\n  // Get Summary for Search item\n  const getExperimentSummary = async (expid) => {\n    clearSummary(expid);\n    setLoadingSummary(expid);\n    let summary = null;\n    if (NOAPI){\n      summary = require(\"../data/summary_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios.get(`${localserver}/summary/${expid}`).catch((error) => {alert(ERROR_MESSAGE + \"\\n\" + error.message);});\n      summary = res ? res.data : null;\n      debug && console.log(summary);\n    }    \n    // console.log(summary);\n    // console.log(state.summaries);\n    //state.summaries.push({ key: expid, value: summary });\n    dispatch({\n      type: GET_EXPERIMENT_SUMMARY,\n      payload: { expid: expid, summary: summary },\n      //payload: { currentSummaries, summary, expid }\n    });\n  };\n\n  const getExperimentPerformanceMetrics = async (expid) => {\n    cleanPerformanceMetrics();\n    setLoadingPerformanceMetrics();\n    let metrics = null;\n    if (NOAPI) {\n      metrics = require(\"../data/performance_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios.get(`${localserver}/performance/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      metrics = res ? res.data : null ;\n      debug && console.log(metrics);\n    }    \n    dispatch({\n      type: GET_EXPERIMENT_PERFORMANCE,\n      payload: metrics,\n    });\n  };\n\n  const clearSummary = (expid) => {\n    dispatch({\n      type: CLEAR_SUMMARY_EXP,\n      payload: expid,\n    });\n  };\n\n  const getCurrentRunning = async () => {\n    setLoading();\n    let result = null;\n    if (NOAPI){\n      result = require(\"../data/search.json\").experiment;      \n    } else {\n      const res = await axios.get(`${localserver}/running/`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      result = res ? res.data.experiment : null;\n      debug && console.log(result);\n    }\n    \n    dispatch({\n      type: CURRENT_RUNNING,\n      payload: result,\n    });\n  };\n\n  //const updateSelection = async () => {};\n\n  // Get Experiment\n  const getExperiment = async (expid) => {\n    setLoading();\n    let result = null;\n    //cleanGraphData();\n    if (NOAPI) {\n      result = require(\"../data/expinfo_\"+String(expid)+\".json\"); \n    } else {\n      const res = await axios.get(`${localserver}/expinfo/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      result = res ? res.data : null;\n      debug && console.log(result);\n    }    \n    dispatch({\n      type: GET_EXPERIMENT,\n      payload: result,\n    });\n  };\n\n  // Get Experiment Log Run\n  const getExperimentRun = async (expid) => {\n    setLoadingRun();\n    let result = null;\n    if (NOAPI) {\n      result = require(\"../data/exprun_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios.get(`${localserver}/exprun/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      result = res ? res.data : null;\n      debug && console.log(result);\n    }\n    \n    dispatch({\n      type: GET_EXPERIMENT_RUN,\n      payload: result,\n    });\n  };\n\n  // Get current esarchive status\n  const getFileStatus = async () => {\n    let result = null;\n    if (NOAPI) {\n      result = require(\"../data/filestatus.json\");\n    } else {\n      const res = await axios.get(`${localserver}/filestatus/`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      result = res ? res.data : null;\n      debug && console.log(result);\n    }\n    dispatch({\n      type: GET_FILE_STATUS,\n      payload: result,\n    });\n  }\n\n  // Get Running State\n  const getRunningState = async (expid) => {\n    setLoadingState();\n    let result = null;\n    if (NOAPI) {\n      result = require(\"../data/ifrun_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios.get(`${localserver}/ifrun/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n      result = res ? res.data : null;\n      debug && console.log(result);\n    }\n    \n    dispatch({\n      type: GET_RUNNING_STATE,\n      payload: result,\n    });\n  };\n\n  const setCurrentCommand = async (command) => {\n    // for change status\n    dispatch({\n      type: SET_CURRENT_COMMAND,\n      payload: command,\n    });\n    //return command;\n  };\n\n  // Cleaning\n  const clearExperiments = () => dispatch({ type: CLEAR_EXPERIMENTS });\n  //const cleanGraphData = () => dispatch({ type: CLEAN_GRAPH_DATA });\n\n  const cleanFileStatusData = () => dispatch({ type: CLEAN_FILE_STATUS_DATA })\n\n  const cleanRunData = () => dispatch({ type: CLEAN_RUN_DATA });\n\n  const cleanPerformanceMetrics = () =>\n    dispatch({ type: CLEAN_PERFORMANCE_METRICS });\n\n  const cleanExperimentData = () => dispatch({ type: CLEAN_EXPERIMENT_DATA });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n  const setLoadingRun = () => dispatch({ type: SET_LOADING_RUN });\n  const setLoadingState = () => dispatch({ type: SET_LOADING_STATE });\n  const setLoadingSummary = (summExpid) =>\n    dispatch({ type: SET_LOADING_SUMMARY, payload: summExpid });\n  const setLoadingPerformanceMetrics = () =>\n    dispatch({ type: LOADING_PERFORMANCE_METRICS });\n  const setLoadingJobHistory = () => dispatch({ type: LOADING_JOB_HISTORY });\n  const setLoadingExperimentRuns = () => dispatch({ type: LOADING_EXPERIMENT_RUNS });\n  // Action Things\n  const updateExperimentTimeStamp = (timeStamp) => {\n    //console.log(timeStamp);\n    dispatch({ type: UPDATE_EXPERIMENT_TS, payload: timeStamp });\n  };\n\n  // Updates for the Selection Tool\n  // source: Tree, Graph\n  const updateCurrentSelectedTree = (selectedJob, treedata) => {\n    debug && console.log(treedata);\n    if (treedata) {\n      let currentNode = { name: selectedJob, color: \"yellow\", source: \"Tree\" };\n      const selectedNode = treedata.jobs.find(\n        (job) => job.id === currentNode.name\n      );\n      currentNode.color = selectedNode.status_color;\n      dispatch({\n        type: UPDATE_SELECTED_JOBS,\n        payload: currentNode,\n      });\n    }\n  };\n\n  const updateCurrentSelectedGraph = (selectedJob, data) => {\n    // console.log(data);\n    // console.log(selectedJob);\n    if (data) {\n      let currentNode = { name: selectedJob, color: \"yellow\" };\n      const selectedNode = data.nodes.find((node) => {\n        return node.id === currentNode.name;\n      });\n      currentNode.color = selectedNode.status_color;\n      dispatch({ type: UPDATE_SELECTED_JOBS, payload: currentNode });\n    }\n  };\n\n  const setAutoUpdateRun = (value) =>\n    dispatch({ type: SET_AUTOUPDATE_RUN, payload: value });\n\n  const activateSelectionMode = () =>\n    dispatch({ type: ACTIVATE_SELECTION_MODE });\n  const deactivateSelectionMode = () =>\n    dispatch({ type: DEACTIVATE_SELECTION_MODE });\n  const removeSelectedJob = (name) =>\n    dispatch({ type: REMOVE_SELECTED_JOB, payload: name });\n\n  return (\n    <ExperimentContext.Provider\n      value={{\n        experiments: state.experiments,\n        experiment: state.experiment,\n        summaries: state.summaries,\n        loadingSummary: state.loadingSummary,\n        loading: state.loading,\n        loadingRun: state.loadingRun,\n        loadingState: state.loadingState,\n        loadingPerformance: state.loadingPerformance,\n        jobHistory: state.jobHistory,\n        performancedata: state.performancedata,\n        experimentRuns: state.experimentRuns,\n        rundata: state.rundata,\n        currentSelected: state.currentSelected,\n        startAutoUpdateRun: state.startAutoUpdateRun,\n        experimentRunning: state.experimentRunning,\n        currentCommand: state.currentCommand,\n        canSelect: state.canSelect,\n        totalJobs: state.totalJobs,\n        expectedLoadingTreeTime: state.expectedLoadingTreeTime,\n        expectedLoadingQuickView: state.expectedLoadingQuickView,\n        experimentRunDetailForTree: state.experimentRunDetailForTree,   \n        esarchiveStatus: state.esarchiveStatus,     \n        setAutoUpdateRun,\n        searchExperiments,\n        getCurrentRunning,\n        clearExperiments,\n        getExperiment,\n        cleanPerformanceMetrics,\n        cleanRunData,\n        getExperimentRun,\n        timeStampToDate,\n        getRunningState,\n        getExperimentPerformanceMetrics,\n        getExperimentSummary,\n        clearSummary,\n        getSummaries,\n        activateSelectionMode,\n        deactivateSelectionMode,\n        removeSelectedJob,\n        setCurrentCommand,\n        updateCurrentSelectedGraph,\n        updateCurrentSelectedTree,\n        updateExperimentTimeStamp,\n        cleanExperimentData,\n        getJobHistory,\n        getExperimentRuns,\n        getFileStatus,\n        cleanFileStatusData,\n      }}\n    >\n      {props.children}\n    </ExperimentContext.Provider>\n  );\n};\n\nexport default ExperimentState;\n"]},"metadata":{},"sourceType":"module"}