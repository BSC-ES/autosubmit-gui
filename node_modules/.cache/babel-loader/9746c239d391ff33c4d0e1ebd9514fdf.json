{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/pages/ExperimentCentral.js\";\nimport React, { Fragment, useContext, useEffect } from \"react\"; //import Experiment from \"../experiment/Experiment\";\n\nimport ExperimentColumn from \"../experiment/ExperimentColumn\"; // import GraphRepresentation from '../experiment/GraphRepresentation';\n\nimport GraphNativeRep from \"../experiment/GraphNativeRep\";\nimport JobSelection from \"../experiment/JobSelection\";\nimport TreeNativeRep from \"../experiment/TreeNativeRep\";\nimport LighterNativeRep from \"../experiment/LighterNativeRep\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport StatsContext from \"../context/statistics/statsContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport TreeContext from \"../context/tree/treeContext\";\nimport LighterContext from \"../context/lighter/lighterContext\";\nimport Selection from \"../experiment/Selection\";\nimport SelectionTreeNode from \"../experiment/SelectionTreeNode\";\nimport Running from \"../experiment/Running\";\nimport JobMonitor from \"../experiment/JobMonitor\";\nimport JobMonitorTree from \"../experiment/JobMonitorTree\";\nimport Navigator from \"../experiment/Navigator\";\nimport StatsSearch from \"../statistics/StatsSearch\";\nimport JobSearcher from \"../experiment/JobSearcher\";\nimport JobFilter from \"../experiment/JobFilter\";\nimport WrapperList from \"../experiment/WrapperList\";\nimport GraphControl from \"../experiment/GraphControl\";\nimport LogControl from \"../experiment/LogControl\";\nimport TreeControl from \"../experiment/TreeControl\";\nimport LighterControl from \"../experiment/LighterControl\";\nimport PerformanceControl from \"../experiment/PerformanceControl\";\nimport Performance from \"../experiment/Performance\"; // Main render component. Calls other component and supplies props if necessary.\n\nconst ExperimentCentral = ({\n  match\n}) => {\n  // Focus Logic\n  const expid = match.params.expid; // From custom URL\n\n  const resolve_action = match.params.action;\n  const focus_graph = resolve_action && resolve_action === \"graph\" ? true : false;\n  const focus_lighter = resolve_action && resolve_action === \"light\" ? true : false; //console.log(\"Focus: \" + focus_graph);\n\n  const classTree = focus_graph === true || focus_lighter === true ? \"nav-link\" : \"nav-link active\";\n  const classGraph = focus_graph === true ? \"nav-link active\" : \"nav-link\";\n  const classLighter = focus_lighter === true ? \"nav-link active\" : \"nav-link\";\n  const classTabTree = focus_graph === true || focus_lighter === true ? \"tab-pane fade\" : \"tab-pane fade show active\";\n  const classTabGraph = focus_graph === true ? \"tab-pane fade show active\" : \"tab-pane fade\";\n  const classTabLighter = focus_lighter === true ? \"tab-pane fade show active\" : \"tab-pane fade\"; //const isGraph = this.props.isGraph;\n\n  const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const treeContext = useContext(TreeContext);\n  const statsContext = useContext(StatsContext);\n  const lighterContext = useContext(LighterContext);\n  const {\n    loadingRun,\n    cleanRunData,\n    getExperiment,\n    getRunningState,\n    getExperimentRun,\n    getExperimentPerformanceMetrics,\n    startAutoUpdateRun,\n    setAutoUpdateRun,\n    rundata,\n    experiment,\n    canSelect,\n    experimentRunning,\n    updateCurrentSelectedGraph,\n    updateCurrentSelectedTree,\n    cleanExperimentData,\n    totalJobs,\n    experimentRunDetailForTree,\n    clearRunDetailTree\n  } = experimentContext;\n  const {\n    treedata,\n    updateSelectionTree,\n    loadingTree,\n    getExperimentTreePkl,\n    getExperimentTree,\n    cleanPklTreeData,\n    startAutoUpdateTreePkl,\n    pkltreechanges,\n    setFancyTree,\n    cleanTreeData,\n    notificationTitleTree,\n    setNotificationTitleTree,\n    updateTreeContent\n  } = treeContext;\n  const {\n    cleanPklData,\n    cleanNavData,\n    getExperimentGraph,\n    setVisData,\n    getExperimentPkl,\n    updateSelection,\n    setVisNetwork,\n    data,\n    visNetwork,\n    navToLatest,\n    navigateAfterLoadGraph,\n    pklchanges,\n    loadingGraph,\n    shouldUpdateGraph,\n    startAutoUpdatePkl,\n    cleanGraphData,\n    current_grouped,\n    updateGraphSelectedNodes,\n    notificationTitleGraph,\n    setNotificationTitleGraph\n  } = graphContext;\n  const {\n    clearStats\n  } = statsContext;\n  const {\n    loadingView,\n    setLighterFancyTree,\n    lightData,\n    cleanLoadingLighterView,\n    getLighterView\n  } = lighterContext;\n\n  if (experimentRunDetailForTree) {\n    // If there is a run detected.\n    console.log(\" Run Detected \" + experimentRunDetailForTree);\n    updateTreeContent(experimentRunDetailForTree);\n    clearRunDetailTree();\n  }\n\n  useEffect(() => {\n    // Get experiment header data\n    getExperiment(expid); // Get experiment running status \n\n    getRunningState(expid);\n\n    if (expid && expid.length > 0) {\n      // resolve_action depends on the URL call\n      // Some type of switch might be useful here but more views are unlikely\n      if (resolve_action) {\n        if (resolve_action === \"graph\") {\n          getExperimentGraph(expid);\n        } else if (resolve_action === \"light\") {\n          getLighterView(expid);\n        }\n      } else {\n        getExperimentTree(expid);\n      } // Get performance metrics \n\n\n      getExperimentPerformanceMetrics(expid);\n    } // getExperimentTree(expid);\n\n\n    const interval = setInterval(() => getRunningState(expid), 300000);\n    return () => {\n      clearInterval(interval);\n      cleanExperimentData();\n    }; // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav nav-tabs\",\n    id: \"myTab\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: classTree,\n    id: \"treeview-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#treeview\",\n    role: \"tab\",\n    \"aria-controls\": \"treeview\",\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Tree View\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: classGraph,\n    id: \"graph-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#graph\",\n    role: \"tab\",\n    \"aria-controls\": \"graph\",\n    \"aria-selected\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Graph\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"nav-link\",\n    id: \"log-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#log\",\n    role: \"tab\",\n    \"aria-controls\": \"log\",\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"Log\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"nav-link\",\n    id: \"stats-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#stats\",\n    role: \"tab\",\n    \"aria-controls\": \"stats\",\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Statistics\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"nav-link\",\n    id: \"performance-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#performance\",\n    role: \"tab\",\n    \"aria-controls\": \"performance\",\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Performance\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: classLighter,\n    id: \"lightview-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#lightview\",\n    role: \"tab\",\n    \"aria-controls\": \"lightview\",\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, \"Quick View\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    id: \"myTabContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classTabGraph,\n    id: \"graph\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"graph-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, experiment && /*#__PURE__*/React.createElement(GraphControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 32\n    }\n  }), experiment && data && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(JobSearcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col pr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GraphNativeRep, {\n    data: data,\n    updateSelection: updateSelection,\n    loadingGraph: loadingGraph,\n    cleanGraphData: cleanGraphData,\n    shouldUpdateGraph: shouldUpdateGraph,\n    setVisData: setVisData,\n    setVisNetwork: setVisNetwork,\n    navToLatest: navToLatest,\n    clearStats: clearStats,\n    cleanNavData: cleanNavData,\n    current_grouped: current_grouped,\n    experimentRunning: experimentRunning,\n    navigateAfterLoadGraph: navigateAfterLoadGraph,\n    updateCurrentSelected: updateCurrentSelectedGraph,\n    canSelect: canSelect,\n    updateGraphSelectedNodes: updateGraphSelectedNodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: canSelect === true ? \"col-3 px-0\" : \"col-3 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav nav-tabs\",\n    id: \"myTabSide\",\n    role: \"tablist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"nav-link active\",\n    id: \"selection-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#selection\",\n    role: \"tab\",\n    \"aria-controls\": \"selection\",\n    \"aria-selected\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, \"Selection\")), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"nav-link\",\n    id: \"wrapper-tab\",\n    \"data-toggle\": \"tab\",\n    href: \"#wrapper\",\n    role: \"tab\",\n    \"aria-controls\": \"treeview\",\n    \"aria-selected\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, \"Wrappers\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content\",\n    id: \"myTabSideContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-pane fade show active\",\n    id: \"selection\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"selection-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 23\n    }\n  }, data && /*#__PURE__*/React.createElement(Selection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 34\n    }\n  }), startAutoUpdatePkl && /*#__PURE__*/React.createElement(JobMonitor, {\n    experiment: experiment,\n    getExperimentPkl: getExperimentPkl,\n    cleanPklData: cleanPklData,\n    pklchanges: pklchanges,\n    experimentRunning: experimentRunning,\n    notificationTitleGraph: notificationTitleGraph,\n    setNotificationTitleGraph: setNotificationTitleGraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-pane fade show\",\n    id: \"wrapper\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"wrapper-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(WrapperList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 27\n    }\n  }))))), experiment && data && canSelect && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(JobSelection, {\n    target: \"graph\",\n    source: \"experiment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, data && visNetwork && /*#__PURE__*/React.createElement(Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 42\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classTabTree,\n    id: \"treeview\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"treeview-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 15\n    }\n  }, experiment && /*#__PURE__*/React.createElement(TreeControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 32\n    }\n  }), experiment && treedata && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(JobFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: loadingTree === true ? \"col\" : \"col pr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TreeNativeRep, {\n    treedata: treedata,\n    loadingTree: loadingTree,\n    cleanTreeData: cleanTreeData,\n    setFancyTree: setFancyTree,\n    updateSelectionTree: updateSelectionTree,\n    updateCurrentSelected: updateCurrentSelectedTree,\n    canSelect: canSelect,\n    totalJobs: totalJobs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  })), treedata && /*#__PURE__*/React.createElement(\"div\", {\n    className: canSelect === true ? \"col-3 px-0\" : \"col-3 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SelectionTreeNode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 23\n    }\n  }), startAutoUpdateTreePkl && /*#__PURE__*/React.createElement(JobMonitorTree, {\n    experiment: experiment,\n    getExperimentTreePkl: getExperimentTreePkl,\n    cleanPklTreeData: cleanPklTreeData,\n    pkltreechanges: pkltreechanges,\n    experimentRunning: experimentRunning,\n    notificationTitleTree: notificationTitleTree,\n    setNotificationTitleTree: setNotificationTitleTree,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 25\n    }\n  })), experiment && treedata && canSelect && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(JobSelection, {\n    target: \"tree\",\n    source: \"experiment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-pane fade\",\n    id: \"log\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"log-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, experiment && /*#__PURE__*/React.createElement(LogControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-0\",\n    style: experimentMinStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 19\n    }\n  }, startAutoUpdateRun && /*#__PURE__*/React.createElement(Running, {\n    rundata: rundata,\n    loadingRun: loadingRun,\n    cleanRunData: cleanRunData,\n    getExperimentRun: getExperimentRun,\n    experiment: experiment,\n    startAutoUpdateRun: startAutoUpdateRun,\n    setAutoUpdateRun: setAutoUpdateRun,\n    experimentRunning: experimentRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 23\n    }\n  }), !startAutoUpdateRun && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 27\n    }\n  }, \"Press\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 29\n    }\n  }, \"Show Log\"), \" \", \"to see the last 50 lines of the running log of this experiment. If the experiment is running, the log will update automatically.\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-pane fade\",\n    id: \"stats\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"stats-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-2\",\n    style: experimentMinStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header py-0 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 19\n    }\n  }, \"Statistics\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StatsSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-pane fade\",\n    id: \"performance\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"performance-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, experiment && /*#__PURE__*/React.createElement(PerformanceControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }, experiment && /*#__PURE__*/React.createElement(Performance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 34\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classTabLighter,\n    id: \"lightview\",\n    role: \"tabpanel\",\n    \"aria-labelledby\": \"lightview-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 15\n    }\n  }, experiment && /*#__PURE__*/React.createElement(LighterControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, experiment && /*#__PURE__*/React.createElement(LighterNativeRep, {\n    data: lightData,\n    loadingView: loadingView,\n    setLighterFancyTree: setLighterFancyTree,\n    cleanLoadingLighterView: cleanLoadingLighterView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(ExperimentColumn, {\n    expidToken: expid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst experimentMinStyle = {\n  minHeight: \"100%\"\n};\nexport default ExperimentCentral;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/pages/ExperimentCentral.js"],"names":["React","Fragment","useContext","useEffect","ExperimentColumn","GraphNativeRep","JobSelection","TreeNativeRep","LighterNativeRep","ExperimentContext","StatsContext","GraphContext","TreeContext","LighterContext","Selection","SelectionTreeNode","Running","JobMonitor","JobMonitorTree","Navigator","StatsSearch","JobSearcher","JobFilter","WrapperList","GraphControl","LogControl","TreeControl","LighterControl","PerformanceControl","Performance","ExperimentCentral","match","expid","params","resolve_action","action","focus_graph","focus_lighter","classTree","classGraph","classLighter","classTabTree","classTabGraph","classTabLighter","experimentContext","graphContext","treeContext","statsContext","lighterContext","loadingRun","cleanRunData","getExperiment","getRunningState","getExperimentRun","getExperimentPerformanceMetrics","startAutoUpdateRun","setAutoUpdateRun","rundata","experiment","canSelect","experimentRunning","updateCurrentSelectedGraph","updateCurrentSelectedTree","cleanExperimentData","totalJobs","experimentRunDetailForTree","clearRunDetailTree","treedata","updateSelectionTree","loadingTree","getExperimentTreePkl","getExperimentTree","cleanPklTreeData","startAutoUpdateTreePkl","pkltreechanges","setFancyTree","cleanTreeData","notificationTitleTree","setNotificationTitleTree","updateTreeContent","cleanPklData","cleanNavData","getExperimentGraph","setVisData","getExperimentPkl","updateSelection","setVisNetwork","data","visNetwork","navToLatest","navigateAfterLoadGraph","pklchanges","loadingGraph","shouldUpdateGraph","startAutoUpdatePkl","cleanGraphData","current_grouped","updateGraphSelectedNodes","notificationTitleGraph","setNotificationTitleGraph","clearStats","loadingView","setLighterFancyTree","lightData","cleanLoadingLighterView","getLighterView","console","log","length","interval","setInterval","clearInterval","experimentMinStyle","minHeight"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\n//import Experiment from \"../experiment/Experiment\";\nimport ExperimentColumn from \"../experiment/ExperimentColumn\";\n// import GraphRepresentation from '../experiment/GraphRepresentation';\nimport GraphNativeRep from \"../experiment/GraphNativeRep\";\nimport JobSelection from \"../experiment/JobSelection\";\nimport TreeNativeRep from \"../experiment/TreeNativeRep\";\nimport LighterNativeRep from \"../experiment/LighterNativeRep\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport StatsContext from \"../context/statistics/statsContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport TreeContext from \"../context/tree/treeContext\";\nimport LighterContext from \"../context/lighter/lighterContext\";\nimport Selection from \"../experiment/Selection\";\nimport SelectionTreeNode from \"../experiment/SelectionTreeNode\";\nimport Running from \"../experiment/Running\";\nimport JobMonitor from \"../experiment/JobMonitor\";\nimport JobMonitorTree from \"../experiment/JobMonitorTree\";\nimport Navigator from \"../experiment/Navigator\";\nimport StatsSearch from \"../statistics/StatsSearch\";\nimport JobSearcher from \"../experiment/JobSearcher\";\nimport JobFilter from \"../experiment/JobFilter\";\nimport WrapperList from \"../experiment/WrapperList\";\nimport GraphControl from \"../experiment/GraphControl\";\nimport LogControl from \"../experiment/LogControl\";\nimport TreeControl from \"../experiment/TreeControl\";\nimport LighterControl from \"../experiment/LighterControl\";\nimport PerformanceControl from \"../experiment/PerformanceControl\";\nimport Performance from \"../experiment/Performance\";\n\n// Main render component. Calls other component and supplies props if necessary.\nconst ExperimentCentral = ({ match }) => {\n  // Focus Logic\n  const expid = match.params.expid;\n  // From custom URL\n  const resolve_action = match.params.action;\n  const focus_graph =\n    resolve_action && resolve_action === \"graph\" ? true : false;\n  const focus_lighter =\n    resolve_action && resolve_action === \"light\" ? true : false;\n  //console.log(\"Focus: \" + focus_graph);\n  const classTree =\n    focus_graph === true || focus_lighter === true\n      ? \"nav-link\"\n      : \"nav-link active\";\n  const classGraph = focus_graph === true ? \"nav-link active\" : \"nav-link\";\n  const classLighter = focus_lighter === true ? \"nav-link active\" : \"nav-link\";\n  const classTabTree =\n    focus_graph === true || focus_lighter === true\n      ? \"tab-pane fade\"\n      : \"tab-pane fade show active\";\n  const classTabGraph =\n    focus_graph === true ? \"tab-pane fade show active\" : \"tab-pane fade\";\n  const classTabLighter =\n    focus_lighter === true ? \"tab-pane fade show active\" : \"tab-pane fade\";\n  //const isGraph = this.props.isGraph;\n  const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const treeContext = useContext(TreeContext);\n  const statsContext = useContext(StatsContext);\n  const lighterContext = useContext(LighterContext);\n  const {\n    loadingRun,\n    cleanRunData,\n    getExperiment,\n    getRunningState,\n    getExperimentRun,\n    getExperimentPerformanceMetrics,\n    startAutoUpdateRun,\n    setAutoUpdateRun,\n    rundata,\n    experiment,\n    canSelect,\n    experimentRunning,\n    updateCurrentSelectedGraph,\n    updateCurrentSelectedTree,\n    cleanExperimentData,\n    totalJobs,\n    experimentRunDetailForTree,\n    clearRunDetailTree,\n  } = experimentContext;\n\n  const {\n    treedata,\n    updateSelectionTree,\n    loadingTree,\n    getExperimentTreePkl,\n    getExperimentTree,\n    cleanPklTreeData,\n    startAutoUpdateTreePkl,\n    pkltreechanges,\n    setFancyTree,\n    cleanTreeData,\n    notificationTitleTree,\n    setNotificationTitleTree,\n    updateTreeContent,\n  } = treeContext;\n\n  const {\n    cleanPklData,\n    cleanNavData,\n    getExperimentGraph,\n    setVisData,\n    getExperimentPkl,\n    updateSelection,\n    setVisNetwork,\n    data,\n    visNetwork,\n    navToLatest,\n    navigateAfterLoadGraph,\n    pklchanges,\n    loadingGraph,\n    shouldUpdateGraph,\n    startAutoUpdatePkl,\n    cleanGraphData,\n    current_grouped,\n    updateGraphSelectedNodes,\n    notificationTitleGraph,\n    setNotificationTitleGraph,\n  } = graphContext;\n\n  const { clearStats } = statsContext;\n\n  const {\n    loadingView,\n    setLighterFancyTree,\n    lightData,\n    cleanLoadingLighterView,\n    getLighterView,\n  } = lighterContext;\n\n  if (experimentRunDetailForTree) {\n    // If there is a run detected.\n    console.log(\" Run Detected \" + experimentRunDetailForTree);\n    updateTreeContent(experimentRunDetailForTree);\n    clearRunDetailTree();\n  }\n\n  useEffect(() => {\n    // Get experiment header data\n    getExperiment(expid);\n    // Get experiment running status \n    getRunningState(expid);\n    if (expid && expid.length > 0) {\n      // resolve_action depends on the URL call\n      // Some type of switch might be useful here but more views are unlikely\n      if (resolve_action) {\n        if (resolve_action === \"graph\") {\n          getExperimentGraph(expid);\n        } else if (resolve_action === \"light\") {\n          getLighterView(expid);\n        }\n      } else {\n        getExperimentTree(expid);\n      }\n      // Get performance metrics \n      getExperimentPerformanceMetrics(expid);\n    }\n    // getExperimentTree(expid);\n    const interval = setInterval(() => getRunningState(expid), 300000);\n    return () => {\n      clearInterval(interval);\n      cleanExperimentData();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='row'>\n        <div className='col-12'>\n          <ul className='nav nav-tabs' id='myTab' role='tablist'>\n            <li className='nav-item'>\n              <a\n                className={classTree}\n                id='treeview-tab'\n                data-toggle='tab'\n                href='#treeview'\n                role='tab'\n                aria-controls='treeview'\n                aria-selected='false'\n              >\n                Tree View\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className={classGraph}\n                id='graph-tab'\n                data-toggle='tab'\n                href='#graph'\n                role='tab'\n                aria-controls='graph'\n                aria-selected='true'\n              >\n                Graph\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link'\n                id='log-tab'\n                data-toggle='tab'\n                href='#log'\n                role='tab'\n                aria-controls='log'\n                aria-selected='false'\n              >\n                Log\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link'\n                id='stats-tab'\n                data-toggle='tab'\n                href='#stats'\n                role='tab'\n                aria-controls='stats'\n                aria-selected='false'\n              >\n                Statistics\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link'\n                id='performance-tab'\n                data-toggle='tab'\n                href='#performance'\n                role='tab'\n                aria-controls='performance'\n                aria-selected='false'\n              >\n                Performance\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className={classLighter}\n                id='lightview-tab'\n                data-toggle='tab'\n                href='#lightview'\n                role='tab'\n                aria-controls='lightview'\n                aria-selected='false'\n              >\n                Quick View\n              </a>\n            </li>\n          </ul>\n          <div className='tab-content' id='myTabContent'>\n            <div\n              className={classTabGraph}\n              id='graph'\n              role='tabpanel'\n              aria-labelledby='graph-tab'\n            >\n              <div className='card'>\n                {experiment && <GraphControl />}\n                {experiment && data && (\n                  <div className='card-header p-1'>\n                    <JobSearcher />\n                  </div>\n                )}\n                <div className='row'>\n                  <div className='col pr-0'>\n                    <GraphNativeRep\n                      data={data}\n                      updateSelection={updateSelection}\n                      loadingGraph={loadingGraph}\n                      cleanGraphData={cleanGraphData}\n                      shouldUpdateGraph={shouldUpdateGraph}\n                      setVisData={setVisData}\n                      setVisNetwork={setVisNetwork}\n                      navToLatest={navToLatest}\n                      clearStats={clearStats}\n                      cleanNavData={cleanNavData}\n                      current_grouped={current_grouped}\n                      experimentRunning={experimentRunning}\n                      navigateAfterLoadGraph={navigateAfterLoadGraph}\n                      updateCurrentSelected={updateCurrentSelectedGraph}\n                      canSelect={canSelect}\n                      updateGraphSelectedNodes={updateGraphSelectedNodes}\n                    />\n                  </div>\n                  <div\n                    className={canSelect === true ? \"col-3 px-0\" : \"col-3 pl-0\"}\n                  >\n                    <ul className='nav nav-tabs' id='myTabSide' role='tablist'>\n                      <li className='nav-item'>\n                        <a\n                          className='nav-link active'\n                          id='selection-tab'\n                          data-toggle='tab'\n                          href='#selection'\n                          role='tab'\n                          aria-controls='selection'\n                          aria-selected='true'\n                        >\n                          Selection\n                        </a>\n                      </li>\n                      <li className='nav-item'>\n                        <a\n                          className='nav-link'\n                          id='wrapper-tab'\n                          data-toggle='tab'\n                          href='#wrapper'\n                          role='tab'\n                          aria-controls='treeview'\n                          aria-selected='false'\n                        >\n                          Wrappers\n                        </a>\n                      </li>\n                    </ul>\n                    <div className='tab-content' id='myTabSideContent'>\n                      <div\n                        className='tab-pane fade show active'\n                        id='selection'\n                        role='tabpanel'\n                        aria-labelledby='selection-tab'\n                      >\n                        {data && <Selection />}\n                        {startAutoUpdatePkl && (\n                          <JobMonitor\n                            experiment={experiment}\n                            getExperimentPkl={getExperimentPkl}\n                            cleanPklData={cleanPklData}\n                            pklchanges={pklchanges}\n                            experimentRunning={experimentRunning}\n                            notificationTitleGraph={notificationTitleGraph}\n                            setNotificationTitleGraph={\n                              setNotificationTitleGraph\n                            }\n                          />\n                        )}\n                      </div>\n                      <div\n                        className='tab-pane fade show'\n                        id='wrapper'\n                        role='tabpanel'\n                        aria-labelledby='wrapper-tab'\n                      >\n                        <div>\n                          <WrapperList />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {experiment && data && canSelect && (\n                    <div className='col-2 pl-0'>\n                      <JobSelection target={\"graph\"} source={\"experiment\"} />\n                    </div>\n                  )}\n                </div>\n                <div className='card-footer p-0'>\n                  {data && visNetwork && <Navigator />}\n                </div>\n              </div>\n            </div>\n            <div\n              className={classTabTree}\n              id='treeview'\n              role='tabpanel'\n              aria-labelledby='treeview-tab'\n            >\n              <div className='card'>\n                {experiment && <TreeControl />}\n                {experiment && treedata && (\n                  <div className='card-header p-1'>\n                    <JobFilter />\n                  </div>\n                )}\n                <div className='row'>\n                  <div className={loadingTree === true ? \"col\" : \"col pr-0\"}>\n                    <TreeNativeRep\n                      treedata={treedata}\n                      loadingTree={loadingTree}\n                      cleanTreeData={cleanTreeData}\n                      setFancyTree={setFancyTree}\n                      updateSelectionTree={updateSelectionTree}\n                      updateCurrentSelected={updateCurrentSelectedTree}\n                      canSelect={canSelect}\n                      totalJobs={totalJobs}\n                    />\n                  </div>\n                  {treedata && (\n                    <div\n                      className={\n                        canSelect === true ? \"col-3 px-0\" : \"col-3 pl-0\"\n                      }\n                    >\n                      <SelectionTreeNode />\n                      {startAutoUpdateTreePkl && (\n                        <JobMonitorTree\n                          experiment={experiment}\n                          getExperimentTreePkl={getExperimentTreePkl}\n                          cleanPklTreeData={cleanPklTreeData}\n                          pkltreechanges={pkltreechanges}\n                          experimentRunning={experimentRunning}\n                          notificationTitleTree={notificationTitleTree}\n                          setNotificationTitleTree={setNotificationTitleTree}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                  {experiment && treedata && canSelect && (\n                    <div className='col-2 pl-0'>\n                      <JobSelection target={\"tree\"} source={\"experiment\"} />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div\n              className='tab-pane fade'\n              id='log'\n              role='tabpanel'\n              aria-labelledby='log-tab'\n            >\n              <div className='card'>\n                {experiment && <LogControl />}\n                <div className='card-body p-0' style={experimentMinStyle}>\n                  <div className='col-12 p-0'>\n                    {startAutoUpdateRun && (\n                      <Running\n                        rundata={rundata}\n                        loadingRun={loadingRun}\n                        cleanRunData={cleanRunData}\n                        getExperimentRun={getExperimentRun}\n                        experiment={experiment}\n                        startAutoUpdateRun={startAutoUpdateRun}\n                        setAutoUpdateRun={setAutoUpdateRun}\n                        experimentRunning={experimentRunning}\n                      />\n                    )}\n                    {!startAutoUpdateRun && (\n                      <div className='row'>\n                        <div className='col-12 text-center'>\n                          <p className='lead'>\n                            Press{\" \"}\n                            <span className='badge badge-dark'>Show Log</span>{\" \"}\n                            to see the last 50 lines of the running log of this\n                            experiment. If the experiment is running, the log\n                            will update automatically.\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className='tab-pane fade'\n              id='stats'\n              role='tabpanel'\n              aria-labelledby='stats-tab'\n            >\n              <div className='card mt-2' style={experimentMinStyle}>\n                <div className='card-header py-0 text-muted'>\n                  <small>Statistics</small>\n                </div>\n                <div className='card-body p-1'>\n                  <div className='col-12'>\n                    <StatsSearch />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className='tab-pane fade'\n              id='performance'\n              role='tabpanel'\n              aria-labelledby='performance-tab'\n            >\n              <div className='card mt-2'>\n                {experiment && <PerformanceControl />}\n                <div className='card-body p-1'>\n                  {experiment && <Performance />}\n                </div>\n              </div>\n            </div>\n            <div\n              className={classTabLighter}\n              id='lightview'\n              role='tabpanel'\n              aria-labelledby='lightview-tab'\n            >\n              <div className='card mt-2'>\n                {experiment && <LighterControl />}\n                <div className='card-body p-1'>\n                  {experiment && (\n                    <LighterNativeRep\n                      data={lightData}\n                      loadingView={loadingView}\n                      setLighterFancyTree={setLighterFancyTree}\n                      cleanLoadingLighterView={cleanLoadingLighterView}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ExperimentColumn expidToken={expid} />\n    </Fragment>\n  );\n};\n\nconst experimentMinStyle = {\n  minHeight: \"100%\",\n};\n\nexport default ExperimentCentral;\n"]},"metadata":{},"sourceType":"module"}