{"ast":null,"code":"import _classCallCheck from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from\"react\";var Running=/*#__PURE__*/function(_Component){_inherits(Running,_Component);var _super=_createSuper(Running);function Running(props){var _this;_classCallCheck(this,Running);_this=_super.call(this,props);_this.rundata=null;//this.messagesEnd = null;\n//this.messagesEndRef = React.createRef()\nreturn _this;}_createClass(Running,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//console.log(this.props.experimentRunning)\nthis.props.getExperimentRun(this.props.experiment.expid);if(this.props.experimentRunning){this.interval=setInterval(function(){return _this2.props.getExperimentRun(_this2.props.experiment.expid);},this.props.experiment.updateTime*1000);}//console.log(this.messagesEndRef);\n//this.scrollTo();\n}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){//console.log(this.props.experimentRunning)\nthis.props.cleanRunData();if(this.props.experimentRunning){clearInterval(this.interval);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){window.scrollToBottom();}},{key:\"render\",value:function render(){if(this.props.rundata===null){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\"));}var _this$props$rundata=this.props.rundata,logcontent=_this$props$rundata.logcontent,error=_this$props$rundata.error,error_message=_this$props$rundata.error_message,found=_this$props$rundata.found,logfile=_this$props$rundata.logfile,lastModified=_this$props$rundata.lastModified,timeStamp=_this$props$rundata.timeStamp;var logitems=logcontent.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{key:item.index},/*#__PURE__*/React.createElement(\"small\",null,item.content));});if(error){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,error_message),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"hr\",null));}if(!found){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"Running log not found. This experiment might not be currently running on Autosubmit.\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"hr\",null));}return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row px-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-6 text-left\"},/*#__PURE__*/React.createElement(\"small\",null,\"Logfile: \",logfile),\" \",/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"(\",timeStamp,\")\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6 text-right\"},/*#__PURE__*/React.createElement(\"small\",null,\"Last Modified: \",lastModified))),/*#__PURE__*/React.createElement(\"pre\",{className:\"bash mb-0 scroll\",id:\"log_scroll\"},/*#__PURE__*/React.createElement(\"ul\",{style:pStyle,className:\"p-1 mb-0 ul-2\"},logitems)),/*#__PURE__*/React.createElement(\"div\",{className:\"text-muted text-center\"},/*#__PURE__*/React.createElement(\"small\",null,\"Showing last 150 lines.\"))));}}]);return Running;}(Component);var pStyle={listStyleType:\"none\"};// const experimentBuffer = {\n//   height: 100,\n// };\nexport default Running;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/Running.js"],"names":["React","Component","Fragment","Running","props","rundata","getExperimentRun","experiment","expid","experimentRunning","interval","setInterval","updateTime","cleanRunData","clearInterval","window","scrollToBottom","logcontent","error","error_message","found","logfile","lastModified","timeStamp","logitems","map","item","index","content","pStyle","listStyleType"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,GAEMC,CAAAA,O,kGACJ,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EACA,MAAKC,OAAL,CAAe,IAAf,CACA;AACA;AAJiB,aAKlB,C,iFAEmB,iBAClB;AACA,KAAKD,KAAL,CAAWE,gBAAX,CAA4B,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,KAAlD,EACA,GAAI,KAAKJ,KAAL,CAAWK,iBAAf,CAAkC,CAChC,KAAKC,QAAL,CAAgBC,WAAW,CACzB,iBAAM,CAAA,MAAI,CAACP,KAAL,CAAWE,gBAAX,CAA4B,MAAI,CAACF,KAAL,CAAWG,UAAX,CAAsBC,KAAlD,CAAN,EADyB,CAEzB,KAAKJ,KAAL,CAAWG,UAAX,CAAsBK,UAAtB,CAAmC,IAFV,CAA3B,CAID,CACD;AACA;AACD,C,mEAEsB,CACrB;AACA,KAAKR,KAAL,CAAWS,YAAX,GACA,GAAI,KAAKT,KAAL,CAAWK,iBAAf,CAAkC,CAChCK,aAAa,CAAC,KAAKJ,QAAN,CAAb,CACD,CACF,C,+DAEoB,CACnBK,MAAM,CAACC,cAAP,GACD,C,uCAEQ,CACP,GAAI,KAAKZ,KAAL,CAAWC,OAAX,GAAuB,IAA3B,CAAiC,CAC/B,mBACE,oBAAC,QAAD,mBACE,4CADF,CADF,CAKD,CAPM,wBAiBH,KAAKD,KAAL,CAAWC,OAjBR,CAULY,UAVK,qBAULA,UAVK,CAWLC,KAXK,qBAWLA,KAXK,CAYLC,aAZK,qBAYLA,aAZK,CAaLC,KAbK,qBAaLA,KAbK,CAcLC,OAdK,qBAcLA,OAdK,CAeLC,YAfK,qBAeLA,YAfK,CAgBLC,SAhBK,qBAgBLA,SAhBK,CAmBP,GAAMC,CAAAA,QAAQ,CAAGP,UAAU,CAACQ,GAAX,CAAe,SAACC,IAAD,qBAC9B,0BAAI,GAAG,CAAEA,IAAI,CAACC,KAAd,eACE,iCAAQD,IAAI,CAACE,OAAb,CADF,CAD8B,EAAf,CAAjB,CAMA,GAAIV,KAAJ,CAAW,CACT,mBACE,oBAAC,QAAD,mBACE,+BAAMC,aAAN,CADF,cAEE,8BAFF,cAGE,8BAHF,CADF,CAOD,CACD,GAAI,CAACC,KAAL,CAAY,CACV,mBACE,oBAAC,QAAD,mBACE,sHADF,cAKE,8BALF,cAME,8BANF,CADF,CAUD,CAED,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,6CAAiBC,OAAjB,CADF,CACoC,GADpC,cAEE,6BAAO,SAAS,CAAC,YAAjB,MAAgCE,SAAhC,KAFF,CADF,cAKE,2BAAK,SAAS,CAAC,kBAAf,eACE,mDAAuBD,YAAvB,CADF,CALF,CADF,cAYE,2BAAK,SAAS,CAAC,kBAAf,CAAkC,EAAE,CAAC,YAArC,eACE,0BAAI,KAAK,CAAEO,MAAX,CAAmB,SAAS,CAAC,eAA7B,EACGL,QADH,CADF,CAZF,cAqBE,2BAAK,SAAS,CAAC,wBAAf,eACE,2DADF,CArBF,CADF,CADF,CA6BD,C,qBA7GmBvB,S,EAgHtB,GAAM4B,CAAAA,MAAM,CAAG,CACbC,aAAa,CAAE,MADF,CAAf,CAIA;AACA;AACA;AAEA,cAAe3B,CAAAA,OAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nclass Running extends Component {\n  constructor(props) {\n    super(props);\n    this.rundata = null;\n    //this.messagesEnd = null;\n    //this.messagesEndRef = React.createRef()\n  }\n\n  componentDidMount() {\n    //console.log(this.props.experimentRunning)\n    this.props.getExperimentRun(this.props.experiment.expid);\n    if (this.props.experimentRunning) {\n      this.interval = setInterval(\n        () => this.props.getExperimentRun(this.props.experiment.expid),\n        this.props.experiment.updateTime * 1000\n      );\n    }\n    //console.log(this.messagesEndRef);\n    //this.scrollTo();\n  }\n\n  componentWillUnmount() {\n    //console.log(this.props.experimentRunning)\n    this.props.cleanRunData();\n    if (this.props.experimentRunning) {\n      clearInterval(this.interval);\n    }\n  }\n\n  componentDidUpdate() {\n    window.scrollToBottom();\n  }\n\n  render() {\n    if (this.props.rundata === null) {\n      return (\n        <Fragment>\n          <div>Loading...</div>\n        </Fragment>\n      );\n    }\n\n    const {\n      logcontent,\n      error,\n      error_message,\n      found,\n      logfile,\n      lastModified,\n      timeStamp,\n    } = this.props.rundata;\n\n    const logitems = logcontent.map((item) => (\n      <li key={item.index}>\n        <small>{item.content}</small>\n      </li>\n    ));\n\n    if (error) {\n      return (\n        <Fragment>\n          <div>{error_message}</div>\n          <br></br>\n          <hr></hr>\n        </Fragment>\n      );\n    }\n    if (!found) {\n      return (\n        <Fragment>\n          <div>\n            Running log not found. This experiment might not be currently\n            running on Autosubmit.\n          </div>\n          <br></br>\n          <hr></hr>\n        </Fragment>\n      );\n    }\n\n    return (\n      <div className='row'>\n        <div className='col-12'>\n          <div className='row px-1'>\n            <div className='col-6 text-left'>\n              <small>Logfile: {logfile}</small>{\" \"}\n              <small className='text-muted'>({timeStamp})</small>\n            </div>\n            <div className='col-6 text-right'>\n              <small>Last Modified: {lastModified}</small>\n            </div>\n          </div>\n\n          {/* <p><strong>Showing last 50 lines of the log file:</strong></p> */}\n          <pre className='bash mb-0 scroll' id='log_scroll'>\n            <ul style={pStyle} className='p-1 mb-0 ul-2'>\n              {logitems}\n            </ul>\n            {/* <div style={{ float:\"left\", clear: \"both\" }}\n                            ref={this.messagesEndRef}>\n                        </div>            */}\n          </pre>\n\n          <div className='text-muted text-center'>\n            <small>Showing last 150 lines.</small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst pStyle = {\n  listStyleType: \"none\",\n};\n\n// const experimentBuffer = {\n//   height: 100,\n// };\n\nexport default Running;\n"]},"metadata":{},"sourceType":"module"}