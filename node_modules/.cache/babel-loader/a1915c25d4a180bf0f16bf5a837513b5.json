{"ast":null,"code":"import React,{useContext,Fragment}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import CommandModal from\"./CommandModal\";var JobSelection=function JobSelection(_ref){var source=_ref.source,target=_ref.target;//const util = require(\"util\");\nvar experimentContext=useContext(ExperimentContext);var currentSelected=experimentContext.currentSelected,removeSelectedJob=experimentContext.removeSelectedJob,canSelect=experimentContext.canSelect;// const onSelectionMode = (e) => {\n//   e.preventDefault();\n//   activateSelectionMode();\n//   //console.log(\"Sending \" + boolValue);\n// };\n// const offSelectionMode = (e) => {\n//   e.preventDefault();\n//   deactivateSelectionMode();\n//   //console.log(\"Sending \" + boolValue);\n// };\nvar removeSelected=function removeSelected(name){return function(e){e.preventDefault();//console.log(\"Sending \" + inputname);\nremoveSelectedJob(name);};};if(canSelect===true){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card p-0 m-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center p-0 m-0\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-info btn-sm my-0 py-0\",\"data-toggle\":\"modal\",\"data-target\":\"#command\"+target},/*#__PURE__*/React.createElement(\"strong\",null,\"Generate Command\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},currentSelected&&currentSelected.sort(function(a,b){return a.name>b.name?-1:1;}).map(function(job){return/*#__PURE__*/React.createElement(\"button\",{key:job.name,type:\"button\",className:\"btn btn-sm m-1 p-1\",style:{background:job.color},onClick:removeSelected(job.name)},/*#__PURE__*/React.createElement(\"small\",null,job.name));}))),/*#__PURE__*/React.createElement(CommandModal,{source:source,target:target}));}return/*#__PURE__*/React.createElement(\"div\",{className:\"card\"});};export default JobSelection;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobSelection.js"],"names":["React","useContext","Fragment","ExperimentContext","CommandModal","JobSelection","source","target","experimentContext","currentSelected","removeSelectedJob","canSelect","removeSelected","name","e","preventDefault","sort","a","b","map","job","background","color"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yCAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAwB,IAArBC,CAAAA,MAAqB,MAArBA,MAAqB,CAAbC,MAAa,MAAbA,MAAa,CAC3C;AACA,GAAMC,CAAAA,iBAAiB,CAAGP,UAAU,CAACE,iBAAD,CAApC,CAF2C,GAGnCM,CAAAA,eAHmC,CAGeD,iBAHf,CAGnCC,eAHmC,CAGlBC,iBAHkB,CAGeF,iBAHf,CAGlBE,iBAHkB,CAGCC,SAHD,CAGeH,iBAHf,CAGCG,SAHD,CAK3C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,QAAU,UAACC,CAAD,CAAO,CACtCA,CAAC,CAACC,cAAF,GACA;AACAL,iBAAiB,CAACG,IAAD,CAAjB,CACD,CAJsB,EAAvB,CAMA,GAAIF,SAAS,GAAK,IAAlB,CAAwB,CACtB,mBACE,oBAAC,QAAD,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,2BAAK,SAAS,CAAC,iCAAf,eACE,8BACE,SAAS,CAAC,+BADZ,CAEE,cAAY,OAFd,CAGE,cAAa,WAAaJ,MAH5B,eAKE,qDALF,CADF,CADF,cAUE,2BAAK,SAAS,CAAC,WAAf,EACGE,eAAe,EACdA,eAAe,CACZO,IADH,CACQ,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACJ,IAAF,CAASK,CAAC,CAACL,IAAX,CAAkB,CAAC,CAAnB,CAAuB,CAAlC,EADR,EAEGM,GAFH,CAEO,SAACC,GAAD,qBACH,8BACE,GAAG,CAAEA,GAAG,CAACP,IADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,oBAHZ,CAIE,KAAK,CAAE,CAAEQ,UAAU,CAAED,GAAG,CAACE,KAAlB,CAJT,CAKE,OAAO,CAAEV,cAAc,CAACQ,GAAG,CAACP,IAAL,CALzB,eAOE,iCAAQO,GAAG,CAACP,IAAZ,CAPF,CADG,EAFP,CAFJ,CAVF,CADF,cA4BE,oBAAC,YAAD,EAAc,MAAM,CAAEP,MAAtB,CAA8B,MAAM,CAAEC,MAAtC,EA5BF,CADF,CAgCD,CACD,mBAAO,2BAAK,SAAS,CAAC,MAAf,EAAP,CACD,CA1DD,CA4DA,cAAeF,CAAAA,YAAf","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport CommandModal from \"./CommandModal\";\n\nconst JobSelection = ({ source, target }) => {\n  //const util = require(\"util\");\n  const experimentContext = useContext(ExperimentContext);\n  const { currentSelected, removeSelectedJob, canSelect } = experimentContext;\n\n  // const onSelectionMode = (e) => {\n  //   e.preventDefault();\n  //   activateSelectionMode();\n  //   //console.log(\"Sending \" + boolValue);\n  // };\n\n  // const offSelectionMode = (e) => {\n  //   e.preventDefault();\n  //   deactivateSelectionMode();\n  //   //console.log(\"Sending \" + boolValue);\n  // };\n\n  const removeSelected = (name) => (e) => {\n    e.preventDefault();\n    //console.log(\"Sending \" + inputname);\n    removeSelectedJob(name);\n  };\n\n  if (canSelect === true) {\n    return (\n      <Fragment>\n        <div className='card p-0 m-0'>\n          <div className='card-header text-center p-0 m-0'>\n            <button\n              className='btn btn-info btn-sm my-0 py-0'\n              data-toggle='modal'\n              data-target={\"#command\" + target}\n            >\n              <strong>Generate Command</strong>\n            </button>\n          </div>\n          <div className='card-body'>\n            {currentSelected &&\n              currentSelected\n                .sort((a, b) => (a.name > b.name ? -1 : 1))\n                .map((job) => (\n                  <button\n                    key={job.name}\n                    type='button'\n                    className='btn btn-sm m-1 p-1'\n                    style={{ background: job.color }}\n                    onClick={removeSelected(job.name)}\n                  >\n                    <small>{job.name}</small>\n                  </button>\n                ))}\n          </div>\n        </div>\n        <CommandModal source={source} target={target} />\n      </Fragment>\n    );\n  }\n  return <div className='card'></div>;\n};\n\nexport default JobSelection;\n"]},"metadata":{},"sourceType":"module"}