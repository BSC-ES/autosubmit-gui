{"ast":null,"code":"import _classCallCheck from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Notification from\"react-web-notification\";var JobMonitorTree=/*#__PURE__*/function(_Component){_inherits(JobMonitorTree,_Component);var _super=_createSuper(JobMonitorTree);function JobMonitorTree(){_classCallCheck(this,JobMonitorTree);return _super.apply(this,arguments);}_createClass(JobMonitorTree,[{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;if(this.props.experiment){this.props.getExperimentTreePkl(this.props.experiment.expid,this.props.experiment.pkl_timestamp);if(this.props.experimentRunning){this.interval=setInterval(function(){return _this.props.getExperimentTreePkl(_this.props.experiment.expid,_this.props.experiment.pkl_timestamp);},this.props.experiment.updateTime*2000);}}//Notification.requestPermission();\n}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.cleanPklTreeData();if(this.props.experimentRunning){clearInterval(this.interval);}}},{key:\"render\",value:function render(){var _this$props=this.props,loadingTreePkl=_this$props.loadingTreePkl,pkltreechanges=_this$props.pkltreechanges,notificationTitleTree=_this$props.notificationTitleTree,setNotificationTitleTree=_this$props.setNotificationTitleTree;return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center py-0\"},/*#__PURE__*/React.createElement(\"small\",null,\"Monitoring jobs...\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-0\"},pkltreechanges&&/*#__PURE__*/React.createElement(\"pre\",{className:\"scroll-y-tree mb-0\"},pkltreechanges),loadingTreePkl&&/*#__PURE__*/React.createElement(\"small\",null,\"Loading...\")))),notificationTitleTree&&/*#__PURE__*/React.createElement(Notification,{title:notificationTitleTree,onClose:function onClose(){return setNotificationTitleTree(null);},onPermissionDenied:function onPermissionDenied(){return console.log(\"Permission Denied.\");}}));}}]);return JobMonitorTree;}(Component);export default JobMonitorTree;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobMonitorTree.js"],"names":["React","Component","Notification","JobMonitorTree","props","experiment","getExperimentTreePkl","expid","pkl_timestamp","experimentRunning","interval","setInterval","updateTime","cleanPklTreeData","clearInterval","loadingTreePkl","pkltreechanges","notificationTitleTree","setNotificationTitleTree","console","log"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,C,GAEMC,CAAAA,c,4SACgB,gBAClB,GAAI,KAAKC,KAAL,CAAWC,UAAf,CAA2B,CACzB,KAAKD,KAAL,CAAWE,oBAAX,CACE,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,KADxB,CAEE,KAAKH,KAAL,CAAWC,UAAX,CAAsBG,aAFxB,EAIA,GAAI,KAAKJ,KAAL,CAAWK,iBAAf,CAAkC,CAChC,KAAKC,QAAL,CAAgBC,WAAW,CACzB,iBACE,CAAA,KAAI,CAACP,KAAL,CAAWE,oBAAX,CACE,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBE,KADxB,CAEE,KAAI,CAACH,KAAL,CAAWC,UAAX,CAAsBG,aAFxB,CADF,EADyB,CAMzB,KAAKJ,KAAL,CAAWC,UAAX,CAAsBO,UAAtB,CAAmC,IANV,CAA3B,CAQD,CACF,CACD;AACD,C,mEAEsB,CACrB,KAAKR,KAAL,CAAWS,gBAAX,GACA,GAAI,KAAKT,KAAL,CAAWK,iBAAf,CAAkC,CAChCK,aAAa,CAAC,KAAKJ,QAAN,CAAb,CACD,CACF,C,uCAEQ,iBAMH,KAAKN,KANF,CAELW,cAFK,aAELA,cAFK,CAGLC,cAHK,aAGLA,cAHK,CAILC,qBAJK,aAILA,qBAJK,CAKLC,wBALK,aAKLA,wBALK,CAOP,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,8BAAf,eACE,sDADF,CADF,cAIE,2BAAK,SAAS,CAAC,eAAf,EACGF,cAAc,eACb,2BAAK,SAAS,CAAC,oBAAf,EAAqCA,cAArC,CAFJ,CAIGD,cAAc,eAAI,8CAJrB,CAJF,CADF,CADF,CAcGE,qBAAqB,eACpB,oBAAC,YAAD,EACE,KAAK,CAAEA,qBADT,CAEE,OAAO,CAAE,yBAAMC,CAAAA,wBAAwB,CAAC,IAAD,CAA9B,EAFX,CAGE,kBAAkB,CAAE,oCAAMC,CAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAN,EAHtB,EAfJ,CADF,CAwBD,C,4BA3D0BnB,S,EA8D7B,cAAeE,CAAAA,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Notification from \"react-web-notification\";\n\nclass JobMonitorTree extends Component {\n  componentDidMount() {\n    if (this.props.experiment) {\n      this.props.getExperimentTreePkl(\n        this.props.experiment.expid,\n        this.props.experiment.pkl_timestamp\n      );\n      if (this.props.experimentRunning) {\n        this.interval = setInterval(\n          () =>\n            this.props.getExperimentTreePkl(\n              this.props.experiment.expid,\n              this.props.experiment.pkl_timestamp\n            ),\n          this.props.experiment.updateTime * 2000\n        );\n      }\n    }\n    //Notification.requestPermission();\n  }\n\n  componentWillUnmount() {\n    this.props.cleanPklTreeData();\n    if (this.props.experimentRunning) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      loadingTreePkl,\n      pkltreechanges,\n      notificationTitleTree,\n      setNotificationTitleTree,\n    } = this.props;\n    return (\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header text-center py-0'>\n              <small>Monitoring jobs...</small>\n            </div>\n            <div className='card-body p-0'>\n              {pkltreechanges && (\n                <pre className='scroll-y-tree mb-0'>{pkltreechanges}</pre>\n              )}\n              {loadingTreePkl && <small>Loading...</small>}\n            </div>\n          </div>\n        </div>\n        {notificationTitleTree && (\n          <Notification\n            title={notificationTitleTree}\n            onClose={() => setNotificationTitleTree(null)}\n            onPermissionDenied={() => console.log(\"Permission Denied.\")}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default JobMonitorTree;\n"]},"metadata":{},"sourceType":"module"}