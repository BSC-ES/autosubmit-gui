{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/ExperimentRuns.js\";\nimport React, { useContext } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport TreeContext from \"../context/tree/treeContext\"; // import { exportHistoryToCSV } from \"../context/utils\";\n\nconst ExperimentRuns = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const treeContext = useContext(TreeContext);\n  const {\n    experiment,\n    experimentRuns,\n    getExperimentRuns\n  } = experimentContext;\n  const {\n    getExperimentRunJobData,\n    fancyTree,\n    startAutoUpdateTreePkl,\n    loadingPreviousRun,\n    currentRunIdOnTree\n  } = treeContext;\n  const {\n    db_historic_version,\n    expid\n  } = experiment;\n\n  const onGetExperimentRuns = e => {\n    e.preventDefault();\n    getExperimentRuns(expid);\n  };\n\n  const onGetExperimentRunDetail = (run_id, created, finished, completed, total) => e => {\n    if (!fancyTree) {\n      alert(\"The TreeView must be loaded before attempting to show previous runs.\");\n      return;\n    }\n\n    if (startAutoUpdateTreePkl === true) {\n      alert(\"Please stop the Job Monitor on the Tree View before querying for a previous run.\");\n      return;\n    } // console.log(\"Querying \" + run_id);\n\n\n    e.preventDefault();\n    const meta = {\n      \"created\": created,\n      \"finished\": finished,\n      \"completed\": completed,\n      \"total\": total\n    };\n    getExperimentRunJobData(expid, run_id, meta);\n  };\n\n  const dataTarget = \"runs-\" + expid;\n\n  if (experiment && db_historic_version && db_historic_version >= 12) {\n    return /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-sm btn-info my-0 py-0\",\n      type: \"button\",\n      onClick: onGetExperimentRuns,\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#\" + dataTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade text-dark\",\n      id: dataTarget,\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": dataTarget + \"Title\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-historic\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"modal-title\",\n      id: dataTarget + \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Runs of \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }\n    }, expid), currentRunIdOnTree && !loadingPreviousRun && /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"\\xA0\\xA0 Data from run \", currentRunIdOnTree.runId, \" is displayed in the Tree View.\")), loadingPreviousRun && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, \"The data from the previous is being retrieved and processed...\"), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"close\",\n      type: \"button\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, experimentRuns && experimentRuns.runs && /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"RunId\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Finish\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"ChunkUnit\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"ChunkSize\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Submitted\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Queuing\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Running\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Failed\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"Suspended\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, experimentRuns.runs.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.run_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }\n    }, item.run_id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    }, item.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 27\n      }\n    }, item.finish), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }\n    }, item.chunk_unit), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    }, item.chunk_size), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 27\n      }\n    }, item.submitted), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 27\n      }\n    }, item.queuing), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 27\n      }\n    }, item.running), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }\n    }, item.failed), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }, item.suspended), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 27\n      }\n    }, item.completed), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, item.total), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: currentRunIdOnTree && currentRunIdOnTree.runId === item.run_id ? 'btn-sm btn-success' : 'btn-sm btn-primary',\n      type: \"button\",\n      onClick: onGetExperimentRunDetail(item.run_id, item.created, item.finished, item.completed, item.total),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-eye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 27\n      }\n    })))))))), experimentRuns && experimentRuns.runs.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, \"There are not runs recorded for this experiment. Are you running the latest version of Autosubmit that implements the historic database?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Close\"))))));\n  } else {\n    return null;\n  }\n};\n\nexport default ExperimentRuns;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/ExperimentRuns.js"],"names":["React","useContext","ExperimentContext","TreeContext","ExperimentRuns","experimentContext","treeContext","experiment","experimentRuns","getExperimentRuns","getExperimentRunJobData","fancyTree","startAutoUpdateTreePkl","loadingPreviousRun","currentRunIdOnTree","db_historic_version","expid","onGetExperimentRuns","e","preventDefault","onGetExperimentRunDetail","run_id","created","finished","completed","total","alert","meta","dataTarget","runId","runs","map","item","finish","chunk_unit","chunk_size","submitted","queuing","running","failed","suspended","length"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport TreeContext from \"../context/tree/treeContext\";\n// import { exportHistoryToCSV } from \"../context/utils\";\n\nconst  ExperimentRuns = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const treeContext = useContext(TreeContext);\n  const { experiment, experimentRuns, getExperimentRuns } = experimentContext;\n  const { getExperimentRunJobData, fancyTree, startAutoUpdateTreePkl, loadingPreviousRun, currentRunIdOnTree } = treeContext;\n  const { db_historic_version, expid } = experiment;\n\n  const onGetExperimentRuns = (e) => {\n    e.preventDefault();\n    getExperimentRuns(expid);\n  };\n\n  const onGetExperimentRunDetail = (run_id, created, finished, completed, total) => (e) => {\n    if(!fancyTree) {\n      alert(\"The TreeView must be loaded before attempting to show previous runs.\")\n      return;\n    }\n    if(startAutoUpdateTreePkl === true){\n      alert(\"Please stop the Job Monitor on the Tree View before querying for a previous run.\");\n      return;\n    }\n    // console.log(\"Querying \" + run_id);\n    e.preventDefault();\n    const meta = {\"created\": created, \"finished\": finished, \"completed\": completed, \"total\": total};\n    getExperimentRunJobData(expid, run_id, meta);\n  }\n\n  const dataTarget = \"runs-\" + expid;\n\n\n  if (\n    experiment &&\n    db_historic_version &&\n    db_historic_version >= 12\n  ) {\n    return (\n      <small>\n        <button\n          className='btn-sm btn-info my-0 py-0'\n          type='button'\n          onClick={onGetExperimentRuns}\n          data-toggle='modal'\n          data-target={\"#\" + dataTarget}\n        >\n          <i className='fas fa-history'></i>\n        </button>\n        <div\n          className='modal fade text-dark'\n          id={dataTarget}\n          tabIndex='-1'\n          role='dialog'\n          aria-labelledby={dataTarget + \"Title\"}\n          aria-hidden='true'\n        >\n          <div className='modal-dialog modal-dialog-historic' role='document'>\n            <div className='modal-content'>\n              <div className='modal-header'>\n                <h5 className='modal-title' id={dataTarget + \"Title\"}>\n                  Runs of <strong>{expid}</strong> \n                  {currentRunIdOnTree && !loadingPreviousRun &&                 \n                <small className='text-right'>\n                  &nbsp;&nbsp; Data from run {currentRunIdOnTree.runId} is displayed in the Tree View.\n                </small>\n                }\n                </h5>\n\n                {loadingPreviousRun && (\n                  <span>\n                    The data from the previous is being retrieved and processed...\n                  </span>\n                )}\n                &nbsp;\n                {/* {experimentRuns && experimentRuns.runs && experimentRuns.runs.length > 0 &&                \n                <button type=\"button\" className=\"btn-sm btn-primary\" onClick={onExport(selectedJob)}><i className=\"fas fa-file-export\"></i></button>\n                }                 */}               \n                <button\n                  className='close'\n                  type='button'\n                  data-dismiss='modal'\n                  aria-label='Close'\n                >\n                  <span aria-hidden='true'>&times;</span>\n                </button>\n              </div>              \n              <div className='modal-body'>\n                {experimentRuns && experimentRuns.runs && (\n                  <small>\n                  <table className='table mb-0'>\n                    \n                    <thead>\n                      <tr>\n                        <th scope='col'>RunId</th>\n                        <th scope='col'>Created</th>\n                        {/* <th scope='col'>Created</th> */}\n                        <th scope='col'>Finish</th>\n                        <th scope='col'>ChunkUnit</th>\n                        <th scope='col'>ChunkSize</th>\n                        <th scope='col'>Submitted</th>\n                        <th scope='col'>Queuing</th>\n                        <th scope='col'>Running</th>\n                        <th scope='col'>Failed</th>\n                        <th scope='col'>Suspended</th>\n                        <th scope='col'>Completed</th>\n                        <th scope='col'>Total</th>\n                        <th scope='col'></th>\n                      </tr>\n                    </thead>\n                    \n                    <tbody>\n                      {experimentRuns.runs.map((item) => (\n                        <tr key={item.run_id}>\n                          <td>{item.run_id}</td>\n                          <td>{item.created}</td>\n                          {/* <td>{item.created}</td> */}\n                          <td>{item.finish}</td>\n                          <td>{item.chunk_unit}</td>\n                          <td>{item.chunk_size}</td>\n                          <td>{item.submitted}</td>\n                          {/* <td>\n                            {item.run_time}{\" \"}\n                            {item.run_time === \"0:00:00\" && (\n                              <span\n                                className='badge badge-warning'\n                                data-toggle='tooltip'\n                                data-placement='bottom'\n                                title='This running time value usually means that there has been some error either on the completion of the job or in the historical database storage process.'\n                              >\n                                !\n                              </span>\n                            )}\n                          </td> */}\n                          <td>{item.queuing}</td>\n                          <td>{item.running}</td>\n                          <td>{item.failed}</td>\n                          <td>{item.suspended}</td>\n                          <td>{item.completed}</td>\n                          <td>{item.total}</td>\n                          <td className=\"py-1\">                          \n                          <button className={currentRunIdOnTree && currentRunIdOnTree.runId === item.run_id ? 'btn-sm btn-success' : 'btn-sm btn-primary'} type='button' onClick={onGetExperimentRunDetail(item.run_id, item.created, item.finished, item.completed, item.total)}>\n                          <i className=\"fas fa-eye\"></i>\n                          </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  </small>\n                )}\n                {experimentRuns && experimentRuns.runs.length === 0 && (\n                  <p>\n                    There are not runs recorded for this experiment. Are you running the\n                    latest version of Autosubmit that implements the historic\n                    database?\n                  </p>\n                )}                \n              </div>\n              <div className='modal-footer'>\n                <button\n                  type='button'\n                  className='btn btn-secondary'\n                  data-dismiss='modal'\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </small>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ExperimentRuns\n"]},"metadata":{},"sourceType":"module"}