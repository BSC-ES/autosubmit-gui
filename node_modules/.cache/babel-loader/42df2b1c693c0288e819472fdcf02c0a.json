{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/GraphNodeSelection.js\";\nimport React, { useContext, Fragment } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport CommandModal from \"./CommandModal\";\n\nconst GraphNodeSelection = ({\n  target = \"manual-graph\"\n}) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    selection,\n    updateGraphSelectedNodes\n  } = graphContext;\n  const {\n    canSelect\n  } = experimentContext;\n\n  const onChangeStatus = e => {\n    e.preventDefault();\n    updateGraphSelectedNodes();\n  };\n\n  if (selection && !canSelect) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-sm btn-info\",\n      type: \"button\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#command\" + target,\n      onClick: onChangeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Change Status\")), /*#__PURE__*/React.createElement(CommandModal, {\n      source: \"graph-only\",\n      target: target,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    })) // <button\n    //   className='btn-sm btn-info'\n    //   type='button'\n    //   onClick={onChangeStatus}\n    // >\n    //   Change Status\n    // </button>\n    ;\n  }\n\n  return null;\n};\n\nexport default GraphNodeSelection;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/GraphNodeSelection.js"],"names":["React","useContext","Fragment","GraphContext","ExperimentContext","CommandModal","GraphNodeSelection","target","graphContext","experimentContext","selection","updateGraphSelectedNodes","canSelect","onChangeStatus","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG;AAAX,CAAD,KAAiC;AAC1D,QAAMC,YAAY,GAAGP,UAAU,CAACE,YAAD,CAA/B;AACA,QAAMM,iBAAiB,GAAGR,UAAU,CAACG,iBAAD,CAApC;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0CH,YAAhD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAgBH,iBAAtB;;AAEA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,wBAAwB;AACzB,GAHD;;AAKA,MAAID,SAAS,IAAI,CAACE,SAAlB,EAA6B;AAC3B,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBAAY,OAHd;AAIE,qBAAa,aAAaL,MAJ5B;AAKE,MAAA,OAAO,EAAEM,cALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,CADF,eAUE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAE,YAAtB;AAAoC,MAAA,MAAM,EAAEN,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AApBF;AAsBD;;AAED,SAAO,IAAP;AACD,CArCD;;AAuCA,eAAeD,kBAAf","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport CommandModal from \"./CommandModal\";\n\nconst GraphNodeSelection = ({ target = \"manual-graph\" }) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n  const { selection, updateGraphSelectedNodes } = graphContext;\n  const { canSelect } = experimentContext;\n\n  const onChangeStatus = (e) => {\n    e.preventDefault();\n    updateGraphSelectedNodes();\n  };\n\n  if (selection && !canSelect) {\n    return (\n      <Fragment>\n        <button\n          className='btn-sm btn-info'\n          type='button'\n          data-toggle='modal'\n          data-target={\"#command\" + target}\n          onClick={onChangeStatus}\n        >\n          <strong>Change Status</strong>\n        </button>\n        <CommandModal source={\"graph-only\"} target={target} />\n      </Fragment>\n\n      // <button\n      //   className='btn-sm btn-info'\n      //   type='button'\n      //   onClick={onChangeStatus}\n      // >\n      //   Change Status\n      // </button>\n    );\n  }\n\n  return null;\n};\n\nexport default GraphNodeSelection;\n"]},"metadata":{},"sourceType":"module"}