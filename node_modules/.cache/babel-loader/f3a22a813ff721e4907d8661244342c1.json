{"ast":null,"code":"import React,{useContext}from\"react\";import dogload from\"./dogload.gif\";import catload from\"./catload.gif\";import Spinner from\"./Spinner\";import LoadingCounter from\"./LoadingCounter\";import ExperimentContext from\"../context/experiment/experimentContext\";var Loading=function Loading(_ref){var source=_ref.source;var experimentContext=useContext(ExperimentContext);var expectedLoadingTreeTime=experimentContext.expectedLoadingTreeTime,expectedLoadingQuickView=experimentContext.expectedLoadingQuickView;// useEffect(() => {\n//   const interval = setInterval(() => {\n//     increaseElapsedLoadingTree();\n//   }, 1000);\n//   return () => clearInterval(interval);\n//   // eslint-disable-next-line react-hooks/exhaustive-deps\n// }, []);\nvar expectedTime=source===\"tree\"?expectedLoadingTreeTime:expectedLoadingQuickView;var gifload=source===\"tree\"?dogload:catload;//console.log(expectedLoadingTreeTime);\nif(expectedTime>=1){return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4\"},/*#__PURE__*/React.createElement(\"img\",{src:gifload,alt:\"Loading...\",style:{width:\"200px\",margin:\"auto\",display:\"block\"}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"row justify-content-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4\"},/*#__PURE__*/React.createElement(LoadingCounter,{loadsource:source})))));}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(Spinner,null)));}};export default Loading;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/layout/Loading.js"],"names":["React","useContext","dogload","catload","Spinner","LoadingCounter","ExperimentContext","Loading","source","experimentContext","expectedLoadingTreeTime","expectedLoadingQuickView","expectedTime","gifload","width","margin","display"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yCAA9B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAC9B,GAAMC,CAAAA,iBAAiB,CAAGR,UAAU,CAACK,iBAAD,CAApC,CAD8B,GAG5BI,CAAAA,uBAH4B,CAO1BD,iBAP0B,CAG5BC,uBAH4B,CAI5BC,wBAJ4B,CAO1BF,iBAP0B,CAI5BE,wBAJ4B,CAS9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,YAAY,CAChBJ,MAAM,GAAK,MAAX,CAAoBE,uBAApB,CAA8CC,wBADhD,CAEA,GAAME,CAAAA,OAAO,CAAGL,MAAM,GAAK,MAAX,CAAoBN,OAApB,CAA8BC,OAA9C,CAEA;AACA,GAAIS,YAAY,EAAI,CAApB,CAAuB,CACrB,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,4BAAf,eACE,2BAAK,SAAS,CAAC,OAAf,eACE,2BACE,GAAG,CAAEC,OADP,CAEE,GAAG,CAAC,YAFN,CAGE,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,MAAM,CAAE,MAA1B,CAAkCC,OAAO,CAAE,OAA3C,CAHT,EADF,CADF,CADF,cAUE,2BAAK,SAAS,CAAC,4BAAf,eACE,2BAAK,SAAS,CAAC,OAAf,eACE,oBAAC,cAAD,EAAgB,UAAU,CAAER,MAA5B,EADF,CADF,CAVF,CADF,CADF,CAoBD,CArBD,IAqBO,CACL,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,OAAD,MADF,CADF,CADF,CAOD,CACF,CAnDD,CAqDA,cAAeD,CAAAA,OAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport dogload from \"./dogload.gif\";\nimport catload from \"./catload.gif\";\nimport Spinner from \"./Spinner\";\nimport LoadingCounter from \"./LoadingCounter\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\n\nconst Loading = ({ source }) => {\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    expectedLoadingTreeTime,\n    expectedLoadingQuickView,\n    //increaseElapsedLoadingTree,\n    //elapsedLoadingTree,\n  } = experimentContext;\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     increaseElapsedLoadingTree();\n  //   }, 1000);\n  //   return () => clearInterval(interval);\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n  const expectedTime =\n    source === \"tree\" ? expectedLoadingTreeTime : expectedLoadingQuickView;\n  const gifload = source === \"tree\" ? dogload : catload;\n\n  //console.log(expectedLoadingTreeTime);\n  if (expectedTime >= 1) {\n    return (\n      <div className='row'>\n        <div className='col'>\n          <div className='row justify-content-center'>\n            <div className='col-4'>\n              <img\n                src={gifload}\n                alt='Loading...'\n                style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n              />\n            </div>\n          </div>\n          <div className='row justify-content-center'>\n            <div className='col-4'>\n              <LoadingCounter loadsource={source} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className='row'>\n        <div className='col'>\n          <Spinner></Spinner>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Loading;\n"]},"metadata":{},"sourceType":"module"}