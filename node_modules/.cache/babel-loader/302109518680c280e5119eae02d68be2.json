{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/CommandModal.js\";\nimport React, { useContext } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport { DEBUG } from \"../context/vars\";\nimport { commandGenerator, commandGeneratorGraph, statusChangeTextGeneratorGraph, statusChangeTextGenerator } from \"../context/utils\";\n\nconst CommandModal = ({\n  source,\n  target\n}) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    currentSelected,\n    setCurrentCommand,\n    setCurrentTextCommand,\n    experiment,\n    currentCommand,\n    currentTextCommand\n  } = experimentContext;\n  const {\n    graphSelectedNodes,\n    setCurrentCommandGraph,\n    setCurrentTextCommandGraph,\n    currentTextCommandGraph,\n    currentCommandGraph\n  } = graphContext;\n  let expid = null;\n\n  if (experiment) {\n    expid = experiment.expid;\n  }\n\n  const sourceSelection = source === \"graph-only\" ? graphSelectedNodes : currentSelected;\n  const sourceCommand = source === \"graph-only\" ? currentCommandGraph : currentCommand;\n  const invalidMessage = source === \"graph-only\" ? \"Invalid Selection: You have to select at least one job from the Graph. You can select multiple jobs.\" : \"Invalid Selection: You have to select at least one job.\"; // console.log(sourceSelection);\n  // console.log(sourceCommand);\n\n  const setStatusTextCommand = status => e => {\n    e.preventDefault();\n    let command = \"\";\n\n    if (source === \"graph-only\") {\n      command = statusChangeTextGeneratorGraph(sourceSelection, status);\n      copyContent(command);\n      setCurrentTextCommandGraph(command);\n    } else {\n      command = statusChangeTextGenerator(sourceSelection, status);\n      copyContent(command);\n      setCurrentTextCommand(command);\n    }\n  };\n\n  const setStatusCommand = status => e => {\n    e.preventDefault();\n    let command = \"\";\n\n    if (source === \"graph-only\") {\n      command = commandGeneratorGraph(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommandGraph(command);\n    } else {\n      command = commandGenerator(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommand(command);\n    }\n  };\n\n  const copyContent = inputname => {\n    //e.preventDefault();\n    DEBUG && console.log(\"Sending \" + inputname);\n    window.copyTextToClipboard(inputname);\n  }; //copying to Clipboard\n  // if (sourceCommand && sourceCommand.length > 0) {\n  //   if (canCopyToClipboard === true) {\n  //     DEBUG && console.log(sourceCommand);\n  //     copyContent(JSON.parse(JSON.stringify(sourceCommand)));\n  //   }\n  // }\n\n\n  let modalHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, invalidMessage);\n\n  if (sourceSelection && sourceSelection.length > 0) {\n    modalHeader = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, \"Set status to:\", \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      style: {\n        background: \"lightblue\"\n      },\n      onClick: setStatusCommand(\"READY\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Ready\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-secondary\",\n      onClick: setStatusCommand(\"WAITING\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Waiting\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      style: {\n        background: \"yellow\"\n      },\n      onClick: setStatusCommand(\"COMPLETED\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      style: {\n        background: \"orange\"\n      },\n      onClick: setStatusCommand(\"SUSPENDED\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Suspended\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-danger\",\n      onClick: setStatusCommand(\"FAILED\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"Failed\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, \"Generate file text:\", \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      style: {\n        background: \"lightblue\"\n      },\n      onClick: setStatusTextCommand(\"READY\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Ready\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-secondary\",\n      onClick: setStatusTextCommand(\"WAITING\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Waiting\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      style: {\n        background: \"yellow\"\n      },\n      onClick: setStatusTextCommand(\"COMPLETED\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm\",\n      style: {\n        background: \"orange\"\n      },\n      onClick: setStatusTextCommand(\"SUSPENDED\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"Suspended\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-danger\",\n      onClick: setStatusTextCommand(\"FAILED\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Failed\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"command\" + target,\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"commandTitle\" + target,\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-dialog-status\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, modalHeader), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-2 mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    style: {\n      fontFamily: \"Courier\",\n      background: \"black\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, sourceCommand && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, JSON.parse(JSON.stringify(sourceCommand)))))), sourceCommand && sourceCommand.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-1 mb-2 float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"The command has been copied to the clipboard. Paste it in your terminal.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-dark\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Close\")))));\n};\n\nexport default CommandModal;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/CommandModal.js"],"names":["React","useContext","GraphContext","ExperimentContext","DEBUG","commandGenerator","commandGeneratorGraph","statusChangeTextGeneratorGraph","statusChangeTextGenerator","CommandModal","source","target","graphContext","experimentContext","currentSelected","setCurrentCommand","setCurrentTextCommand","experiment","currentCommand","currentTextCommand","graphSelectedNodes","setCurrentCommandGraph","setCurrentTextCommandGraph","currentTextCommandGraph","currentCommandGraph","expid","sourceSelection","sourceCommand","invalidMessage","setStatusTextCommand","status","e","preventDefault","command","copyContent","setStatusCommand","inputname","console","log","window","copyTextToClipboard","modalHeader","length","background","fontFamily","color","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport { DEBUG } from \"../context/vars\";\nimport { commandGenerator, commandGeneratorGraph, statusChangeTextGeneratorGraph, statusChangeTextGenerator } from \"../context/utils\";\n\nconst CommandModal = ({ source, target }) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n\n  const {\n    currentSelected,\n    setCurrentCommand,\n    setCurrentTextCommand,\n    experiment,\n    currentCommand,\n    currentTextCommand,\n  } = experimentContext;\n  const {\n    graphSelectedNodes,\n    setCurrentCommandGraph,\n    setCurrentTextCommandGraph,\n    currentTextCommandGraph,\n    currentCommandGraph,\n  } = graphContext;\n  let expid = null;\n  if (experiment) {\n    expid = experiment.expid;\n  }\n  const sourceSelection =\n    source === \"graph-only\" ? graphSelectedNodes : currentSelected;\n  const sourceCommand =\n    source === \"graph-only\" ? currentCommandGraph : currentCommand;\n\n  const invalidMessage =\n    source === \"graph-only\"\n      ? \"Invalid Selection: You have to select at least one job from the Graph. You can select multiple jobs.\"\n      : \"Invalid Selection: You have to select at least one job.\";\n\n  // console.log(sourceSelection);\n  // console.log(sourceCommand);\n\n  const setStatusTextCommand = (status) => (e) => {\n    e.preventDefault();\n    let command = \"\";\n    if (source === \"graph-only\") {\n      command = statusChangeTextGeneratorGraph(sourceSelection, status);\n      copyContent(command);\n      setCurrentTextCommandGraph(command);\n    } else {\n      command = statusChangeTextGenerator(sourceSelection, status);\n      copyContent(command);\n      setCurrentTextCommand(command);\n    }\n  };\n\n  const setStatusCommand = (status) => (e) => {\n    e.preventDefault();\n    let command = \"\";\n    if (source === \"graph-only\") {\n      command = commandGeneratorGraph(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommandGraph(command);\n    } else {\n      command = commandGenerator(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommand(command);\n    }\n  };\n\n  const copyContent = (inputname) => {\n    //e.preventDefault();\n    DEBUG && console.log(\"Sending \" + inputname);\n    window.copyTextToClipboard(inputname);\n  };\n\n  //copying to Clipboard\n  // if (sourceCommand && sourceCommand.length > 0) {\n  //   if (canCopyToClipboard === true) {\n  //     DEBUG && console.log(sourceCommand);\n  //     copyContent(JSON.parse(JSON.stringify(sourceCommand)));\n  //   }\n  // }\n\n  let modalHeader = <div className='col-12'>{invalidMessage}</div>;\n\n  if (sourceSelection && sourceSelection.length > 0) {\n    modalHeader = (\n      <div className=\"row\">\n\n      \n      <div className='col-12'>\n        Set status to:{\" \"}\n        <div className='btn-group' role='group' aria-label='Status'>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"lightblue\" }}\n            onClick={setStatusCommand(\"READY\")}\n          >\n            Ready\n          </button>\n          <button\n            className='btn btn-sm btn-secondary'\n            onClick={setStatusCommand(\"WAITING\")}\n          >\n            Waiting\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"yellow\" }}\n            onClick={setStatusCommand(\"COMPLETED\")}\n          >\n            Completed\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"orange\" }}\n            onClick={setStatusCommand(\"SUSPENDED\")}\n          >\n            Suspended\n          </button>\n          <button\n            className='btn btn-sm btn-danger'\n            onClick={setStatusCommand(\"FAILED\")}\n          >\n            Failed\n          </button>\n        </div>\n      </div>\n      <div className=\"col-12\">\n        Generate file text:{\" \"}\n        <div className='btn-group' role='group' aria-label='Status'>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"lightblue\" }}\n            onClick={setStatusTextCommand(\"READY\")}\n          >\n            Ready\n          </button>\n          <button\n            className='btn btn-sm btn-secondary'\n            onClick={setStatusTextCommand(\"WAITING\")}\n          >\n            Waiting\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"yellow\" }}\n            onClick={setStatusTextCommand(\"COMPLETED\")}\n          >\n            Completed\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"orange\" }}\n            onClick={setStatusTextCommand(\"SUSPENDED\")}\n          >\n            Suspended\n          </button>\n          <button\n            className='btn btn-sm btn-danger'\n            onClick={setStatusTextCommand(\"FAILED\")}\n          >\n            Failed\n          </button>\n        </div>\n      </div>\n      </div>\n    );\n  }\n  return (\n    <div\n      className='modal fade'\n      id={\"command\" + target}\n      tabIndex='-1'\n      role='dialog'\n      aria-labelledby={\"commandTitle\" + target}\n      aria-hidden='true'\n    >\n      <div className='modal-dialog modal-dialog-status' role='document'>\n        <div className='modal-content'>\n          <div className='modal-body pb-1'>\n            <div className='row'>{modalHeader}</div>\n            <div className='row mt-2 mx-1'>\n              <div\n                className='col-12'\n                style={{\n                  fontFamily: \"Courier\",\n                  background: \"black\",\n                  color: \"white\",\n                }}\n              >\n                {sourceCommand && (\n                  <div className='p-2'>\n                    {JSON.parse(JSON.stringify(sourceCommand))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          {sourceCommand && sourceCommand.length > 0 && (\n            <div className='row mx-1 mb-2 float-left'>\n              <div className='col-12'>\n                The command has been copied to the clipboard. Paste it in your\n                terminal.\n              </div>\n            </div>\n          )}\n          <div className='modal-footer'>\n            <button\n              type='button'\n              className='btn btn-sm btn-dark'\n              data-dismiss='modal'\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommandModal;\n"]},"metadata":{},"sourceType":"module"}