{"ast":null,"code":"export var timeStampToDate=function timeStampToDate(value){//console.log('Setting new format: ' + value);\nvar formattedDate=\"\";var date=new Date(value*1000);var hours=date.getHours();var minutes=\"0\"+date.getMinutes();var seconds=\"0\"+date.getSeconds();var month=date.getMonth()+1;var day=date.getDate();//console.log(date)\nformattedDate=\"[\"+day+\"/\"+month+\"] \"+hours+\":\"+minutes.substr(-2)+\":\"+seconds.substr(-2);// formattedDate = date.toISOString();\nreturn formattedDate;};export var hashCode=function hashCode(value){var hash=0,i,chr;if(value.length===0)return hash;for(i=0;i<value.length;i++){chr=value.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0;// Convert to 32bit integer\n}console.log(hash);return hash;};export var commandGeneratorGraph=function commandGeneratorGraph(expid,jobs,status){var command=\"Invalid Command: You have to select at least one job.\";//jobs.map((job) => arrayNames.push(job.name));\nif(jobs.length>0){command=\"autosubmit setstatus \"+expid+' -fl \"'+jobs.join(\" \")+'\" -t '+status+\" -s -nt -np\";}return command;};export var commandGenerator=function commandGenerator(expid,jobs,status){var arrayNames=[];var command=\"Invalid Command: You have to select at least one job.\";jobs.map(function(job){return arrayNames.push(job.name);});if(arrayNames.length>0){command=\"autosubmit setstatus \"+expid+' -fl \"'+arrayNames.join(\" \")+'\" -t '+status+\" -s -nt -np\";}return command;};export var secondsToDelta=function secondsToDelta(SECONDS){if(SECONDS>0){var sec_num=SECONDS;// don't forget the second param\nvar hours=Math.floor(sec_num/3600);var minutes=Math.floor((sec_num-hours*3600)/60);var seconds=sec_num-hours*3600-minutes*60;if(hours<10){hours=\"0\"+hours;}if(minutes<10){minutes=\"0\"+minutes;}if(seconds<10){seconds=\"0\"+seconds;}return hours+\":\"+minutes+\":\"+seconds;}else{return\"0:00:00\";}};var startTime,endTime;export var start=function start(){startTime=new Date();};export var end=function end(){endTime=new Date();var timeDiff=endTime-startTime;//in ms\n// strip the ms\ntimeDiff/=1000;// get seconds\nvar seconds=Math.round(timeDiff);console.log(seconds+\" seconds\");};export var approximateLoadingTreeTime=function approximateLoadingTreeTime(x){if(x<=1000)return 1;var y=Math.round(0.02*x-30);return y;};export var approximateLoadingQuickView=function approximateLoadingQuickView(x){if(x<=2000)return 1;var y=Math.round(0.005*x-37);return y;};export var exportHistoryToCSV=function exportHistoryToCSV(data,columnNames,title){var date=new Date();title=date.getFullYear().toString()+date.getMonth()+date.getDate()+date.getHours()+date.getMinutes()+\"_\"+title;var csvContent=\"data:text/csv;charset=utf-8,\";csvContent+=columnNames.join(\",\")+\"\\n\";if(data){var mapped=[];data.map(function(item){return mapped.push([item.counter,item.job_id,item.submit,item.start,item.finish,item.queue_time,item.run_time,item.status,item.energy,item.wallclock,item.ncpus,item.nodes]);});csvContent+=mapped.map(function(item){return item.join(\",\");}).join(\"\\n\");}var encodedUri=encodeURI(csvContent);var link=document.createElement(\"a\");link.setAttribute(\"href\",encodedUri);link.setAttribute(\"download\",title);document.body.appendChild(link);// Required for FF\nlink.click();};export var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/utils.js"],"names":["timeStampToDate","value","formattedDate","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","month","getMonth","day","getDate","substr","hashCode","hash","i","chr","length","charCodeAt","console","log","commandGeneratorGraph","expid","jobs","status","command","join","commandGenerator","arrayNames","map","job","push","name","secondsToDelta","SECONDS","sec_num","Math","floor","startTime","endTime","start","end","timeDiff","round","approximateLoadingTreeTime","x","y","approximateLoadingQuickView","exportHistoryToCSV","data","columnNames","title","getFullYear","toString","csvContent","mapped","item","counter","job_id","submit","finish","queue_time","run_time","energy","wallclock","ncpus","nodes","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","sleep","ms","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["export const timeStampToDate = (value) => {\n  //console.log('Setting new format: ' + value);\n  let formattedDate = \"\";\n  var date = new Date(value * 1000);\n  var hours = date.getHours();\n  var minutes = \"0\" + date.getMinutes();\n  var seconds = \"0\" + date.getSeconds();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  //console.log(date)\n  formattedDate =\n    \"[\" +\n    day +\n    \"/\" +\n    month +\n    \"] \" +\n    hours +\n    \":\" +\n    minutes.substr(-2) +\n    \":\" +\n    seconds.substr(-2);\n  // formattedDate = date.toISOString();\n  return formattedDate;\n};\n\nexport const hashCode = (value) => {\n  var hash = 0,\n    i,\n    chr;\n  if (value.length === 0) return hash;\n  for (i = 0; i < value.length; i++) {\n    chr = value.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  console.log(hash);\n  return hash;\n};\n\nexport const commandGeneratorGraph = (expid, jobs, status) => {\n  let command = \"Invalid Command: You have to select at least one job.\";\n  //jobs.map((job) => arrayNames.push(job.name));\n  if (jobs.length > 0) {\n    command =\n      \"autosubmit setstatus \" +\n      expid +\n      ' -fl \"' +\n      jobs.join(\" \") +\n      '\" -t ' +\n      status +\n      \" -s -nt -np\";\n  }\n  return command;\n};\n\nexport const commandGenerator = (expid, jobs, status) => {\n  let arrayNames = [];\n  let command = \"Invalid Command: You have to select at least one job.\";\n  jobs.map((job) => arrayNames.push(job.name));\n  if (arrayNames.length > 0) {\n    command =\n      \"autosubmit setstatus \" +\n      expid +\n      ' -fl \"' +\n      arrayNames.join(\" \") +\n      '\" -t ' +\n      status +\n      \" -s -nt -np\";\n  }\n  return command;\n};\n\nexport const secondsToDelta = (SECONDS) => {\n  if (SECONDS > 0) {\n    var sec_num = SECONDS; // don't forget the second param\n    var hours = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - hours * 3600) / 60);\n    var seconds = sec_num - hours * 3600 - minutes * 60;\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    return hours + \":\" + minutes + \":\" + seconds;\n  } else {\n    return \"0:00:00\";\n  }\n};\n\nvar startTime, endTime;\n\nexport const start = () => {\n  startTime = new Date();\n};\n\nexport const end = () => {\n  endTime = new Date();\n  var timeDiff = endTime - startTime; //in ms\n  // strip the ms\n  timeDiff /= 1000;\n\n  // get seconds\n  var seconds = Math.round(timeDiff);\n  console.log(seconds + \" seconds\");\n};\n\nexport const approximateLoadingTreeTime = (x) => {\n  if (x <= 1000) return 1;\n  let y = Math.round(0.02 * x - 30);\n  return y;\n};\n\nexport const approximateLoadingQuickView = (x) => {\n  if (x <= 2000) return 1;\n  let y = Math.round(0.005 * x - 37);\n  return y;\n};\n\nexport const exportHistoryToCSV = (data, columnNames, title) => {\n  \n  let date = new Date();  \n  title =  date.getFullYear().toString() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + \"_\" + title;\n  let csvContent = \"data:text/csv;charset=utf-8,\";\n  csvContent += columnNames.join(\",\") + \"\\n\";\n  if (data){\n    let mapped = []\n    data.map((item) => mapped.push([item.counter,item.job_id,item.submit,item.start,item.finish,item.queue_time,item.run_time, item.status, item.energy, item.wallclock, item.ncpus, item.nodes]));\n    csvContent += mapped.map((item) => item.join(\",\")).join(\"\\n\");\n  }\n  var encodedUri = encodeURI(csvContent);\n  var link = document.createElement(\"a\");\n  link.setAttribute(\"href\", encodedUri);\n  link.setAttribute(\"download\", title);\n  document.body.appendChild(link); // Required for FF\n  link.click();\n}\n\nexport const sleep = (ms) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n"]},"metadata":{},"sourceType":"module"}