{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/experiment/Experiments.js\";\nimport React, { useContext } from 'react';\nimport ExperimentItem from './ExperimentItem';\nimport Spinner from '../layout/Spinner';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiments = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const loading = experimentContext.loading,\n        experiments = experimentContext.experiments;\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, experiments.map(experiment => React.createElement(ExperimentItem, {\n      key: experiment.id,\n      experiment: experiment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }))));\n  }\n}; // const experimentStyle = {\n//   display: 'grid',\n//   gridTemplateColumns: 'repeat(3, 1fr)',\n//   gridGap: '1rem'\n// };\n\n\nexport default Experiments;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/experiment/Experiments.js"],"names":["React","useContext","ExperimentItem","Spinner","ExperimentContext","Experiments","experimentContext","loading","experiments","map","experiment","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,iBAAiB,GAAGL,UAAU,CAACG,iBAAD,CAApC;AADwB,QAEhBG,OAFgB,GAESD,iBAFT,CAEhBC,OAFgB;AAAA,QAEPC,WAFO,GAESF,iBAFT,CAEPE,WAFO;;AAGtB,MAAGD,OAAH,EAAY;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,WAAW,CAACC,GAAZ,CAAgBC,UAAU,IACzB,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,UAAU,CAACC,EAAhC;AAAoC,MAAA,UAAU,EAAED,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CADF;AASD;AACJ,CAhBD,C,CAkBA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport ExperimentItem from './ExperimentItem';\nimport Spinner from '../layout/Spinner';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiments = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const { loading, experiments } = experimentContext;\n    if(loading) {\n      return <Spinner />\n    } else {\n      return (\n        <div className=\"container\">\n          <div className=\"card-columns\">\n            {experiments.map(experiment => (\n              <ExperimentItem key={experiment.id} experiment={experiment} />\n            ))}\n          </div>\n        </div>        \n      );\n    }\n}\n\n// const experimentStyle = {\n//   display: 'grid',\n//   gridTemplateColumns: 'repeat(3, 1fr)',\n//   gridGap: '1rem'\n// };\n\nexport default Experiments;\n"]},"metadata":{},"sourceType":"module"}