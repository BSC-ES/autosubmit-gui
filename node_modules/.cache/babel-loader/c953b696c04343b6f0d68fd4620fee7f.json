{"ast":null,"code":"import _classCallCheck from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Notification from\"react-web-notification\";var JobMonitor=/*#__PURE__*/function(_Component){_inherits(JobMonitor,_Component);var _super=_createSuper(JobMonitor);function JobMonitor(){_classCallCheck(this,JobMonitor);return _super.apply(this,arguments);}_createClass(JobMonitor,[{key:\"componentDidMount\",// const experimentContext = useContext(ExperimentContext);\n// const { pkldata, loadingPkl } = experimentContext;\nvalue:function componentDidMount(){var _this=this;if(this.props.experiment){this.props.getExperimentPkl(this.props.experiment.expid,this.props.experiment.pkl_timestamp);if(this.props.experimentRunning){this.interval=setInterval(function(){return _this.props.getExperimentPkl(_this.props.experiment.expid,_this.props.experiment.pkl_timestamp);},this.props.experiment.updateTime*2000);}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.cleanPklData();if(this.props.experimentRunning){clearInterval(this.interval);}}},{key:\"render\",value:function render(){var _this$props=this.props,loadingPkl=_this$props.loadingPkl,pklchanges=_this$props.pklchanges,notificationTitleGraph=_this$props.notificationTitleGraph,setNotificationTitleGraph=_this$props.setNotificationTitleGraph;return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center py-0\"},/*#__PURE__*/React.createElement(\"small\",null,\"Monitoring jobs...\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-0\"},pklchanges&&/*#__PURE__*/React.createElement(\"pre\",{className:\"scroll-y mb-0\"},pklchanges),loadingPkl&&/*#__PURE__*/React.createElement(\"small\",null,\"Loading...\")))),notificationTitleGraph&&/*#__PURE__*/React.createElement(Notification,{title:notificationTitleGraph,onClose:function onClose(){return setNotificationTitleGraph(null);},onPermissionDenied:function onPermissionDenied(){return console.log(\"Permission Denied.\");}}));}}]);return JobMonitor;}(Component);// const experimentStyle = {\n//     height: 338\n//   };\n// const monitorStyle = {\n//     height: 310\n// }\nexport default JobMonitor;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobMonitor.js"],"names":["React","Component","Notification","JobMonitor","props","experiment","getExperimentPkl","expid","pkl_timestamp","experimentRunning","interval","setInterval","updateTime","cleanPklData","clearInterval","loadingPkl","pklchanges","notificationTitleGraph","setNotificationTitleGraph","console","log"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,C,GAEMC,CAAAA,U,sPACJ;AACA;kCACoB,gBAClB,GAAI,KAAKC,KAAL,CAAWC,UAAf,CAA2B,CACzB,KAAKD,KAAL,CAAWE,gBAAX,CACE,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,KADxB,CAEE,KAAKH,KAAL,CAAWC,UAAX,CAAsBG,aAFxB,EAIA,GAAI,KAAKJ,KAAL,CAAWK,iBAAf,CAAkC,CAChC,KAAKC,QAAL,CAAgBC,WAAW,CACzB,iBACE,CAAA,KAAI,CAACP,KAAL,CAAWE,gBAAX,CACE,KAAI,CAACF,KAAL,CAAWC,UAAX,CAAsBE,KADxB,CAEE,KAAI,CAACH,KAAL,CAAWC,UAAX,CAAsBG,aAFxB,CADF,EADyB,CAMzB,KAAKJ,KAAL,CAAWC,UAAX,CAAsBO,UAAtB,CAAmC,IANV,CAA3B,CAQD,CACF,CACF,C,mEAEsB,CACrB,KAAKR,KAAL,CAAWS,YAAX,GACA,GAAI,KAAKT,KAAL,CAAWK,iBAAf,CAAkC,CAChCK,aAAa,CAAC,KAAKJ,QAAN,CAAb,CACD,CACF,C,uCAEQ,iBAMH,KAAKN,KANF,CAELW,UAFK,aAELA,UAFK,CAGLC,UAHK,aAGLA,UAHK,CAILC,sBAJK,aAILA,sBAJK,CAKLC,yBALK,aAKLA,yBALK,CAOP,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,8BAAf,eACE,sDADF,CADF,cAIE,2BAAK,SAAS,CAAC,eAAf,EACGF,UAAU,eAAI,2BAAK,SAAS,CAAC,eAAf,EAAgCA,UAAhC,CADjB,CAEGD,UAAU,eAAI,8CAFjB,CAJF,CADF,CADF,CAYGE,sBAAsB,eACrB,oBAAC,YAAD,EACE,KAAK,CAAEA,sBADT,CAEE,OAAO,CAAE,yBAAMC,CAAAA,yBAAyB,CAAC,IAAD,CAA/B,EAFX,CAGE,kBAAkB,CAAE,oCAAMC,CAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAN,EAHtB,EAbJ,CADF,CAsBD,C,wBA1DsBnB,S,EA6DzB;AACA;AACA;AACA;AACA;AACA;AAEA,cAAeE,CAAAA,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Notification from \"react-web-notification\";\n\nclass JobMonitor extends Component {\n  // const experimentContext = useContext(ExperimentContext);\n  // const { pkldata, loadingPkl } = experimentContext;\n  componentDidMount() {\n    if (this.props.experiment) {\n      this.props.getExperimentPkl(\n        this.props.experiment.expid,\n        this.props.experiment.pkl_timestamp\n      );\n      if (this.props.experimentRunning) {\n        this.interval = setInterval(\n          () =>\n            this.props.getExperimentPkl(\n              this.props.experiment.expid,\n              this.props.experiment.pkl_timestamp\n            ),\n          this.props.experiment.updateTime * 2000\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanPklData();\n    if (this.props.experimentRunning) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      loadingPkl,\n      pklchanges,\n      notificationTitleGraph,\n      setNotificationTitleGraph,\n    } = this.props;\n    return (\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header text-center py-0'>\n              <small>Monitoring jobs...</small>\n            </div>\n            <div className='card-body p-0'>\n              {pklchanges && <pre className='scroll-y mb-0'>{pklchanges}</pre>}\n              {loadingPkl && <small>Loading...</small>}\n            </div>\n          </div>\n        </div>\n        {notificationTitleGraph && (\n          <Notification\n            title={notificationTitleGraph}\n            onClose={() => setNotificationTitleGraph(null)}\n            onPermissionDenied={() => console.log(\"Permission Denied.\")}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n// const experimentStyle = {\n//     height: 338\n//   };\n// const monitorStyle = {\n//     height: 310\n// }\n\nexport default JobMonitor;\n"]},"metadata":{},"sourceType":"module"}