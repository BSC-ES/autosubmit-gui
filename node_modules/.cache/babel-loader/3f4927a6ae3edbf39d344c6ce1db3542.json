{"ast":null,"code":"import _regeneratorRuntime from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer,useContext}from\"react\";import axios from\"axios\";import GraphContext from\"./graphContext\";import GraphReducer from\"./graphReducer\";import ExperimentContext from\"../experiment/experimentContext\";import{sleep}from\"../utils\";import{GET_GRAPH,GET_PKL_DATA,CLEAN_GRAPH_DATA,CLEAN_ONLY_GRAH_DATA,SET_LOADING_GRAPH,SET_AUTOUPDATE_PKL,SET_VIS_DATA,SET_VIS_NETWORK,UPDATE_SELECTION,SET_FOUND_NODES,SET_LOADING_SEARCH_JOB,SET_LOADING_PKL,SHOULD_UPDATE_GRAPH,SET_LOADING_JOB_MONITOR,SET_CURRENT_COMMAND,SET_CURRENT_TEXT_COMMAND,NAVIGATE_GRAPH_TO,CLEAN_PKL_DATA,CLEAN_NAV_DATA,NAVIGATE_AFTER_LOADING_GRAPH,NAVIGATE_TO_GROUP_GRAPH,NAVIGATE_TO_LATEST,UPDATE_GRAPH_SELECTED_NODES,SET_NOTIFICATION_TITLE_GRAPH,SET_OFF_LOADING_GRAPH//DEACTIVATE_COPY_TO,\n}from\"../types\";import{AUTOSUBMIT_API_SOURCE,DEBUG,NOAPI}from\"../vars\";//import { timeStampToDate } from \"../utils\";\nvar GraphState=function GraphState(props){var initialState={data:null,visNodes:null,visNetwork:null,loadingGraph:false,loadingPkl:false,loadingJobMonitor:false,enabledGraphSearch:true,loadingSearchJob:false,startAutoUpdatePkl:false,shouldUpdateGraph:false,pklchanges:null,notificationTitleGraph:null,//currentSelected: [],\ncurrentCommandGraph:null,currentTextCommandGraph:null,current_grouped:\"none\",current_layout:\"standard\",selection:null,foundNodes:null,graphSelectedNodes:null,pkldata:null};var _useReducer=useReducer(GraphReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var localserver=AUTOSUBMIT_API_SOURCE;//const localserver = \"http://84.88.185.94:8081\";\nvar debug=DEBUG;var experimentContext=useContext(ExperimentContext);var updateExperimentTimeStamp=experimentContext.updateExperimentTimeStamp,experimentRunning=experimentContext.experimentRunning;// Get Experiment Graph\nvar getExperimentGraph=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(expid){var grouped,layout,result,res,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:grouped=_args.length>1&&_args[1]!==undefined?_args[1]:\"none\";layout=_args.length>2&&_args[2]!==undefined?_args[2]:\"standard\";cleanOnlyGraphData();setLoadingGraph();result=null;if(!NOAPI){_context.next=11;break;}//res = {data: null};\nresult=require(\"../data/graph_\"+String(expid)+\"_standard_\"+String(grouped)+\".json\");//console.log(res.data);\n_context.next=9;return sleep(1000);case 9:_context.next=15;break;case 11:_context.next=13;return axios.get(\"\".concat(localserver,\"/graph/\").concat(expid,\"/\").concat(layout,\"/\").concat(grouped)).catch(function(error){alert(error.message);setOffLoadingGraph();});case 13:res=_context.sent;result=res?res.data:null;case 15:if(result){debug&&console.log(result);//const resdata = res.data;\ndispatch({type:GET_GRAPH,payload:{resdata:result,grouped:grouped,layout:layout}});}case 16:case\"end\":return _context.stop();}}},_callee);}));return function getExperimentGraph(_x){return _ref.apply(this,arguments);};}();// Get Experiment Pkl Data for Graph changes update\nvar getExperimentPkl=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(expid,timeStamp){var retrievedPkl,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(experimentRunning===false)){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:setLoadingPkl();setLoadingJobMonitor();//timeStamp = 1000;\ndebug&&console.log(\"Exp: \"+expid+\"\\t\"+timeStamp+\"\\t\"+experimentRunning);retrievedPkl=null;if(!NOAPI){_context2.next=10;break;}retrievedPkl=require(\"../data/pklinfo_\"+String(expid)+\".json\");_context2.next=15;break;case 10:_context2.next=12;return axios.get(\"\".concat(localserver,\"/pklinfo/\").concat(expid,\"/\").concat(timeStamp));case 12:res=_context2.sent;debug&&console.log(res.data);retrievedPkl=res.data;case 15:dispatch({type:GET_PKL_DATA,payload:retrievedPkl});updateExperimentTimeStamp(retrievedPkl.pkl_timestamp);case 17:case\"end\":return _context2.stop();}}},_callee2);}));return function getExperimentPkl(_x2,_x3){return _ref2.apply(this,arguments);};}();var navigateAfterLoadGraph=function navigateAfterLoadGraph(){var running=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;debug&&console.log(\"Nav. After Loading\");dispatch({type:NAVIGATE_AFTER_LOADING_GRAPH,payload:running});};var navigateTo=function navigateTo(Id){debug&&console.log(\"Nav. To\");dispatch({type:NAVIGATE_GRAPH_TO,payload:Id});};var navToLatest=function navToLatest(statusCode,latest){debug&&console.log(\"Nav. To Latest\");dispatch({type:NAVIGATE_TO_LATEST,payload:{status:statusCode,latest:latest}});};var navigateToGroup=function navigateToGroup(IdList){debug&&console.log(\"Nav. To Group.\");dispatch({type:NAVIGATE_TO_GROUP_GRAPH,payload:IdList});};var searchJobInGraph=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(string){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoadingSearchJob();dispatch({type:SET_FOUND_NODES,payload:string.toUpperCase()});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function searchJobInGraph(_x4){return _ref3.apply(this,arguments);};}();var setCurrentCommandGraph=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(command){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:// for change status\n//let arrayNames = [];\n//console.log(command);\ndispatch({type:SET_CURRENT_COMMAND,payload:command});case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function setCurrentCommandGraph(_x5){return _ref4.apply(this,arguments);};}();var setCurrentTextCommandGraph=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(command){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch({type:SET_CURRENT_TEXT_COMMAND,payload:command});case 1:case\"end\":return _context5.stop();}}},_callee5);}));return function setCurrentTextCommandGraph(_x6){return _ref5.apply(this,arguments);};}();// Clean state data\nvar cleanOnlyGraphData=function cleanOnlyGraphData(){return dispatch({type:CLEAN_ONLY_GRAH_DATA});};var cleanGraphData=function cleanGraphData(){return dispatch({type:CLEAN_GRAPH_DATA});};var cleanPklData=function cleanPklData(){return dispatch({type:CLEAN_PKL_DATA});};var cleanNavData=function cleanNavData(){return dispatch({type:CLEAN_NAV_DATA});};// Loading\nvar setLoadingGraph=function setLoadingGraph(){return dispatch({type:SET_LOADING_GRAPH});};var setOffLoadingGraph=function setOffLoadingGraph(){return dispatch({type:SET_OFF_LOADING_GRAPH});};var setLoadingSearchJob=function setLoadingSearchJob(){return dispatch({type:SET_LOADING_SEARCH_JOB});};var setLoadingPkl=function setLoadingPkl(){return dispatch({type:SET_LOADING_PKL});};var setLoadingJobMonitor=function setLoadingJobMonitor(){return dispatch({type:SET_LOADING_JOB_MONITOR});};// Set Data\nvar setAutoUpdatePkl=function setAutoUpdatePkl(value){return dispatch({type:SET_AUTOUPDATE_PKL,payload:value});};var setVisData=function setVisData(value){return dispatch({type:SET_VIS_DATA,payload:value});};var setVisNetwork=function setVisNetwork(value){return dispatch({type:SET_VIS_NETWORK,payload:value});};var setUpdateGraph=function setUpdateGraph(value){return dispatch({type:SHOULD_UPDATE_GRAPH,payload:value});};var updateSelection=function updateSelection(currentSelection){return dispatch({type:UPDATE_SELECTION,payload:currentSelection});};var updateGraphSelectedNodes=function updateGraphSelectedNodes(){return dispatch({type:UPDATE_GRAPH_SELECTED_NODES});};var setNotificationTitleGraph=function setNotificationTitleGraph(notification){return dispatch({type:SET_NOTIFICATION_TITLE_GRAPH,payload:notification});};//const deactivateCanCopyTo = () => dispatch({ type: DEACTIVATE_COPY_TO });\nreturn/*#__PURE__*/React.createElement(GraphContext.Provider,{value:{visNetwork:state.visNetwork,data:state.data,loadingGraph:state.loadingGraph,loadingPkl:state.loadingPkl,loadingJobMonitor:state.loadingJobMonitor,pklchanges:state.pklchanges,enabledGraphSearch:state.enabledGraphSearch,current_grouped:state.current_grouped,current_layout:state.current_layout,selection:state.selection,foundNodes:state.foundNodes,pkldata:state.pkldata,startAutoUpdatePkl:state.startAutoUpdatePkl,shouldUpdateGraph:state.shouldUpdateGraph,graphSelectedNodes:state.graphSelectedNodes,currentCommandGraph:state.currentCommandGraph,currentTextCommandGraph:state.currentTextCommandGraph,notificationTitleGraph:state.notificationTitleGraph,getExperimentGraph:getExperimentGraph,getExperimentPkl:getExperimentPkl,cleanOnlyGraphData:cleanOnlyGraphData,cleanGraphData:cleanGraphData,setLoadingGraph:setLoadingGraph,setUpdateGraph:setUpdateGraph,setVisData:setVisData,setVisNetwork:setVisNetwork,updateSelection:updateSelection,cleanPklData:cleanPklData,searchJobInGraph:searchJobInGraph,cleanNavData:cleanNavData,setAutoUpdatePkl:setAutoUpdatePkl,navigateToGroup:navigateToGroup,navigateTo:navigateTo,navToLatest:navToLatest,navigateAfterLoadGraph:navigateAfterLoadGraph,updateGraphSelectedNodes:updateGraphSelectedNodes,setCurrentCommandGraph:setCurrentCommandGraph,setCurrentTextCommandGraph:setCurrentTextCommandGraph,setNotificationTitleGraph:setNotificationTitleGraph}},props.children);};export default GraphState;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/graph/GraphState.js"],"names":["React","useReducer","useContext","axios","GraphContext","GraphReducer","ExperimentContext","sleep","GET_GRAPH","GET_PKL_DATA","CLEAN_GRAPH_DATA","CLEAN_ONLY_GRAH_DATA","SET_LOADING_GRAPH","SET_AUTOUPDATE_PKL","SET_VIS_DATA","SET_VIS_NETWORK","UPDATE_SELECTION","SET_FOUND_NODES","SET_LOADING_SEARCH_JOB","SET_LOADING_PKL","SHOULD_UPDATE_GRAPH","SET_LOADING_JOB_MONITOR","SET_CURRENT_COMMAND","SET_CURRENT_TEXT_COMMAND","NAVIGATE_GRAPH_TO","CLEAN_PKL_DATA","CLEAN_NAV_DATA","NAVIGATE_AFTER_LOADING_GRAPH","NAVIGATE_TO_GROUP_GRAPH","NAVIGATE_TO_LATEST","UPDATE_GRAPH_SELECTED_NODES","SET_NOTIFICATION_TITLE_GRAPH","SET_OFF_LOADING_GRAPH","AUTOSUBMIT_API_SOURCE","DEBUG","NOAPI","GraphState","props","initialState","data","visNodes","visNetwork","loadingGraph","loadingPkl","loadingJobMonitor","enabledGraphSearch","loadingSearchJob","startAutoUpdatePkl","shouldUpdateGraph","pklchanges","notificationTitleGraph","currentCommandGraph","currentTextCommandGraph","current_grouped","current_layout","selection","foundNodes","graphSelectedNodes","pkldata","state","dispatch","localserver","debug","experimentContext","updateExperimentTimeStamp","experimentRunning","getExperimentGraph","expid","grouped","layout","cleanOnlyGraphData","setLoadingGraph","result","require","String","get","catch","error","alert","message","setOffLoadingGraph","res","console","log","type","payload","resdata","getExperimentPkl","timeStamp","setLoadingPkl","setLoadingJobMonitor","retrievedPkl","pkl_timestamp","navigateAfterLoadGraph","running","navigateTo","Id","navToLatest","statusCode","latest","status","navigateToGroup","IdList","searchJobInGraph","string","setLoadingSearchJob","toUpperCase","setCurrentCommandGraph","command","setCurrentTextCommandGraph","cleanGraphData","cleanPklData","cleanNavData","setAutoUpdatePkl","value","setVisData","setVisNetwork","setUpdateGraph","updateSelection","currentSelection","updateGraphSelectedNodes","setNotificationTitleGraph","notification","children"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport GraphContext from \"./graphContext\";\nimport GraphReducer from \"./graphReducer\";\nimport ExperimentContext from \"../experiment/experimentContext\";\nimport { sleep } from \"../utils\";\n\nimport {\n  GET_GRAPH,\n  GET_PKL_DATA,\n  CLEAN_GRAPH_DATA,\n  CLEAN_ONLY_GRAH_DATA,\n  SET_LOADING_GRAPH,\n  SET_AUTOUPDATE_PKL,\n  SET_VIS_DATA,\n  SET_VIS_NETWORK,\n  UPDATE_SELECTION,\n  SET_FOUND_NODES,\n  SET_LOADING_SEARCH_JOB,\n  SET_LOADING_PKL,\n  SHOULD_UPDATE_GRAPH,\n  SET_LOADING_JOB_MONITOR,\n  SET_CURRENT_COMMAND,\n  SET_CURRENT_TEXT_COMMAND,\n  NAVIGATE_GRAPH_TO,\n  CLEAN_PKL_DATA,\n  CLEAN_NAV_DATA,\n  NAVIGATE_AFTER_LOADING_GRAPH,\n  NAVIGATE_TO_GROUP_GRAPH,\n  NAVIGATE_TO_LATEST,\n  UPDATE_GRAPH_SELECTED_NODES,\n  SET_NOTIFICATION_TITLE_GRAPH,\n  SET_OFF_LOADING_GRAPH,\n  //DEACTIVATE_COPY_TO,\n} from \"../types\";\n\nimport { AUTOSUBMIT_API_SOURCE, DEBUG, NOAPI } from \"../vars\";\n\n//import { timeStampToDate } from \"../utils\";\n\nconst GraphState = (props) => {\n  const initialState = {\n    data: null,\n    visNodes: null,\n    visNetwork: null,\n    loadingGraph: false,\n    loadingPkl: false,\n    loadingJobMonitor: false,\n    enabledGraphSearch: true,\n    loadingSearchJob: false,\n    startAutoUpdatePkl: false,\n    shouldUpdateGraph: false,\n    pklchanges: null,\n    notificationTitleGraph: null,\n    //currentSelected: [],\n    currentCommandGraph: null,\n    currentTextCommandGraph: null,\n    current_grouped: \"none\",\n    current_layout: \"standard\",\n    selection: null,\n    foundNodes: null,\n    graphSelectedNodes: null,\n    pkldata: null,\n  };\n\n  const [state, dispatch] = useReducer(GraphReducer, initialState);\n  const localserver = AUTOSUBMIT_API_SOURCE;\n  //const localserver = \"http://84.88.185.94:8081\";\n  const debug = DEBUG;\n\n  const experimentContext = useContext(ExperimentContext);\n  const { updateExperimentTimeStamp, experimentRunning } = experimentContext;\n\n  // Get Experiment Graph\n  const getExperimentGraph = async (\n    expid,\n    grouped = \"none\",\n    layout = \"standard\"\n  ) => {\n    cleanOnlyGraphData();\n    setLoadingGraph();\n    let result = null;\n    if (NOAPI) {\n      //res = {data: null};\n      result = require(\"../data/graph_\"+String(expid)+\"_standard_\"+String(grouped)+\".json\");\n      //console.log(res.data);\n      await sleep(1000);\n    } else {\n      const res = await axios\n      .get(`${localserver}/graph/${expid}/${layout}/${grouped}`)\n      .catch((error) => {\n        alert(error.message);\n        setOffLoadingGraph();\n      });\n      result = res ? res.data : null;\n    }\n    \n    if (result) {\n      debug && console.log(result);\n      //const resdata = res.data;\n      dispatch({\n        type: GET_GRAPH,\n        payload: { resdata: result, grouped, layout },\n      });\n    }\n  };\n\n  // Get Experiment Pkl Data for Graph changes update\n  const getExperimentPkl = async (expid, timeStamp) => {\n    // if (state.isGrouped === false){\n    if (experimentRunning === false) return;\n    setLoadingPkl();\n    setLoadingJobMonitor();\n    //timeStamp = 1000;\n    debug &&\n      console.log(\n        \"Exp: \" + expid + \"\\t\" + timeStamp + \"\\t\" + experimentRunning\n      );\n    let retrievedPkl = null;\n    if (NOAPI){\n      retrievedPkl = require(\"../data/pklinfo_\"+String(expid)+\".json\");\n    } else {\n      const res = await axios.get(`${localserver}/pklinfo/${expid}/${timeStamp}`);\n      debug && console.log(res.data);\n      retrievedPkl = res.data;\n    } \n    \n    dispatch({\n      type: GET_PKL_DATA,\n      payload: retrievedPkl,\n    });\n\n    updateExperimentTimeStamp(retrievedPkl.pkl_timestamp);\n  };\n\n  const navigateAfterLoadGraph = (running = false) => {\n    debug && console.log(\"Nav. After Loading\");\n    dispatch({ type: NAVIGATE_AFTER_LOADING_GRAPH, payload: running });\n  };\n\n  const navigateTo = (Id) => {\n    debug && console.log(\"Nav. To\");\n    dispatch({ type: NAVIGATE_GRAPH_TO, payload: Id });\n  };\n\n  const navToLatest = (statusCode, latest) => {\n    debug && console.log(\"Nav. To Latest\");\n    dispatch({\n      type: NAVIGATE_TO_LATEST,\n      payload: { status: statusCode, latest: latest },\n    });\n  };\n\n  const navigateToGroup = (IdList) => {\n    debug && console.log(\"Nav. To Group.\");\n    dispatch({\n      type: NAVIGATE_TO_GROUP_GRAPH,\n      payload: IdList,\n    });\n  };\n\n  const searchJobInGraph = async (string) => {\n    setLoadingSearchJob();\n    dispatch({\n      type: SET_FOUND_NODES,\n      payload: string.toUpperCase(),\n    });\n  };\n\n  const setCurrentCommandGraph = async (command) => {\n    // for change status\n    //let arrayNames = [];\n\n    //console.log(command);\n    dispatch({\n      type: SET_CURRENT_COMMAND,\n      payload: command,\n    });\n  };\n\n  const setCurrentTextCommandGraph = async (command) => {\n    dispatch({\n      type: SET_CURRENT_TEXT_COMMAND,\n      payload: command,\n    });\n  }\n\n  // Clean state data\n  const cleanOnlyGraphData = () => dispatch({ type: CLEAN_ONLY_GRAH_DATA });\n  const cleanGraphData = () => dispatch({ type: CLEAN_GRAPH_DATA });\n  const cleanPklData = () => dispatch({ type: CLEAN_PKL_DATA });\n  const cleanNavData = () => dispatch({ type: CLEAN_NAV_DATA });\n  // Loading\n  const setLoadingGraph = () => dispatch({ type: SET_LOADING_GRAPH });\n  const setOffLoadingGraph = () => dispatch({ type: SET_OFF_LOADING_GRAPH });\n  const setLoadingSearchJob = () => dispatch({ type: SET_LOADING_SEARCH_JOB });\n  const setLoadingPkl = () => dispatch({ type: SET_LOADING_PKL });\n  const setLoadingJobMonitor = () =>\n    dispatch({ type: SET_LOADING_JOB_MONITOR });\n\n  // Set Data\n  const setAutoUpdatePkl = (value) =>\n    dispatch({ type: SET_AUTOUPDATE_PKL, payload: value });\n  const setVisData = (value) =>\n    dispatch({ type: SET_VIS_DATA, payload: value });\n  const setVisNetwork = (value) =>\n    dispatch({ type: SET_VIS_NETWORK, payload: value });\n  const setUpdateGraph = (value) =>\n    dispatch({ type: SHOULD_UPDATE_GRAPH, payload: value });\n  const updateSelection = (currentSelection) =>\n    dispatch({ type: UPDATE_SELECTION, payload: currentSelection });\n  const updateGraphSelectedNodes = () =>\n    dispatch({ type: UPDATE_GRAPH_SELECTED_NODES });\n  const setNotificationTitleGraph = (notification) =>\n    dispatch({ type: SET_NOTIFICATION_TITLE_GRAPH, payload: notification });\n  //const deactivateCanCopyTo = () => dispatch({ type: DEACTIVATE_COPY_TO });\n\n  return (\n    <GraphContext.Provider\n      value={{\n        visNetwork: state.visNetwork,\n        data: state.data,\n        loadingGraph: state.loadingGraph,\n        loadingPkl: state.loadingPkl,\n        loadingJobMonitor: state.loadingJobMonitor,\n        pklchanges: state.pklchanges,\n        enabledGraphSearch: state.enabledGraphSearch,\n        current_grouped: state.current_grouped,\n        current_layout: state.current_layout,\n        selection: state.selection,\n        foundNodes: state.foundNodes,\n        pkldata: state.pkldata,\n        startAutoUpdatePkl: state.startAutoUpdatePkl,\n        shouldUpdateGraph: state.shouldUpdateGraph,\n        graphSelectedNodes: state.graphSelectedNodes,\n        currentCommandGraph: state.currentCommandGraph,\n        currentTextCommandGraph: state.currentTextCommandGraph,\n        notificationTitleGraph: state.notificationTitleGraph,\n        getExperimentGraph,\n        getExperimentPkl,\n        cleanOnlyGraphData,\n        cleanGraphData,\n        setLoadingGraph,\n        setUpdateGraph,\n        setVisData,\n        setVisNetwork,\n        updateSelection,\n        cleanPklData,\n        searchJobInGraph,\n        cleanNavData,\n        setAutoUpdatePkl,\n        navigateToGroup,\n        navigateTo,\n        navToLatest,\n        navigateAfterLoadGraph,\n        updateGraphSelectedNodes,\n        setCurrentCommandGraph,\n        setCurrentTextCommandGraph,\n        setNotificationTitleGraph,\n      }}\n    >\n      {props.children}\n    </GraphContext.Provider>\n  );\n};\n\nexport default GraphState;\n"]},"metadata":{},"sourceType":"module"}