{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Selection.js\";\nimport React, { useContext, Fragment } from 'react';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Selection = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const selection = experimentContext.selection,\n        data = experimentContext.data; // const { model, branch, hpc } = experiment;\n  //var currentSelection = \"Node: \"\n\n  var currentNode = \"\";\n  var selectedNode = null;\n\n  if (selection) {\n    //console.log(\"Current selection \" + selection)\n    selection.map(node => // currentSelection += node + \", \"\n    currentNode = node); //console.log(\"Current node \" + currentNode)\n\n    selectedNode = data.nodes.find(node => node.id === currentNode); //console.log(\"Data: \" + selectedNode.id + \" \" + selectedNode.platform_name)\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-footer text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, selectedNode && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Job:\"), \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, selectedNode.id)), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Section:\"), \" \", selectedNode.section), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Status:\"), \" \", selectedNode.status), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Platform:\"), \" \", selectedNode.platform_name)), React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Date:\"), \" \", selectedNode.date), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Priority:\"), \" \", selectedNode.priority), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Processors:\"), \" \", selectedNode.processors)))), !selectedNode && data && React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Select a Node to see more information.\")));\n};\n\nexport default Selection;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Selection.js"],"names":["React","useContext","Fragment","ExperimentContext","Selection","experimentContext","selection","data","currentNode","selectedNode","map","node","nodes","find","id","section","status","platform_name","date","priority","processors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,iBAAiB,GAAGJ,UAAU,CAACE,iBAAD,CAApC;AADoB,QAEZG,SAFY,GAEQD,iBAFR,CAEZC,SAFY;AAAA,QAEDC,IAFC,GAEQF,iBAFR,CAEDE,IAFC,EAGpB;AACA;;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAIH,SAAJ,EAAe;AACX;AACAA,IAAAA,SAAS,CAACI,GAAV,CAAcC,IAAI,IACd;AACAH,IAAAA,WAAW,GAAGG,IAFlB,EAFW,CAMX;;AACAF,IAAAA,YAAY,GAAGF,IAAI,CAACK,KAAL,CAAWC,IAAX,CAAgBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYN,WAApC,CAAf,CAPW,CAQX;AACH;;AACD,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,YAAY,IACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,OACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,YAAY,CAACK,EAAjB,CADxB,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,OAAgCL,YAAY,CAACM,OAA7C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,OAA+BN,YAAY,CAACO,MAA5C,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,OAAiCP,YAAY,CAACQ,aAA9C,CAHJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAL,OAA6BR,YAAY,CAACS,IAA1C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,OAAiCT,YAAY,CAACU,QAA9C,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,OAAmCV,YAAY,CAACW,UAAhD,CAHJ,CANJ,CAJJ,CAHH,EAqBI,CAACX,YAAD,IAAiBF,IAAjB,IACG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAtBP,CADL,CADJ;AAkCH,CAnDD;;AAqDA,eAAeH,SAAf","sourcesContent":["import React, { useContext, Fragment } from 'react'\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Selection = () => {\n    const experimentContext = useContext(ExperimentContext);\n    const { selection, data } = experimentContext;\n    // const { model, branch, hpc } = experiment;\n    //var currentSelection = \"Node: \"\n    var currentNode = \"\"\n    var selectedNode = null\n    if (selection) {\n        //console.log(\"Current selection \" + selection)\n        selection.map(node => (\n            // currentSelection += node + \", \"\n            currentNode = node\n        ));\n        //console.log(\"Current node \" + currentNode)\n        selectedNode = data.nodes.find(node => node.id === currentNode)    \n        //console.log(\"Data: \" + selectedNode.id + \" \" + selectedNode.platform_name)\n    }    \n    return (\n        <Fragment>\n             <div className='card-footer text-muted'>\n\n                {selectedNode &&\n                <Fragment>\n                    <div className='row'>\n                        <small>Job:</small> <b>{selectedNode.id}</b>\n                    </div>\n                    <div className='row'>                        \n                        <div className=\"col-6\">\n                            <div><strong>Section:</strong> {selectedNode.section}</div>\n                            <div><strong>Status:</strong> {selectedNode.status}</div>\n                            <div><strong>Platform:</strong> {selectedNode.platform_name}</div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div><strong>Date:</strong> {selectedNode.date}</div>\n                            <div><strong>Priority:</strong> {selectedNode.priority}</div>\n                            <div><strong>Processors:</strong> {selectedNode.processors}</div>\n                        </div>\n                    </div>\n                </Fragment>                    \n                }  \n                {!selectedNode && data &&\n                    <div className='text-center'>\n                        Select a Node to see more information.\n                    </div>\n                }              \n            </div>\n        </Fragment>\n        \n        \n\n    )\n}\n\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}