{"ast":null,"code":"/*!\n * jquery.fancytree.edit.js\n *\n * Make node titles editable.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2020, Martin Wendt (https://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.37.0\n * @date 2020-09-11T18:58:08Z\n */\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"jquery\", \"./jquery.fancytree\"], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node/CommonJS\n    require(\"./jquery.fancytree\");\n\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  \"use strict\";\n  /*******************************************************************************\n   * Private functions and variables\n   */\n\n  var isMac = /Mac/.test(navigator.platform),\n      escapeHtml = $.ui.fancytree.escapeHtml,\n      unescapeHtml = $.ui.fancytree.unescapeHtml;\n  /**\n   * [ext-edit] Start inline editing of current node title.\n   *\n   * @alias FancytreeNode#editStart\n   * @requires Fancytree\n   */\n\n  $.ui.fancytree._FancytreeNodeClass.prototype.editStart = function () {\n    var $input,\n        node = this,\n        tree = this.tree,\n        local = tree.ext.edit,\n        instOpts = tree.options.edit,\n        $title = $(\".fancytree-title\", node.span),\n        eventData = {\n      node: node,\n      tree: tree,\n      options: tree.options,\n      isNew: $(node[tree.statusClassPropName]).hasClass(\"fancytree-edit-new\"),\n      orgTitle: node.title,\n      input: null,\n      dirty: false\n    }; // beforeEdit may want to modify the title before editing\n\n    if (instOpts.beforeEdit.call(node, {\n      type: \"beforeEdit\"\n    }, eventData) === false) {\n      return false;\n    }\n\n    $.ui.fancytree.assert(!local.currentNode, \"recursive edit\");\n    local.currentNode = this;\n    local.eventData = eventData; // Disable standard Fancytree mouse- and key handling\n\n    tree.widget._unbind();\n\n    local.lastDraggableAttrValue = node.span.draggable;\n\n    if (local.lastDraggableAttrValue) {\n      node.span.draggable = false;\n    } // #116: ext-dnd prevents the blur event, so we have to catch outer clicks\n\n\n    $(document).on(\"mousedown.fancytree-edit\", function (event) {\n      if (!$(event.target).hasClass(\"fancytree-edit-input\")) {\n        node.editEnd(true, event);\n      }\n    }); // Replace node with <input>\n\n    $input = $(\"<input />\", {\n      class: \"fancytree-edit-input\",\n      type: \"text\",\n      value: tree.options.escapeTitles ? eventData.orgTitle : unescapeHtml(eventData.orgTitle)\n    });\n    local.eventData.input = $input;\n\n    if (instOpts.adjustWidthOfs != null) {\n      $input.width($title.width() + instOpts.adjustWidthOfs);\n    }\n\n    if (instOpts.inputCss != null) {\n      $input.css(instOpts.inputCss);\n    }\n\n    $title.html($input); // Focus <input> and bind keyboard handler\n\n    $input.focus().change(function (event) {\n      $input.addClass(\"fancytree-edit-dirty\");\n    }).on(\"keydown\", function (event) {\n      switch (event.which) {\n        case $.ui.keyCode.ESCAPE:\n          node.editEnd(false, event);\n          break;\n\n        case $.ui.keyCode.ENTER:\n          node.editEnd(true, event);\n          return false;\n        // so we don't start editmode on Mac\n      }\n\n      event.stopPropagation();\n    }).blur(function (event) {\n      return node.editEnd(true, event);\n    });\n    instOpts.edit.call(node, {\n      type: \"edit\"\n    }, eventData);\n  };\n  /**\n   * [ext-edit] Stop inline editing.\n   * @param {Boolean} [applyChanges=false] false: cancel edit, true: save (if modified)\n   * @alias FancytreeNode#editEnd\n   * @requires jquery.fancytree.edit.js\n   */\n\n\n  $.ui.fancytree._FancytreeNodeClass.prototype.editEnd = function (applyChanges, _event) {\n    var newVal,\n        node = this,\n        tree = this.tree,\n        local = tree.ext.edit,\n        eventData = local.eventData,\n        instOpts = tree.options.edit,\n        $title = $(\".fancytree-title\", node.span),\n        $input = $title.find(\"input.fancytree-edit-input\");\n\n    if (instOpts.trim) {\n      $input.val($.trim($input.val()));\n    }\n\n    newVal = $input.val();\n    eventData.dirty = newVal !== node.title;\n    eventData.originalEvent = _event; // Find out, if saving is required\n\n    if (applyChanges === false) {\n      // If true/false was passed, honor this (except in rename mode, if unchanged)\n      eventData.save = false;\n    } else if (eventData.isNew) {\n      // In create mode, we save everything, except for empty text\n      eventData.save = newVal !== \"\";\n    } else {\n      // In rename mode, we save everyting, except for empty or unchanged text\n      eventData.save = eventData.dirty && newVal !== \"\";\n    } // Allow to break (keep editor open), modify input, or re-define data.save\n\n\n    if (instOpts.beforeClose.call(node, {\n      type: \"beforeClose\"\n    }, eventData) === false) {\n      return false;\n    }\n\n    if (eventData.save && instOpts.save.call(node, {\n      type: \"save\"\n    }, eventData) === false) {\n      return false;\n    }\n\n    $input.removeClass(\"fancytree-edit-dirty\").off(); // Unbind outer-click handler\n\n    $(document).off(\".fancytree-edit\");\n\n    if (eventData.save) {\n      // # 171: escape user input (not required if global escaping is on)\n      node.setTitle(tree.options.escapeTitles ? newVal : escapeHtml(newVal));\n      node.setFocus();\n    } else {\n      if (eventData.isNew) {\n        node.remove();\n        node = eventData.node = null;\n        local.relatedNode.setFocus();\n      } else {\n        node.renderTitle();\n        node.setFocus();\n      }\n    }\n\n    local.eventData = null;\n    local.currentNode = null;\n    local.relatedNode = null; // Re-enable mouse and keyboard handling\n\n    tree.widget._bind();\n\n    if (node && local.lastDraggableAttrValue) {\n      node.span.draggable = true;\n    } // Set keyboard focus, even if setFocus() claims 'nothing to do'\n\n\n    tree.$container.get(0).focus({\n      preventScroll: true\n    });\n    eventData.input = null;\n    instOpts.close.call(node, {\n      type: \"close\"\n    }, eventData);\n    return true;\n  };\n  /**\n   * [ext-edit] Create a new child or sibling node and start edit mode.\n   *\n   * @param {String} [mode='child'] 'before', 'after', or 'child'\n   * @param {Object} [init] NodeData (or simple title string)\n   * @alias FancytreeNode#editCreateNode\n   * @requires jquery.fancytree.edit.js\n   * @since 2.4\n   */\n\n\n  $.ui.fancytree._FancytreeNodeClass.prototype.editCreateNode = function (mode, init) {\n    var newNode,\n        tree = this.tree,\n        self = this;\n    mode = mode || \"child\";\n\n    if (init == null) {\n      init = {\n        title: \"\"\n      };\n    } else if (typeof init === \"string\") {\n      init = {\n        title: init\n      };\n    } else {\n      $.ui.fancytree.assert($.isPlainObject(init));\n    } // Make sure node is expanded (and loaded) in 'child' mode\n\n\n    if (mode === \"child\" && !this.isExpanded() && this.hasChildren() !== false) {\n      this.setExpanded().done(function () {\n        self.editCreateNode(mode, init);\n      });\n      return;\n    }\n\n    newNode = this.addNode(init, mode); // #644: Don't filter new nodes.\n\n    newNode.match = true;\n    $(newNode[tree.statusClassPropName]).removeClass(\"fancytree-hide\").addClass(\"fancytree-match\");\n    newNode.makeVisible().done(function () {\n      $(newNode[tree.statusClassPropName]).addClass(\"fancytree-edit-new\");\n      self.tree.ext.edit.relatedNode = self;\n      newNode.editStart();\n    });\n  };\n  /**\n   * [ext-edit] Check if any node in this tree  in edit mode.\n   *\n   * @returns {FancytreeNode | null}\n   * @alias Fancytree#isEditing\n   * @requires jquery.fancytree.edit.js\n   */\n\n\n  $.ui.fancytree._FancytreeClass.prototype.isEditing = function () {\n    return this.ext.edit ? this.ext.edit.currentNode : null;\n  };\n  /**\n   * [ext-edit] Check if this node is in edit mode.\n   * @returns {Boolean} true if node is currently beeing edited\n   * @alias FancytreeNode#isEditing\n   * @requires jquery.fancytree.edit.js\n   */\n\n\n  $.ui.fancytree._FancytreeNodeClass.prototype.isEditing = function () {\n    return this.tree.ext.edit ? this.tree.ext.edit.currentNode === this : false;\n  };\n  /*******************************************************************************\n   * Extension code\n   */\n\n\n  $.ui.fancytree.registerExtension({\n    name: \"edit\",\n    version: \"2.37.0\",\n    // Default options for this extension.\n    options: {\n      adjustWidthOfs: 4,\n      // null: don't adjust input size to content\n      allowEmpty: false,\n      // Prevent empty input\n      inputCss: {\n        minWidth: \"3em\"\n      },\n      // triggerCancel: [\"esc\", \"tab\", \"click\"],\n      triggerStart: [\"f2\", \"mac+enter\", \"shift+click\"],\n      trim: true,\n      // Trim whitespace before save\n      // Events:\n      beforeClose: $.noop,\n      // Return false to prevent cancel/save (data.input is available)\n      beforeEdit: $.noop,\n      // Return false to prevent edit mode\n      close: $.noop,\n      // Editor was removed\n      edit: $.noop,\n      // Editor was opened (available as data.input)\n      //\t\tkeypress: $.noop,    // Not yet implemented\n      save: $.noop // Save data.input.val() or return false to keep editor open\n\n    },\n    // Local attributes\n    currentNode: null,\n    treeInit: function treeInit(ctx) {\n      var tree = ctx.tree;\n\n      this._superApply(arguments);\n\n      this.$container.addClass(\"fancytree-ext-edit\").on(\"fancytreebeforeupdateviewport\", function (event, data) {\n        var editNode = tree.isEditing(); // When scrolling, the TR may be re-used by another node, so the\n        // active cell marker an\n\n        if (editNode) {\n          editNode.info(\"Cancel edit due to scroll event.\");\n          editNode.editEnd(false, event);\n        }\n      });\n    },\n    nodeClick: function nodeClick(ctx) {\n      var eventStr = $.ui.fancytree.eventToString(ctx.originalEvent),\n          triggerStart = ctx.options.edit.triggerStart;\n\n      if (eventStr === \"shift+click\" && $.inArray(\"shift+click\", triggerStart) >= 0) {\n        if (ctx.originalEvent.shiftKey) {\n          ctx.node.editStart();\n          return false;\n        }\n      }\n\n      if (eventStr === \"click\" && $.inArray(\"clickActive\", triggerStart) >= 0) {\n        // Only when click was inside title text (not aynwhere else in the row)\n        if (ctx.node.isActive() && !ctx.node.isEditing() && $(ctx.originalEvent.target).hasClass(\"fancytree-title\")) {\n          ctx.node.editStart();\n          return false;\n        }\n      }\n\n      return this._superApply(arguments);\n    },\n    nodeDblclick: function nodeDblclick(ctx) {\n      if ($.inArray(\"dblclick\", ctx.options.edit.triggerStart) >= 0) {\n        ctx.node.editStart();\n        return false;\n      }\n\n      return this._superApply(arguments);\n    },\n    nodeKeydown: function nodeKeydown(ctx) {\n      switch (ctx.originalEvent.which) {\n        case 113:\n          // [F2]\n          if ($.inArray(\"f2\", ctx.options.edit.triggerStart) >= 0) {\n            ctx.node.editStart();\n            return false;\n          }\n\n          break;\n\n        case $.ui.keyCode.ENTER:\n          if ($.inArray(\"mac+enter\", ctx.options.edit.triggerStart) >= 0 && isMac) {\n            ctx.node.editStart();\n            return false;\n          }\n\n          break;\n      }\n\n      return this._superApply(arguments);\n    }\n  }); // Value returned by `require('jquery.fancytree..')`\n\n  return $.ui.fancytree;\n}); // End of closure","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/jquery.fancytree/dist/modules/jquery.fancytree.edit.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","isMac","test","navigator","platform","escapeHtml","ui","fancytree","unescapeHtml","_FancytreeNodeClass","prototype","editStart","$input","node","tree","local","ext","edit","instOpts","options","$title","span","eventData","isNew","statusClassPropName","hasClass","orgTitle","title","input","dirty","beforeEdit","call","type","assert","currentNode","widget","_unbind","lastDraggableAttrValue","draggable","document","on","event","target","editEnd","class","value","escapeTitles","adjustWidthOfs","width","inputCss","css","html","focus","change","addClass","which","keyCode","ESCAPE","ENTER","stopPropagation","blur","applyChanges","_event","newVal","find","trim","val","originalEvent","save","beforeClose","removeClass","off","setTitle","setFocus","remove","relatedNode","renderTitle","_bind","$container","get","preventScroll","close","editCreateNode","mode","init","newNode","self","isPlainObject","isExpanded","hasChildren","setExpanded","done","addNode","match","makeVisible","_FancytreeClass","isEditing","registerExtension","name","version","allowEmpty","minWidth","triggerStart","noop","treeInit","ctx","_superApply","arguments","data","editNode","info","nodeClick","eventStr","eventToString","inArray","shiftKey","isActive","nodeDblclick","nodeKeydown"],"mappings":"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","sourcesContent":["/*!\n * jquery.fancytree.edit.js\n *\n * Make node titles editable.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2020, Martin Wendt (https://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.37.0\n * @date 2020-09-11T18:58:08Z\n */\n\n(function(factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([\"jquery\", \"./jquery.fancytree\"], factory);\n\t} else if (typeof module === \"object\" && module.exports) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n})(function($) {\n\t\"use strict\";\n\n\t/*******************************************************************************\n\t * Private functions and variables\n\t */\n\n\tvar isMac = /Mac/.test(navigator.platform),\n\t\tescapeHtml = $.ui.fancytree.escapeHtml,\n\t\tunescapeHtml = $.ui.fancytree.unescapeHtml;\n\n\t/**\n\t * [ext-edit] Start inline editing of current node title.\n\t *\n\t * @alias FancytreeNode#editStart\n\t * @requires Fancytree\n\t */\n\t$.ui.fancytree._FancytreeNodeClass.prototype.editStart = function() {\n\t\tvar $input,\n\t\t\tnode = this,\n\t\t\ttree = this.tree,\n\t\t\tlocal = tree.ext.edit,\n\t\t\tinstOpts = tree.options.edit,\n\t\t\t$title = $(\".fancytree-title\", node.span),\n\t\t\teventData = {\n\t\t\t\tnode: node,\n\t\t\t\ttree: tree,\n\t\t\t\toptions: tree.options,\n\t\t\t\tisNew: $(node[tree.statusClassPropName]).hasClass(\n\t\t\t\t\t\"fancytree-edit-new\"\n\t\t\t\t),\n\t\t\t\torgTitle: node.title,\n\t\t\t\tinput: null,\n\t\t\t\tdirty: false,\n\t\t\t};\n\n\t\t// beforeEdit may want to modify the title before editing\n\t\tif (\n\t\t\tinstOpts.beforeEdit.call(\n\t\t\t\tnode,\n\t\t\t\t{ type: \"beforeEdit\" },\n\t\t\t\teventData\n\t\t\t) === false\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\t$.ui.fancytree.assert(!local.currentNode, \"recursive edit\");\n\t\tlocal.currentNode = this;\n\t\tlocal.eventData = eventData;\n\n\t\t// Disable standard Fancytree mouse- and key handling\n\t\ttree.widget._unbind();\n\n\t\tlocal.lastDraggableAttrValue = node.span.draggable;\n\t\tif (local.lastDraggableAttrValue) {\n\t\t\tnode.span.draggable = false;\n\t\t}\n\n\t\t// #116: ext-dnd prevents the blur event, so we have to catch outer clicks\n\t\t$(document).on(\"mousedown.fancytree-edit\", function(event) {\n\t\t\tif (!$(event.target).hasClass(\"fancytree-edit-input\")) {\n\t\t\t\tnode.editEnd(true, event);\n\t\t\t}\n\t\t});\n\n\t\t// Replace node with <input>\n\t\t$input = $(\"<input />\", {\n\t\t\tclass: \"fancytree-edit-input\",\n\t\t\ttype: \"text\",\n\t\t\tvalue: tree.options.escapeTitles\n\t\t\t\t? eventData.orgTitle\n\t\t\t\t: unescapeHtml(eventData.orgTitle),\n\t\t});\n\t\tlocal.eventData.input = $input;\n\t\tif (instOpts.adjustWidthOfs != null) {\n\t\t\t$input.width($title.width() + instOpts.adjustWidthOfs);\n\t\t}\n\t\tif (instOpts.inputCss != null) {\n\t\t\t$input.css(instOpts.inputCss);\n\t\t}\n\n\t\t$title.html($input);\n\n\t\t// Focus <input> and bind keyboard handler\n\t\t$input\n\t\t\t.focus()\n\t\t\t.change(function(event) {\n\t\t\t\t$input.addClass(\"fancytree-edit-dirty\");\n\t\t\t})\n\t\t\t.on(\"keydown\", function(event) {\n\t\t\t\tswitch (event.which) {\n\t\t\t\t\tcase $.ui.keyCode.ESCAPE:\n\t\t\t\t\t\tnode.editEnd(false, event);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase $.ui.keyCode.ENTER:\n\t\t\t\t\t\tnode.editEnd(true, event);\n\t\t\t\t\t\treturn false; // so we don't start editmode on Mac\n\t\t\t\t}\n\t\t\t\tevent.stopPropagation();\n\t\t\t})\n\t\t\t.blur(function(event) {\n\t\t\t\treturn node.editEnd(true, event);\n\t\t\t});\n\n\t\tinstOpts.edit.call(node, { type: \"edit\" }, eventData);\n\t};\n\n\t/**\n\t * [ext-edit] Stop inline editing.\n\t * @param {Boolean} [applyChanges=false] false: cancel edit, true: save (if modified)\n\t * @alias FancytreeNode#editEnd\n\t * @requires jquery.fancytree.edit.js\n\t */\n\t$.ui.fancytree._FancytreeNodeClass.prototype.editEnd = function(\n\t\tapplyChanges,\n\t\t_event\n\t) {\n\t\tvar newVal,\n\t\t\tnode = this,\n\t\t\ttree = this.tree,\n\t\t\tlocal = tree.ext.edit,\n\t\t\teventData = local.eventData,\n\t\t\tinstOpts = tree.options.edit,\n\t\t\t$title = $(\".fancytree-title\", node.span),\n\t\t\t$input = $title.find(\"input.fancytree-edit-input\");\n\n\t\tif (instOpts.trim) {\n\t\t\t$input.val($.trim($input.val()));\n\t\t}\n\t\tnewVal = $input.val();\n\n\t\teventData.dirty = newVal !== node.title;\n\t\teventData.originalEvent = _event;\n\n\t\t// Find out, if saving is required\n\t\tif (applyChanges === false) {\n\t\t\t// If true/false was passed, honor this (except in rename mode, if unchanged)\n\t\t\teventData.save = false;\n\t\t} else if (eventData.isNew) {\n\t\t\t// In create mode, we save everything, except for empty text\n\t\t\teventData.save = newVal !== \"\";\n\t\t} else {\n\t\t\t// In rename mode, we save everyting, except for empty or unchanged text\n\t\t\teventData.save = eventData.dirty && newVal !== \"\";\n\t\t}\n\t\t// Allow to break (keep editor open), modify input, or re-define data.save\n\t\tif (\n\t\t\tinstOpts.beforeClose.call(\n\t\t\t\tnode,\n\t\t\t\t{ type: \"beforeClose\" },\n\t\t\t\teventData\n\t\t\t) === false\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\teventData.save &&\n\t\t\tinstOpts.save.call(node, { type: \"save\" }, eventData) === false\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\t$input.removeClass(\"fancytree-edit-dirty\").off();\n\t\t// Unbind outer-click handler\n\t\t$(document).off(\".fancytree-edit\");\n\n\t\tif (eventData.save) {\n\t\t\t// # 171: escape user input (not required if global escaping is on)\n\t\t\tnode.setTitle(\n\t\t\t\ttree.options.escapeTitles ? newVal : escapeHtml(newVal)\n\t\t\t);\n\t\t\tnode.setFocus();\n\t\t} else {\n\t\t\tif (eventData.isNew) {\n\t\t\t\tnode.remove();\n\t\t\t\tnode = eventData.node = null;\n\t\t\t\tlocal.relatedNode.setFocus();\n\t\t\t} else {\n\t\t\t\tnode.renderTitle();\n\t\t\t\tnode.setFocus();\n\t\t\t}\n\t\t}\n\t\tlocal.eventData = null;\n\t\tlocal.currentNode = null;\n\t\tlocal.relatedNode = null;\n\t\t// Re-enable mouse and keyboard handling\n\t\ttree.widget._bind();\n\n\t\tif (node && local.lastDraggableAttrValue) {\n\t\t\tnode.span.draggable = true;\n\t\t}\n\n\t\t// Set keyboard focus, even if setFocus() claims 'nothing to do'\n\t\ttree.$container.get(0).focus({ preventScroll: true });\n\t\teventData.input = null;\n\t\tinstOpts.close.call(node, { type: \"close\" }, eventData);\n\t\treturn true;\n\t};\n\n\t/**\n\t * [ext-edit] Create a new child or sibling node and start edit mode.\n\t *\n\t * @param {String} [mode='child'] 'before', 'after', or 'child'\n\t * @param {Object} [init] NodeData (or simple title string)\n\t * @alias FancytreeNode#editCreateNode\n\t * @requires jquery.fancytree.edit.js\n\t * @since 2.4\n\t */\n\t$.ui.fancytree._FancytreeNodeClass.prototype.editCreateNode = function(\n\t\tmode,\n\t\tinit\n\t) {\n\t\tvar newNode,\n\t\t\ttree = this.tree,\n\t\t\tself = this;\n\n\t\tmode = mode || \"child\";\n\t\tif (init == null) {\n\t\t\tinit = { title: \"\" };\n\t\t} else if (typeof init === \"string\") {\n\t\t\tinit = { title: init };\n\t\t} else {\n\t\t\t$.ui.fancytree.assert($.isPlainObject(init));\n\t\t}\n\t\t// Make sure node is expanded (and loaded) in 'child' mode\n\t\tif (\n\t\t\tmode === \"child\" &&\n\t\t\t!this.isExpanded() &&\n\t\t\tthis.hasChildren() !== false\n\t\t) {\n\t\t\tthis.setExpanded().done(function() {\n\t\t\t\tself.editCreateNode(mode, init);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tnewNode = this.addNode(init, mode);\n\n\t\t// #644: Don't filter new nodes.\n\t\tnewNode.match = true;\n\t\t$(newNode[tree.statusClassPropName])\n\t\t\t.removeClass(\"fancytree-hide\")\n\t\t\t.addClass(\"fancytree-match\");\n\n\t\tnewNode.makeVisible(/*{noAnimation: true}*/).done(function() {\n\t\t\t$(newNode[tree.statusClassPropName]).addClass(\"fancytree-edit-new\");\n\t\t\tself.tree.ext.edit.relatedNode = self;\n\t\t\tnewNode.editStart();\n\t\t});\n\t};\n\n\t/**\n\t * [ext-edit] Check if any node in this tree  in edit mode.\n\t *\n\t * @returns {FancytreeNode | null}\n\t * @alias Fancytree#isEditing\n\t * @requires jquery.fancytree.edit.js\n\t */\n\t$.ui.fancytree._FancytreeClass.prototype.isEditing = function() {\n\t\treturn this.ext.edit ? this.ext.edit.currentNode : null;\n\t};\n\n\t/**\n\t * [ext-edit] Check if this node is in edit mode.\n\t * @returns {Boolean} true if node is currently beeing edited\n\t * @alias FancytreeNode#isEditing\n\t * @requires jquery.fancytree.edit.js\n\t */\n\t$.ui.fancytree._FancytreeNodeClass.prototype.isEditing = function() {\n\t\treturn this.tree.ext.edit\n\t\t\t? this.tree.ext.edit.currentNode === this\n\t\t\t: false;\n\t};\n\n\t/*******************************************************************************\n\t * Extension code\n\t */\n\t$.ui.fancytree.registerExtension({\n\t\tname: \"edit\",\n\t\tversion: \"2.37.0\",\n\t\t// Default options for this extension.\n\t\toptions: {\n\t\t\tadjustWidthOfs: 4, // null: don't adjust input size to content\n\t\t\tallowEmpty: false, // Prevent empty input\n\t\t\tinputCss: { minWidth: \"3em\" },\n\t\t\t// triggerCancel: [\"esc\", \"tab\", \"click\"],\n\t\t\ttriggerStart: [\"f2\", \"mac+enter\", \"shift+click\"],\n\t\t\ttrim: true, // Trim whitespace before save\n\t\t\t// Events:\n\t\t\tbeforeClose: $.noop, // Return false to prevent cancel/save (data.input is available)\n\t\t\tbeforeEdit: $.noop, // Return false to prevent edit mode\n\t\t\tclose: $.noop, // Editor was removed\n\t\t\tedit: $.noop, // Editor was opened (available as data.input)\n\t\t\t//\t\tkeypress: $.noop,    // Not yet implemented\n\t\t\tsave: $.noop, // Save data.input.val() or return false to keep editor open\n\t\t},\n\t\t// Local attributes\n\t\tcurrentNode: null,\n\n\t\ttreeInit: function(ctx) {\n\t\t\tvar tree = ctx.tree;\n\n\t\t\tthis._superApply(arguments);\n\n\t\t\tthis.$container\n\t\t\t\t.addClass(\"fancytree-ext-edit\")\n\t\t\t\t.on(\"fancytreebeforeupdateviewport\", function(event, data) {\n\t\t\t\t\tvar editNode = tree.isEditing();\n\t\t\t\t\t// When scrolling, the TR may be re-used by another node, so the\n\t\t\t\t\t// active cell marker an\n\t\t\t\t\tif (editNode) {\n\t\t\t\t\t\teditNode.info(\"Cancel edit due to scroll event.\");\n\t\t\t\t\t\teditNode.editEnd(false, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\tnodeClick: function(ctx) {\n\t\t\tvar eventStr = $.ui.fancytree.eventToString(ctx.originalEvent),\n\t\t\t\ttriggerStart = ctx.options.edit.triggerStart;\n\n\t\t\tif (\n\t\t\t\teventStr === \"shift+click\" &&\n\t\t\t\t$.inArray(\"shift+click\", triggerStart) >= 0\n\t\t\t) {\n\t\t\t\tif (ctx.originalEvent.shiftKey) {\n\t\t\t\t\tctx.node.editStart();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\teventStr === \"click\" &&\n\t\t\t\t$.inArray(\"clickActive\", triggerStart) >= 0\n\t\t\t) {\n\t\t\t\t// Only when click was inside title text (not aynwhere else in the row)\n\t\t\t\tif (\n\t\t\t\t\tctx.node.isActive() &&\n\t\t\t\t\t!ctx.node.isEditing() &&\n\t\t\t\t\t$(ctx.originalEvent.target).hasClass(\"fancytree-title\")\n\t\t\t\t) {\n\t\t\t\t\tctx.node.editStart();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._superApply(arguments);\n\t\t},\n\t\tnodeDblclick: function(ctx) {\n\t\t\tif ($.inArray(\"dblclick\", ctx.options.edit.triggerStart) >= 0) {\n\t\t\t\tctx.node.editStart();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this._superApply(arguments);\n\t\t},\n\t\tnodeKeydown: function(ctx) {\n\t\t\tswitch (ctx.originalEvent.which) {\n\t\t\t\tcase 113: // [F2]\n\t\t\t\t\tif ($.inArray(\"f2\", ctx.options.edit.triggerStart) >= 0) {\n\t\t\t\t\t\tctx.node.editStart();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase $.ui.keyCode.ENTER:\n\t\t\t\t\tif (\n\t\t\t\t\t\t$.inArray(\"mac+enter\", ctx.options.edit.triggerStart) >=\n\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\tisMac\n\t\t\t\t\t) {\n\t\t\t\t\t\tctx.node.editStart();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn this._superApply(arguments);\n\t\t},\n\t});\n\t// Value returned by `require('jquery.fancytree..')`\n\treturn $.ui.fancytree;\n}); // End of closure\n"]},"metadata":{},"sourceType":"script"}