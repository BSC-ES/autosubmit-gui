{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js\";\nimport React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport class Experiment extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.getExperiment(this.props.match.params.expid);\n  }\n\n  render() {\n    const _this$props$experimen = this.props.experiment,\n          expid = _this$props$experimen.expid,\n          contents = _this$props$experimen.contents,\n          contents_conf = _this$props$experimen.contents_conf,\n          contents_pkl = _this$props$experimen.contents_pkl,\n          contents_plot = _this$props$experimen.contents_plot,\n          contents_status = _this$props$experimen.contents_status,\n          contents_tmp = _this$props$experimen.contents_tmp,\n          error_message = _this$props$experimen.error_message,\n          owner = _this$props$experimen.owner,\n          owner_id = _this$props$experimen.owner_id,\n          path = _this$props$experimen.path,\n          time_last_access = _this$props$experimen.time_last_access,\n          time_last_mod = _this$props$experimen.time_last_mod,\n          description = _this$props$experimen.description,\n          version = _this$props$experimen.version,\n          size = _this$props$experimen.size;\n    const loading = this.props.loading;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Back To Search\"), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Owner: \", owner_id, \" \", owner), React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Last Access: \", time_last_access), React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Last Modified: \", time_last_mod)), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, expid), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Description: \", description), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Version: \", version)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, error_message !== \"None\" && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Error Message:  \", error_message, \" \"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, path && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Path: \"), \" \", path)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, time_last_access && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Last Access: \"), \" \", time_last_access)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, time_last_mod && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Last Modified: \"), \" \", time_last_mod)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, size && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Size: \"), \" \", size)), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, contents && React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, contents && contents.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"- \", path, \"/\", content))))))), React.createElement(\"div\", {\n      className: \"card grid-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: experimentStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"CONF contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, contents_conf && contents_conf.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"- \", content))))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"PKL contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, contents_pkl && contents_pkl.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"- \", content))))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"PLOT contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, contents_plot && contents_plot.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"- \", content))))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"TMP contents\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, contents_tmp && contents_tmp.map(content => React.createElement(\"li\", {\n      key: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"- \", content)))))));\n  }\n\n}\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\nconst experimentStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(4, 1fr)',\n  gridGap: '1rem'\n};\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js"],"names":["React","Fragment","Component","Spinner","PropTypes","Link","Experiment","componentDidMount","console","log","props","getExperiment","match","params","expid","render","experiment","contents","contents_conf","contents_pkl","contents_plot","contents_status","contents_tmp","error_message","owner","owner_id","path","time_last_access","time_last_mod","description","version","size","loading","map","content","experimentStyle","propTypes","bool","object","isRequired","func","display","gridTemplateColumns","gridGap"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport class Experiment extends Component {  \n\n  componentDidMount() {\n    console.log(this.props)\n    this.props.getExperiment(this.props.match.params.expid);\n  }\n  \n\n  static propTypes = {\n    loading: PropTypes.bool,\n    experiment: PropTypes.object.isRequired,\n    getExperiment: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      expid,\n      contents,\n      contents_conf,\n      contents_pkl,\n      contents_plot,\n      contents_status,\n      contents_tmp,\n      error_message,\n      owner,\n      owner_id,\n      path,\n      time_last_access,\n      time_last_mod,\n      description,\n      version,\n      size\n    } = this.props.experiment;\n\n    const { loading } = this.props;\n\n    if (loading) return <Spinner />;\n\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n          Back To Search\n        </Link>\n        {/* Message:{' '} */}\n        {/* {error_message.length() === 4 ? (\n          <i className='fas fa-check text-success' />\n        ) : (\n          <i className='fas fa-times-circle text-danger' />\n        )} */}\n        <div className='card text-center'>\n          <div className='badge badge-primary'>Owner: {owner_id} {owner}</div>\n          <div className='badge badge-success'>Last Access: {time_last_access}</div>\n          <div className='badge badge-light'>Last Modified: {time_last_mod}</div>\n        </div>\n        <div className='card grid-2'>\n          <div className='all-center'>\n            {/* <img\n              src={avatar_url}\n              className='round-img'\n              alt=''\n              style={{ width: '150px' }}\n            /> */}\n            <h1>{expid}</h1>\n            <p>Description: {description}</p>\n            <small>Version: {version}</small>\n          </div>\n          <div>\n            {/* {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className='btn btn-dark my-1'>\n              Visit Github Profile\n            </a> */}\n            <ul>              \n              <li>\n                {error_message !== \"None\" && (\n                  <Fragment>\n                    <strong>Error Message:  {error_message} </strong>\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {path && (\n                  <Fragment>\n                    <strong>Path: </strong> {path}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {time_last_access && (\n                  <Fragment>\n                    <strong>Last Access: </strong> {time_last_access}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {time_last_mod && (\n                  <Fragment>\n                    <strong>Last Modified: </strong> {time_last_mod}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {size && (\n                  <Fragment>\n                    <strong>Size: </strong> {size}\n                  </Fragment>\n                )}\n              </li>              \n              <li>\n                {contents && (<strong>Contents</strong>)}\n                <ul>\n                {contents && (                  \n                    contents.map((content) => (\n                      <li key={content}>\n                        - {path}/{content}    \n                      </li>\n                    ))                \n                )}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className='card grid-1'>\n          \n        </div>\n        <div style={experimentStyle}>\n          <div className=\"card\"><strong>CONF contents</strong>\n          <ul>\n                {contents_conf && (                  \n                    contents_conf.map((content) => (\n                      <li key={content}>\n                        <small>- {content}</small>\n                      </li>\n                    ))                \n                )}\n          </ul>\n          </div>\n          <div className=\"card\"><strong>PKL contents</strong>\n          <ul>\n                {contents_pkl && (                  \n                    contents_pkl.map((content) => (\n                      <li key={content}>\n                        <small>- {content}</small>\n                      </li>\n                    ))                \n                )}\n          </ul>\n          </div>\n          <div className=\"card\"><strong>PLOT contents</strong>\n          <ul>\n                {contents_plot && (                  \n                    contents_plot.map((content) => (\n                      <li key={content}>\n                        <small>- {content}</small>\n                      </li>\n                    ))                \n                )}\n          </ul>\n          </div>\n          <div className=\"card\"><strong>TMP contents</strong>\n          <ul>\n                {contents_tmp && (                  \n                    contents_tmp.map((content) => (\n                      <li key={content}>\n                        <small>- {content}</small>    \n                      </li>\n                    ))                \n                )}\n          </ul>\n          </div>\n        </div>\n        \n      </Fragment>\n    );\n  }\n}\n\nconst experimentStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(4, 1fr)',\n  gridGap: '1rem'\n};\n\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}