{"ast":null,"code":"import React,{useContext}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import TreeContext from\"../context/tree/treeContext\";// import { exportHistoryToCSV } from \"../context/utils\";\nvar ExperimentRuns=function ExperimentRuns(){var experimentContext=useContext(ExperimentContext);var treeContext=useContext(TreeContext);var experiment=experimentContext.experiment,experimentRuns=experimentContext.experimentRuns,getExperimentRuns=experimentContext.getExperimentRuns;var getExperimentRunJobData=treeContext.getExperimentRunJobData,fancyTree=treeContext.fancyTree,startAutoUpdateTreePkl=treeContext.startAutoUpdateTreePkl,loadingPreviousRun=treeContext.loadingPreviousRun,currentRunIdOnTree=treeContext.currentRunIdOnTree;var db_historic_version=experiment.db_historic_version,expid=experiment.expid;var onGetExperimentRuns=function onGetExperimentRuns(e){e.preventDefault();getExperimentRuns(expid);};var onGetExperimentRunDetail=function onGetExperimentRunDetail(run_id,created,finished,completed,total){return function(e){if(!fancyTree){alert(\"The TreeView must be loaded before attempting to show previous runs.\");return;}if(startAutoUpdateTreePkl===true){alert(\"Please stop the Job Monitor on the Tree View before querying for a previous run.\");return;}// console.log(\"Querying \" + run_id);\ne.preventDefault();var meta={\"created\":created,\"finished\":finished,\"completed\":completed,\"total\":total};getExperimentRunJobData(expid,run_id,meta);};};var dataTarget=\"runs-\"+expid;if(experiment&&db_historic_version&&db_historic_version>=12){return/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-info my-0 py-0\",type:\"button\",onClick:onGetExperimentRuns,\"data-toggle\":\"modal\",\"data-target\":\"#\"+dataTarget},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-history\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade text-dark\",id:dataTarget,tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":dataTarget+\"Title\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-historic\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:dataTarget+\"Title\"},\"Runs of \",/*#__PURE__*/React.createElement(\"strong\",null,expid),currentRunIdOnTree&&!loadingPreviousRun&&/*#__PURE__*/React.createElement(\"small\",null,\"\\xA0\\xA0 Data from run \",currentRunIdOnTree.runId,\" is displayed in the Tree View.\"),loadingPreviousRun&&/*#__PURE__*/React.createElement(\"small\",null,\"\\xA0\\xA0 The data from the previous is being retrieved and processed...\")),\"\\xA0\",/*#__PURE__*/React.createElement(\"button\",{className:\"close\",type:\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},experimentRuns&&experimentRuns.runs&&/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"table\",{className:\"table mb-0\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"RunId\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Created\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Finish\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"ChunkUnit\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"ChunkSize\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Submitted\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Queuing\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Running\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Failed\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Suspended\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Completed\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Total\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"}))),/*#__PURE__*/React.createElement(\"tbody\",null,experimentRuns.runs.map(function(item){return/*#__PURE__*/React.createElement(\"tr\",{key:item.run_id},/*#__PURE__*/React.createElement(\"td\",null,item.run_id),/*#__PURE__*/React.createElement(\"td\",null,item.created),/*#__PURE__*/React.createElement(\"td\",null,item.finish),/*#__PURE__*/React.createElement(\"td\",null,item.chunk_unit),/*#__PURE__*/React.createElement(\"td\",null,item.chunk_size),/*#__PURE__*/React.createElement(\"td\",null,item.submitted),/*#__PURE__*/React.createElement(\"td\",null,item.queuing),/*#__PURE__*/React.createElement(\"td\",null,item.running),/*#__PURE__*/React.createElement(\"td\",null,item.failed),/*#__PURE__*/React.createElement(\"td\",null,item.suspended),/*#__PURE__*/React.createElement(\"td\",null,item.completed),/*#__PURE__*/React.createElement(\"td\",null,item.total),/*#__PURE__*/React.createElement(\"td\",{className:\"py-1\"},/*#__PURE__*/React.createElement(\"button\",{className:currentRunIdOnTree&&currentRunIdOnTree.runId===item.run_id?'btn-sm btn-success':'btn-sm btn-primary',type:\"button\",onClick:onGetExperimentRunDetail(item.run_id,item.created,item.finished,item.completed,item.total)},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-eye\"}))));})))),experimentRuns&&experimentRuns.runs.length===0&&/*#__PURE__*/React.createElement(\"p\",null,\"There are not runs recorded for this experiment. Are you running the latest version of Autosubmit that implements the historic database?\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"))))));}else{return null;}};export default ExperimentRuns;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/ExperimentRuns.js"],"names":["React","useContext","ExperimentContext","TreeContext","ExperimentRuns","experimentContext","treeContext","experiment","experimentRuns","getExperimentRuns","getExperimentRunJobData","fancyTree","startAutoUpdateTreePkl","loadingPreviousRun","currentRunIdOnTree","db_historic_version","expid","onGetExperimentRuns","e","preventDefault","onGetExperimentRunDetail","run_id","created","finished","completed","total","alert","meta","dataTarget","runId","runs","map","item","finish","chunk_unit","chunk_size","submitted","queuing","running","failed","suspended","length"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport TreeContext from \"../context/tree/treeContext\";\n// import { exportHistoryToCSV } from \"../context/utils\";\n\nconst  ExperimentRuns = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const treeContext = useContext(TreeContext);\n  const { experiment, experimentRuns, getExperimentRuns } = experimentContext;\n  const { getExperimentRunJobData, fancyTree, startAutoUpdateTreePkl, loadingPreviousRun, currentRunIdOnTree } = treeContext;\n  const { db_historic_version, expid } = experiment;\n\n  const onGetExperimentRuns = (e) => {\n    e.preventDefault();\n    getExperimentRuns(expid);\n  };\n\n  const onGetExperimentRunDetail = (run_id, created, finished, completed, total) => (e) => {\n    if(!fancyTree) {\n      alert(\"The TreeView must be loaded before attempting to show previous runs.\")\n      return;\n    }\n    if(startAutoUpdateTreePkl === true){\n      alert(\"Please stop the Job Monitor on the Tree View before querying for a previous run.\");\n      return;\n    }\n    // console.log(\"Querying \" + run_id);\n    e.preventDefault();\n    const meta = {\"created\": created, \"finished\": finished, \"completed\": completed, \"total\": total};\n    getExperimentRunJobData(expid, run_id, meta);\n  }\n\n  const dataTarget = \"runs-\" + expid;\n\n\n  if (\n    experiment &&\n    db_historic_version &&\n    db_historic_version >= 12\n  ) {\n    return (\n      <small>\n        <button\n          className='btn-sm btn-info my-0 py-0'\n          type='button'\n          onClick={onGetExperimentRuns}\n          data-toggle='modal'\n          data-target={\"#\" + dataTarget}\n        >\n          <i className='fas fa-history'></i>\n        </button>\n        <div\n          className='modal fade text-dark'\n          id={dataTarget}\n          tabIndex='-1'\n          role='dialog'\n          aria-labelledby={dataTarget + \"Title\"}\n          aria-hidden='true'\n        >\n          <div className='modal-dialog modal-dialog-historic' role='document'>\n            <div className='modal-content'>\n              <div className='modal-header'>\n                <h5 className='modal-title' id={dataTarget + \"Title\"}>\n                  Runs of <strong>{expid}</strong> \n                  {currentRunIdOnTree && !loadingPreviousRun &&                 \n                <small>\n                  &nbsp;&nbsp; Data from run {currentRunIdOnTree.runId} is displayed in the Tree View.\n                </small>\n                }\n                {loadingPreviousRun && (\n                  <small>\n                    &nbsp;&nbsp; The data from the previous is being retrieved and processed...\n                  </small>\n                )}\n                </h5>\n\n                \n                &nbsp;\n                {/* {experimentRuns && experimentRuns.runs && experimentRuns.runs.length > 0 &&                \n                <button type=\"button\" className=\"btn-sm btn-primary\" onClick={onExport(selectedJob)}><i className=\"fas fa-file-export\"></i></button>\n                }                 */}               \n                <button\n                  className='close'\n                  type='button'\n                  data-dismiss='modal'\n                  aria-label='Close'\n                >\n                  <span aria-hidden='true'>&times;</span>\n                </button>\n              </div>              \n              <div className='modal-body'>\n                {experimentRuns && experimentRuns.runs && (\n                  <small>\n                  <table className='table mb-0'>\n                    \n                    <thead>\n                      <tr>\n                        <th scope='col'>RunId</th>\n                        <th scope='col'>Created</th>\n                        {/* <th scope='col'>Created</th> */}\n                        <th scope='col'>Finish</th>\n                        <th scope='col'>ChunkUnit</th>\n                        <th scope='col'>ChunkSize</th>\n                        <th scope='col'>Submitted</th>\n                        <th scope='col'>Queuing</th>\n                        <th scope='col'>Running</th>\n                        <th scope='col'>Failed</th>\n                        <th scope='col'>Suspended</th>\n                        <th scope='col'>Completed</th>\n                        <th scope='col'>Total</th>\n                        <th scope='col'></th>\n                      </tr>\n                    </thead>\n                    \n                    <tbody>\n                      {experimentRuns.runs.map((item) => (\n                        <tr key={item.run_id}>\n                          <td>{item.run_id}</td>\n                          <td>{item.created}</td>\n                          {/* <td>{item.created}</td> */}\n                          <td>{item.finish}</td>\n                          <td>{item.chunk_unit}</td>\n                          <td>{item.chunk_size}</td>\n                          <td>{item.submitted}</td>\n                          {/* <td>\n                            {item.run_time}{\" \"}\n                            {item.run_time === \"0:00:00\" && (\n                              <span\n                                className='badge badge-warning'\n                                data-toggle='tooltip'\n                                data-placement='bottom'\n                                title='This running time value usually means that there has been some error either on the completion of the job or in the historical database storage process.'\n                              >\n                                !\n                              </span>\n                            )}\n                          </td> */}\n                          <td>{item.queuing}</td>\n                          <td>{item.running}</td>\n                          <td>{item.failed}</td>\n                          <td>{item.suspended}</td>\n                          <td>{item.completed}</td>\n                          <td>{item.total}</td>\n                          <td className=\"py-1\">                          \n                          <button className={currentRunIdOnTree && currentRunIdOnTree.runId === item.run_id ? 'btn-sm btn-success' : 'btn-sm btn-primary'} type='button' onClick={onGetExperimentRunDetail(item.run_id, item.created, item.finished, item.completed, item.total)}>\n                          <i className=\"fas fa-eye\"></i>\n                          </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                  </small>\n                )}\n                {experimentRuns && experimentRuns.runs.length === 0 && (\n                  <p>\n                    There are not runs recorded for this experiment. Are you running the\n                    latest version of Autosubmit that implements the historic\n                    database?\n                  </p>\n                )}                \n              </div>\n              <div className='modal-footer'>\n                <button\n                  type='button'\n                  className='btn btn-secondary'\n                  data-dismiss='modal'\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </small>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ExperimentRuns\n"]},"metadata":{},"sourceType":"module"}