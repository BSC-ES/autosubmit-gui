{"ast":null,"code":"import _classCallCheck from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";//import Spinner from \"../layout/Spinner\";\nimport Loading from\"../layout/Loading\";import\"jquery.fancytree/dist/modules/jquery.fancytree.clones\";import\"jquery.fancytree/dist/modules/jquery.fancytree.filter\";import\"jquery.fancytree/dist/modules/jquery.fancytree.childcounter\";import\"jquery.fancytree/dist/modules/jquery.fancytree.edit\";import\"jquery.fancytree/dist/modules/jquery.fancytree.multi\";// import 'jquery.fancytree/dist/skin-lion/ui.fancytree.less';  // CSS or LESS\nimport{createTree}from\"jquery.fancytree\";import{DEBUG}from\"../context/vars\";// import 'jquery.fancytree/dist/modules/jquery.fancytree.edit';\n// import 'jquery.fancytree/dist/modules/jquery.fancytree.filter';\nexport var TreeNativeRep=/*#__PURE__*/function(_Component){_inherits(TreeNativeRep,_Component);var _super=_createSuper(TreeNativeRep);function TreeNativeRep(){_classCallCheck(this,TreeNativeRep);return _super.apply(this,arguments);}_createClass(TreeNativeRep,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){// if (this.props.shouldUpdateGraph === true){\n//     return true\n//   }else\nif(nextProps.treedata!==this.props.treedata){DEBUG&&console.log(\"Rerendering Tree\");return true;}else if(nextProps.loadingTree!==this.props.loadingTree){return true;}else{return false;}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){DEBUG&&console.log(\"Unmounting Tree Rep\");this.props.cleanTreeData();// this.props.clearStats();\n}},{key:\"componenteDidMount\",value:function componenteDidMount(){DEBUG&&console.log(\"In after mount\");// createTree(\"#tree\", {\n//   extensions: [\"edit\", \"filter\"],\n//   source: this.props.treedata,\n// });\n}},{key:\"render\",value:function render(){//console.log(this.props.treedata)\nif(this.props.loadingTree)return/*#__PURE__*/React.createElement(Loading,{source:\"tree\"});if(!this.props.treedata){return/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-left\",style:experimentStyle},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Press \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-info\"},\"Show\"),\" to see the tree view representation of the experiment.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Repeating subtrees in the tree view are only shown once, use the searcher to focus only on those items.\"));}if(this.props.treedata.error===true){return/*#__PURE__*/React.createElement(\"div\",{className:\"card-body text-left\",style:experimentStyle},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Something has gone very wrong.\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead text-danger\"},this.props.treedata.error_message));}var FancyTree=/*#__PURE__*/function(_Component2){_inherits(FancyTree,_Component2);var _super2=_createSuper(FancyTree);function FancyTree(){_classCallCheck(this,FancyTree);return _super2.apply(this,arguments);}_createClass(FancyTree,[{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;var tree=new createTree(\"#tree\",{activate:function activate(event,data){//console.log(event)\n//console.log(data)\n//console.log(tree)\n//console.log(data);\nif(data){// var thenode = tree.getNodesByRef(\"a2a7_20170427_1\")\n// console.log(thenode)\n// if (thenode){\n//     for (var i = 0; i < thenode.length;i++){\n//         thenode[i].setTitle(\"a2a7_20170417_1 <span class='badge badge-warning'> Honked </span>\")\n//     }\n// }\n// console.log(tree.activeNode.getParent())\n// console.log(tree.activeNode)\n//data.node.title = \"Honk\";\n//console.log(data);\n//console.log(this);\n_this.props.updateSelectionTree(data);//console.log(this.props.canSelect);\n//if (this.props.canSelect === true) {\nif(data&&data.node&&data.node.folder===undefined){_this.props.updateCurrentSelected(data.node.refKey,_this.props.originaldata);}//}\n//this.updateSelection(data);\n}},// extensions: ['edit', 'filter'],\n// extensions: [\"clones\",\"filter\", \"childcounter\"],\nextensions:[\"filter\",\"childcounter\",\"clones\"],filter:{autoApply:true,// Re-apply last filter if lazy data is loaded\nautoExpand:true,// Expand all branches that contain matches while filtered\ncounter:true,// Show a badge with number of matching child nodes near parent icons\nfuzzy:false,// Match single characters in order, e.g. 'fb' will match 'FooBar'\nhideExpandedCounter:true,// Hide counter badge if parent is expanded\nhideExpanders:false,// Hide expanders if all child nodes are hidden by filter\nhighlight:false,// Highlight matches by wrapping inside <mark> tags\nleavesOnly:true,// Match end nodes only\nnodata:true,// Display a 'no data' status node if result is empty\nmode:\"hide\"// Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\n},// clones: {\n//     highlightClones: true,\n//     highlightActiveClones: true,\n//   },\nsource:this.props.treedata});//console.log(tree.activeNode);\nDEBUG&&console.log(tree);this.props.setFancyTree(tree);// if (this.props.total !== this.props.exptotal) {\n//   alert(\n//     \"The number of jobs in the experiment is different than the number of jobs in your current run. This might be due to a change in the config files of your experiment while Autosubmit was already running.\"\n//   );\n// }\n}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){DEBUG&&console.log(\"Unmounting Tree\");//this.props.cleanNavData();\n}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-0\"},/*#__PURE__*/React.createElement(\"div\",{id:\"tree\"}));}}]);return FancyTree;}(Component);return/*#__PURE__*/React.createElement(FancyTree,{treedata:this.props.treedata.tree,originaldata:this.props.treedata,setFancyTree:this.props.setFancyTree,updateSelectionTree:this.props.updateSelectionTree,updateCurrentSelected:this.props.updateCurrentSelected,canSelect:this.props.canSelect// total={this.props.treedata.total}\n// exptotal={this.props.totalJobs}\n});}}]);return TreeNativeRep;}(Component);// const experimentStyle = {\n//     maxHeight: 600,\n//     height: 600\n//   };\nvar experimentStyle={height:750};export default TreeNativeRep;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/TreeNativeRep.js"],"names":["React","Component","Loading","createTree","DEBUG","TreeNativeRep","nextProps","nextState","treedata","props","console","log","loadingTree","cleanTreeData","experimentStyle","error","error_message","FancyTree","tree","activate","event","data","updateSelectionTree","node","folder","undefined","updateCurrentSelected","refKey","originaldata","extensions","filter","autoApply","autoExpand","counter","fuzzy","hideExpandedCounter","hideExpanders","highlight","leavesOnly","nodata","mode","source","setFancyTree","canSelect","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import Spinner from \"../layout/Spinner\";\nimport Loading from \"../layout/Loading\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.clones\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.filter\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.childcounter\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.edit\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.multi\";\n// import 'jquery.fancytree/dist/skin-lion/ui.fancytree.less';  // CSS or LESS\nimport { createTree } from \"jquery.fancytree\";\nimport { DEBUG } from \"../context/vars\";\n\n// import 'jquery.fancytree/dist/modules/jquery.fancytree.edit';\n// import 'jquery.fancytree/dist/modules/jquery.fancytree.filter';\n\nexport class TreeNativeRep extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    // if (this.props.shouldUpdateGraph === true){\n    //     return true\n    //   }else\n    if (nextProps.treedata !== this.props.treedata) {\n      DEBUG && console.log(\"Rerendering Tree\");\n      return true;\n    } else if (nextProps.loadingTree !== this.props.loadingTree) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentWillUnmount() {\n    DEBUG && console.log(\"Unmounting Tree Rep\");\n    this.props.cleanTreeData();\n    // this.props.clearStats();\n  }\n\n  componenteDidMount() {\n    DEBUG && console.log(\"In after mount\");\n    // createTree(\"#tree\", {\n    //   extensions: [\"edit\", \"filter\"],\n    //   source: this.props.treedata,\n    // });\n  }\n\n  render() {\n    //console.log(this.props.treedata)\n    if (this.props.loadingTree) return <Loading source={\"tree\"} />;\n    if (!this.props.treedata) {\n      return (\n        <div className='card-body text-left' style={experimentStyle}>\n          <p className='lead'>\n            Press <span className='badge badge-info'>Show</span> to see the tree\n            view representation of the experiment.\n          </p>\n          <p className='lead'>\n            Repeating subtrees in the tree view are only shown once, use the\n            searcher to focus only on those items.\n          </p>\n        </div>\n      );\n    }\n\n    if (this.props.treedata.error === true) {\n      return (\n        <div className='card-body text-left' style={experimentStyle}>\n          <p className='lead'>Something has gone very wrong.</p>\n          <p className='lead text-danger'>\n            {this.props.treedata.error_message}\n          </p>\n        </div>\n      );\n    }\n\n    class FancyTree extends Component {\n      componentDidMount() {\n        let tree = new createTree(\"#tree\", {\n          activate: (event, data) => {\n            //console.log(event)\n            //console.log(data)\n            //console.log(tree)\n            //console.log(data);\n            if (data) {\n              // var thenode = tree.getNodesByRef(\"a2a7_20170427_1\")\n              // console.log(thenode)\n              // if (thenode){\n              //     for (var i = 0; i < thenode.length;i++){\n              //         thenode[i].setTitle(\"a2a7_20170417_1 <span class='badge badge-warning'> Honked </span>\")\n              //     }\n\n              // }\n              // console.log(tree.activeNode.getParent())\n              // console.log(tree.activeNode)\n              //data.node.title = \"Honk\";\n              //console.log(data);\n              //console.log(this);\n              this.props.updateSelectionTree(data);\n              //console.log(this.props.canSelect);\n              //if (this.props.canSelect === true) {\n              if (data && data.node && data.node.folder === undefined) {\n                this.props.updateCurrentSelected(\n                  data.node.refKey,\n                  this.props.originaldata\n                );\n              }\n\n              //}\n\n              //this.updateSelection(data);\n            }\n          },\n          // extensions: ['edit', 'filter'],\n          // extensions: [\"clones\",\"filter\", \"childcounter\"],\n          extensions: [\"filter\", \"childcounter\", \"clones\"],\n          filter: {\n            autoApply: true, // Re-apply last filter if lazy data is loaded\n            autoExpand: true, // Expand all branches that contain matches while filtered\n            counter: true, // Show a badge with number of matching child nodes near parent icons\n            fuzzy: false, // Match single characters in order, e.g. 'fb' will match 'FooBar'\n            hideExpandedCounter: true, // Hide counter badge if parent is expanded\n            hideExpanders: false, // Hide expanders if all child nodes are hidden by filter\n            highlight: false, // Highlight matches by wrapping inside <mark> tags\n            leavesOnly: true, // Match end nodes only\n            nodata: true, // Display a 'no data' status node if result is empty\n            mode: \"hide\", // Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\n          },\n          // clones: {\n          //     highlightClones: true,\n          //     highlightActiveClones: true,\n          //   },\n          source: this.props.treedata,\n        });\n\n        //console.log(tree.activeNode);\n\n        DEBUG && console.log(tree);\n        this.props.setFancyTree(tree);\n        // if (this.props.total !== this.props.exptotal) {\n        //   alert(\n        //     \"The number of jobs in the experiment is different than the number of jobs in your current run. This might be due to a change in the config files of your experiment while Autosubmit was already running.\"\n        //   );\n        // }\n      }\n\n      componentWillUnmount() {\n        DEBUG && console.log(\"Unmounting Tree\");\n        //this.props.cleanNavData();\n      }\n\n      render() {\n        return (\n          <div className='card-body p-0'>\n            <div id='tree'></div>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <FancyTree\n        treedata={this.props.treedata.tree}\n        originaldata={this.props.treedata}\n        setFancyTree={this.props.setFancyTree}\n        updateSelectionTree={this.props.updateSelectionTree}\n        updateCurrentSelected={this.props.updateCurrentSelected}\n        canSelect={this.props.canSelect}\n        // total={this.props.treedata.total}\n        // exptotal={this.props.totalJobs}\n      />\n    );\n  }\n}\n\n// const experimentStyle = {\n//     maxHeight: 600,\n//     height: 600\n//   };\n\nconst experimentStyle = {\n  height: 750,\n};\n\nexport default TreeNativeRep;\n"]},"metadata":{},"sourceType":"module"}