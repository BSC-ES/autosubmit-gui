{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/LighterNativeRep.js\";\nimport React, { Component } from \"react\";\nimport Loading from \"../layout/Loading\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.filter\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.childcounter\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.edit\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.multi\"; // import 'jquery.fancytree/dist/skin-lion/ui.fancytree.less';  // CSS or LESS\n\nimport { createTree } from \"jquery.fancytree\";\nimport { DEBUG } from \"../context/vars\";\nexport class LighterNativeRep extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.data !== this.props.data) {\n      DEBUG && console.log(\"Rerendering Lighter Tree\");\n      return true;\n    } else if (nextProps.loadingView !== this.props.loadingView) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentWillUnmount() {\n    DEBUG && console.log(\"Unmount Lighter Rep.\");\n    this.props.cleanLoadingLighterView();\n  }\n\n  componentDidMount() {\n    DEBUG && console.log(\"Lighter Rep Mounted.\");\n  }\n\n  render() {\n    if (this.props.loadingView) return /*#__PURE__*/React.createElement(Loading, {\n      source: \"lighter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 40\n      }\n    });\n\n    if (!this.props.data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body text-left\",\n        style: experimentStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Press \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, \"View\"), \" to see the light-version of the experiment representation.\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Use the search tool.\"));\n    }\n\n    if (this.props.data.error === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body text-left\",\n        style: experimentStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Something has gone very wrong.\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"lead text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, this.props.data.error_message));\n    }\n\n    class LightFancyTree extends Component {\n      componentDidMount() {\n        let l_tree = new createTree(\"#light_tree\", {\n          extensions: [\"filter\", \"childcounter\"],\n          filter: {\n            autoApply: true,\n            // Re-apply last filter if lazy data is loaded\n            autoExpand: true,\n            // Expand all branches that contain matches while filtered\n            counter: true,\n            // Show a badge with number of matching child nodes near parent icons\n            fuzzy: false,\n            // Match single characters in order, e.g. 'fb' will match 'FooBar'\n            hideExpandedCounter: true,\n            // Hide counter badge if parent is expanded\n            hideExpanders: false,\n            // Hide expanders if all child nodes are hidden by filter\n            highlight: false,\n            // Highlight matches by wrapping inside <mark> tags\n            leavesOnly: true,\n            // Match end nodes only\n            nodata: true,\n            // Display a 'no data' status node if result is empty\n            mode: \"hide\" // Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\n\n          },\n          source: this.props.tree_data\n        }); //console.log(tree.activeNode);\n\n        DEBUG && console.log(l_tree);\n        this.props.setLighterFancyTree(l_tree);\n      }\n\n      componentWillUnmount() {\n        DEBUG && console.log(\"Unmounting Lighter Tree\"); //this.props.cleanNavData();\n      }\n\n      render() {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-body p-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"light_tree\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }));\n      }\n\n    }\n\n    return /*#__PURE__*/React.createElement(LightFancyTree, {\n      tree_data: this.props.data.tree_view,\n      originaldata: this.props.data,\n      setLighterFancyTree: this.props.setLighterFancyTree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\nconst experimentStyle = {\n  height: 750\n};\nexport default LighterNativeRep;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/LighterNativeRep.js"],"names":["React","Component","Loading","createTree","DEBUG","LighterNativeRep","shouldComponentUpdate","nextProps","nextState","data","props","console","log","loadingView","componentWillUnmount","cleanLoadingLighterView","componentDidMount","render","experimentStyle","error","error_message","LightFancyTree","l_tree","extensions","filter","autoApply","autoExpand","counter","fuzzy","hideExpandedCounter","hideExpanders","highlight","leavesOnly","nodata","mode","source","tree_data","setLighterFancyTree","tree_view","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Loading from \"../layout/Loading\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.filter\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.childcounter\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.edit\";\nimport \"jquery.fancytree/dist/modules/jquery.fancytree.multi\";\n// import 'jquery.fancytree/dist/skin-lion/ui.fancytree.less';  // CSS or LESS\nimport { createTree } from \"jquery.fancytree\";\nimport { DEBUG } from \"../context/vars\";\n\nexport class LighterNativeRep extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.data !== this.props.data) {\n      DEBUG && console.log(\"Rerendering Lighter Tree\");\n      return true;\n    } else if (nextProps.loadingView !== this.props.loadingView) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentWillUnmount() {\n    DEBUG && console.log(\"Unmount Lighter Rep.\");\n    this.props.cleanLoadingLighterView();\n  }\n\n  componentDidMount() {\n    DEBUG && console.log(\"Lighter Rep Mounted.\");\n  }\n\n  render() {\n    if (this.props.loadingView) return <Loading source={\"lighter\"} />;\n    if (!this.props.data) {\n      return (\n        <div className='card-body text-left' style={experimentStyle}>\n          <p className='lead'>\n            Press <span className='badge badge-info'>View</span> to see the\n            light-version of the experiment representation.\n          </p>\n          <p className='lead'>Use the search tool.</p>\n        </div>\n      );\n    }\n    if (this.props.data.error === true) {\n      return (\n        <div className='card-body text-left' style={experimentStyle}>\n          <p className='lead'>Something has gone very wrong.</p>\n          <p className='lead text-danger'>{this.props.data.error_message}</p>\n        </div>\n      );\n    }\n\n    class LightFancyTree extends Component {\n      componentDidMount() {\n        let l_tree = new createTree(\"#light_tree\", {\n          extensions: [\"filter\", \"childcounter\"],\n          filter: {\n            autoApply: true, // Re-apply last filter if lazy data is loaded\n            autoExpand: true, // Expand all branches that contain matches while filtered\n            counter: true, // Show a badge with number of matching child nodes near parent icons\n            fuzzy: false, // Match single characters in order, e.g. 'fb' will match 'FooBar'\n            hideExpandedCounter: true, // Hide counter badge if parent is expanded\n            hideExpanders: false, // Hide expanders if all child nodes are hidden by filter\n            highlight: false, // Highlight matches by wrapping inside <mark> tags\n            leavesOnly: true, // Match end nodes only\n            nodata: true, // Display a 'no data' status node if result is empty\n            mode: \"hide\", // Grayout unmatched nodes (pass \"hide\" to remove unmatched node instead)\n          },\n\n          source: this.props.tree_data,\n        });\n\n        //console.log(tree.activeNode);\n\n        DEBUG && console.log(l_tree);\n        this.props.setLighterFancyTree(l_tree);\n      }\n\n      componentWillUnmount() {\n        DEBUG && console.log(\"Unmounting Lighter Tree\");\n        //this.props.cleanNavData();\n      }\n\n      render() {\n        return (\n          <div className='card-body p-0'>\n            <div id='light_tree'></div>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <LightFancyTree\n        tree_data={this.props.data.tree_view}\n        originaldata={this.props.data}\n        setLighterFancyTree={this.props.setLighterFancyTree}\n      />\n    );\n  }\n}\n\nconst experimentStyle = {\n  height: 750,\n};\n\nexport default LighterNativeRep;\n"]},"metadata":{},"sourceType":"module"}