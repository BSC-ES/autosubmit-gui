{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobSearcher.js\";\nimport React, { useContext, useState } from \"react\"; //import ExperimentContext from \"../context/experiment/experimentContext\";\n\nimport GraphContext from \"../context/graph/graphContext\";\nimport GraphNodeSelection from \"./GraphNodeSelection\";\nimport AlertTotal from \"./AlertTotal\";\n\nconst JobSearcher = () => {\n  //const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const {\n    searchJobInGraph,\n    foundNodes,\n    loadingSearchJob,\n    data,\n    navigateTo\n  } = graphContext;\n  const [jobId, setJobId] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(\"\");\n\n  const onChangeId = e => setJobId(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    searchJobInGraph(jobId);\n    setCurrentIndex(0);\n  };\n\n  const onNext = index => e => {\n    e.preventDefault();\n\n    if (foundNodes) {\n      let nextIndex = currentIndex + index; //setCurrentIndex(nextIndex);\n      //console.log(nextIndex);\n\n      if (nextIndex >= 0 && nextIndex < foundNodes.length) {\n        //setCurrentIndex(nextIndex);\n        //console.log(foundNodes[currentIndex].id);\n        navigateTo(foundNodes[nextIndex].id);\n        setCurrentIndex(nextIndex);\n      } else {\n        if (nextIndex < 0) {\n          navigateTo(foundNodes[foundNodes.length - 1].id);\n          setCurrentIndex(foundNodes.length - 1);\n        } else if (nextIndex >= foundNodes.length) {\n          navigateTo(foundNodes[0].id);\n          setCurrentIndex(0);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"section\",\n    placeholder: \"Job Name (e.g. fc0_1_CLEAN)\",\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), loadingSearchJob && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 34\n    }\n  }, \"Searching...\"), !loadingSearchJob && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search by Job Name\",\n    className: \"btn btn-dark btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, foundNodes && foundNodes.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-sm btn-info\",\n    type: \"button\",\n    onClick: onNext(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-sm btn-info\",\n    type: \"button\",\n    onClick: onNext(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, currentIndex + 1, \" of \", foundNodes.length))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GraphNodeSelection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 text-right text-muted pr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, data && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Max out: \", data.max_children, \" | Max in: \", data.max_parents, \" | Total #Jobs: \", data.total_jobs, \" \", /*#__PURE__*/React.createElement(AlertTotal, {\n    source: \"graph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 38\n    }\n  }), \" | Chunk unit: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, data.chunk_unit), \" | Chunk size\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, data.chunk_size), \" \")));\n};\n\nexport default JobSearcher;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobSearcher.js"],"names":["React","useContext","useState","GraphContext","GraphNodeSelection","AlertTotal","JobSearcher","graphContext","searchJobInGraph","foundNodes","loadingSearchJob","data","navigateTo","jobId","setJobId","currentIndex","setCurrentIndex","onChangeId","e","target","value","onSubmit","preventDefault","onNext","index","nextIndex","length","id","max_children","max_parents","total_jobs","chunk_unit","chunk_size"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n//import ExperimentContext from \"../context/experiment/experimentContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport GraphNodeSelection from \"./GraphNodeSelection\";\nimport AlertTotal from \"./AlertTotal\";\n\nconst JobSearcher = () => {\n  //const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const {\n    searchJobInGraph,\n    foundNodes,\n    loadingSearchJob,\n    data,\n    navigateTo,\n  } = graphContext;\n\n  const [jobId, setJobId] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(\"\");\n  const onChangeId = (e) => setJobId(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    searchJobInGraph(jobId);\n    setCurrentIndex(0);\n  };\n\n  const onNext = (index) => (e) => {\n    e.preventDefault();\n    if (foundNodes) {\n      let nextIndex = currentIndex + index;\n      //setCurrentIndex(nextIndex);\n      //console.log(nextIndex);\n      if (nextIndex >= 0 && nextIndex < foundNodes.length) {\n        //setCurrentIndex(nextIndex);\n        //console.log(foundNodes[currentIndex].id);\n        navigateTo(foundNodes[nextIndex].id);\n        setCurrentIndex(nextIndex);\n      } else {\n        if (nextIndex < 0) {\n          navigateTo(foundNodes[foundNodes.length - 1].id);\n          setCurrentIndex(foundNodes.length - 1);\n        } else if (nextIndex >= foundNodes.length) {\n          navigateTo(foundNodes[0].id);\n          setCurrentIndex(0);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='row'>\n      <div className='col-md-4'>\n        <form onSubmit={onSubmit} className='form'>\n          <div className='input-group input-group-sm'>\n            <input\n              className='form-control'\n              type='text'\n              name='section'\n              placeholder='Job Name (e.g. fc0_1_CLEAN)'\n              onChange={onChangeId}\n            />\n            {/* <input\n                            className=\"form-control\"\n                            type='text'\n                            name='hours'\n                            placeholder='Hours'                          \n                            onChange={onChangeHour}\n                        />                     */}\n            {loadingSearchJob && <span>Searching...</span>}\n            {!loadingSearchJob && (\n              <div className='input-group-append'>\n                <input\n                  type='submit'\n                  value='Search by Job Name'\n                  className='btn btn-dark btn-sm'\n                />\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n      <div className='col-md-2 text-center'>\n        {foundNodes && foundNodes.length > 1 && (\n          <div>\n            <button\n              className='btn-sm btn-info'\n              type='button'\n              onClick={onNext(-1)}\n            >\n              Previous\n            </button>\n            <button\n              className='btn-sm btn-info'\n              type='button'\n              onClick={onNext(1)}\n            >\n              Next\n            </button>\n            <small className='text-muted ml-2'>\n              {currentIndex + 1} of {foundNodes.length}\n            </small>\n            {/* <form onSubmit={onNext(-1)} className='form'>\n                            <input          \n                            type='submit'\n                            value='Prev'\n                            className='btn btn-info btn-sm'                            \n                            />\n                        </form>\n\n                        <form onSubmit={onNext(1)} className='form'>\n                            <input          \n                            type='submit'\n                            value='Next'\n                            className='btn btn-info btn-sm'                            \n                            />\n                        </form> */}\n          </div>\n        )}\n      </div>\n      <div className='col-md-2'>\n        <GraphNodeSelection />\n      </div>\n\n      <div className='col-md-4 text-right text-muted pr-4'>\n        {data && (\n          <small>\n            Max out: {data.max_children} | Max in: {data.max_parents} | Total\n            #Jobs: {data.total_jobs} <AlertTotal source={\"graph\"} /> | Chunk\n            unit: <strong>{data.chunk_unit}</strong> | Chunk size{\" \"}\n            <strong>{data.chunk_size}</strong>{\" \"}\n          </small>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JobSearcher;\n"]},"metadata":{},"sourceType":"module"}