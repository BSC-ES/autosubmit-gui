{"ast":null,"code":"import React,{useContext}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import GraphContext from\"../context/graph/graphContext\";import TreeContext from\"../context/tree/treeContext\";import{exportHistoryToCSV}from\"../context/utils\";var JobHistory=function JobHistory(_ref){var source=_ref.source;var experimentContext=useContext(ExperimentContext);var graphContext=useContext(GraphContext);var treeContext=useContext(TreeContext);var experiment=experimentContext.experiment,jobHistory=experimentContext.jobHistory,getJobHistory=experimentContext.getJobHistory;var selection=graphContext.selection;var selectedTreeNode=treeContext.selectedTreeNode;var db_historic_version=experiment.db_historic_version,expid=experiment.expid;var selectedJob=source===\"tree\"?selectedTreeNode?selectedTreeNode.node.refKey:null:source===\"graph\"?selection&&selection.length>0?selection[0]:null:null;var onGetJobHistory=function onGetJobHistory(e){e.preventDefault();getJobHistory(expid,selectedJob);};var onExport=function onExport(jobName){return function(e){e.preventDefault();var columnNames=[\"Counter\",\"JobId\",\"Submit\",\"Start\",\"Finish\",\"Queue\",\"Run\",\"Status\",\"Energy\",\"Wallclock\",\"NCpus\",\"Nnodes\"];exportHistoryToCSV(jobHistory.history,columnNames,jobName+\"_history.csv\");};};var dataTarget=\"history-\"+source;if(experiment&&selectedJob&&db_historic_version&&db_historic_version>=12){return/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-info my-0 py-0\",type:\"button\",onClick:onGetJobHistory,\"data-toggle\":\"modal\",\"data-target\":\"#\"+dataTarget},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-history\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade text-dark\",id:dataTarget,tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":dataTarget+\"Title\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-historic\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:dataTarget+\"Title\"},\"Historical data for \",/*#__PURE__*/React.createElement(\"strong\",null,selectedJob)),\"\\xA0\",jobHistory&&jobHistory.history&&jobHistory.history.length>0&&/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn-sm btn-primary\",onClick:onExport(selectedJob)},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-file-export\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"close\",type:\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},jobHistory&&jobHistory.history&&/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Counter\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"JobId\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Submit\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Start\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Finish\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Queue\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Run\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Status\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Energy\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Wallclock\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"NCpus\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"NNodes\"))),/*#__PURE__*/React.createElement(\"tbody\",null,jobHistory.history.map(function(item){return/*#__PURE__*/React.createElement(\"tr\",{key:item.counter},/*#__PURE__*/React.createElement(\"td\",null,item.counter),/*#__PURE__*/React.createElement(\"td\",null,item.job_id),/*#__PURE__*/React.createElement(\"td\",null,item.submit),/*#__PURE__*/React.createElement(\"td\",null,item.start),/*#__PURE__*/React.createElement(\"td\",null,item.finish),/*#__PURE__*/React.createElement(\"td\",null,item.queue_time),/*#__PURE__*/React.createElement(\"td\",null,item.run_time,\" \",item.run_time===\"0:00:00\"&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-warning\",\"data-toggle\":\"tooltip\",\"data-placement\":\"bottom\",title:\"This running time value usually means that there has been some error either on the completion of the job or in the historical database storage process.\"},\"!\")),/*#__PURE__*/React.createElement(\"td\",null,item.status),/*#__PURE__*/React.createElement(\"td\",null,item.energy),/*#__PURE__*/React.createElement(\"td\",null,item.wallclock),/*#__PURE__*/React.createElement(\"td\",null,item.ncpus),/*#__PURE__*/React.createElement(\"td\",null,item.nodes));}))),jobHistory&&jobHistory.history.length===0&&/*#__PURE__*/React.createElement(\"p\",null,\"There is no historic data for this job. Are you running the latest version of Autosubmit that implements the historic database?\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"))))));}else{return null;}};export default JobHistory;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobHistory.js"],"names":["React","useContext","ExperimentContext","GraphContext","TreeContext","exportHistoryToCSV","JobHistory","source","experimentContext","graphContext","treeContext","experiment","jobHistory","getJobHistory","selection","selectedTreeNode","db_historic_version","expid","selectedJob","node","refKey","length","onGetJobHistory","e","preventDefault","onExport","jobName","columnNames","history","dataTarget","map","item","counter","job_id","submit","start","finish","queue_time","run_time","status","energy","wallclock","ncpus","nodes"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport TreeContext from \"../context/tree/treeContext\";\nimport { exportHistoryToCSV } from \"../context/utils\";\n\nconst JobHistory = ({ source }) => {\n  const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const treeContext = useContext(TreeContext);\n  const { experiment, jobHistory, getJobHistory } = experimentContext;\n  const { selection } = graphContext;\n  const { selectedTreeNode } = treeContext;\n  const { db_historic_version, expid } = experiment;\n  const selectedJob =\n    source === \"tree\"\n      ? selectedTreeNode\n        ? selectedTreeNode.node.refKey\n        : null\n      : source === \"graph\"\n      ? selection && selection.length > 0\n        ? selection[0]\n        : null\n      : null;\n\n  const onGetJobHistory = (e) => {\n    e.preventDefault();\n    getJobHistory(expid, selectedJob);\n  };\n\n  const onExport = (jobName) => (e) => {\n    e.preventDefault();    \n    const columnNames = [\"Counter\",\"JobId\",\"Submit\",\"Start\",\"Finish\",\"Queue\",\"Run\",\"Status\",\"Energy\",\"Wallclock\",\"NCpus\",\"Nnodes\"];    \n    exportHistoryToCSV(jobHistory.history,columnNames,jobName+\"_history.csv\");        \n  }\n\n  const dataTarget = \"history-\" + source;\n\n  if (\n    experiment &&\n    selectedJob &&\n    db_historic_version &&\n    db_historic_version >= 12\n  ) {\n    return (\n      <small>\n        <button\n          className='btn-sm btn-info my-0 py-0'\n          type='button'\n          onClick={onGetJobHistory}\n          data-toggle='modal'\n          data-target={\"#\" + dataTarget}\n        >\n          <i className='fas fa-history'></i>\n        </button>\n        <div\n          className='modal fade text-dark'\n          id={dataTarget}\n          tabIndex='-1'\n          role='dialog'\n          aria-labelledby={dataTarget + \"Title\"}\n          aria-hidden='true'\n        >\n          <div className='modal-dialog modal-dialog-historic' role='document'>\n            <div className='modal-content'>\n              <div className='modal-header'>\n                <h5 className='modal-title' id={dataTarget + \"Title\"}>\n                  Historical data for <strong>{selectedJob}</strong>\n                </h5>\n                &nbsp;\n                {jobHistory && jobHistory.history && jobHistory.history.length > 0 &&                \n                <button type=\"button\" className=\"btn-sm btn-primary\" onClick={onExport(selectedJob)}><i className=\"fas fa-file-export\"></i></button>\n                }                \n                <button\n                  className='close'\n                  type='button'\n                  data-dismiss='modal'\n                  aria-label='Close'\n                >\n                  <span aria-hidden='true'>&times;</span>\n                </button>\n              </div>\n              <div className='modal-body'>\n                {jobHistory && jobHistory.history && (\n                  <table className='table'>\n                    <thead>\n                      <tr>\n                        <th scope='col'>Counter</th>\n                        <th scope='col'>JobId</th>\n                        {/* <th scope='col'>Created</th> */}\n                        <th scope='col'>Submit</th>\n                        <th scope='col'>Start</th>\n                        <th scope='col'>Finish</th>\n                        <th scope='col'>Queue</th>\n                        <th scope='col'>Run</th>\n                        <th scope='col'>Status</th>\n                        <th scope='col'>Energy</th>\n                        <th scope='col'>Wallclock</th>\n                        <th scope='col'>NCpus</th>\n                        <th scope='col'>NNodes</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {jobHistory.history.map((item) => (\n                        <tr key={item.counter}>\n                          <td>{item.counter}</td>\n                          <td>{item.job_id}</td>\n                          {/* <td>{item.created}</td> */}\n                          <td>{item.submit}</td>\n                          <td>{item.start}</td>\n                          <td>{item.finish}</td>\n                          <td>{item.queue_time}</td>\n                          <td>\n                            {item.run_time}{\" \"}\n                            {item.run_time === \"0:00:00\" && (\n                              <span\n                                className='badge badge-warning'\n                                data-toggle='tooltip'\n                                data-placement='bottom'\n                                title='This running time value usually means that there has been some error either on the completion of the job or in the historical database storage process.'\n                              >\n                                !\n                              </span>\n                            )}\n                          </td>\n                          <td>{item.status}</td>\n                          <td>{item.energy}</td>\n                          <td>{item.wallclock}</td>\n                          <td>{item.ncpus}</td>\n                          <td>{item.nodes}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                )}\n                {jobHistory && jobHistory.history.length === 0 && (\n                  <p>\n                    There is no historic data for this job. Are you running the\n                    latest version of Autosubmit that implements the historic\n                    database?\n                  </p>\n                )}\n              </div>\n              <div className='modal-footer'>\n                <button\n                  type='button'\n                  className='btn btn-secondary'\n                  data-dismiss='modal'\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </small>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default JobHistory;\n"]},"metadata":{},"sourceType":"module"}