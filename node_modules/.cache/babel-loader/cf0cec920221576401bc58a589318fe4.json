{"ast":null,"code":"import React,{useContext}from\"react\";import{Link}from\"react-router-dom\";import ExperimentContext from\"../context/experiment/experimentContext\";import{quickThreshold}from\"../context/vars\";var ExperimentItem=function ExperimentItem(_ref){var _ref$experiment=_ref.experiment,name=_ref$experiment.name,description=_ref$experiment.description,user=_ref$experiment.user,hpc=_ref$experiment.hpc,status=_ref$experiment.status,completed=_ref$experiment.completed,total=_ref$experiment.total,version=_ref$experiment.version;var experimentContext=useContext(ExperimentContext);var getExperimentSummary=experimentContext.getExperimentSummary,summaries=experimentContext.summaries,loadingSummary=experimentContext.loadingSummary;var onGetSummary=function onGetSummary(e){e.preventDefault();//console.log(name);\ngetExperimentSummary(name);};var disabledMore=total>=quickThreshold?true:false;return/*#__PURE__*/React.createElement(\"div\",{className:\"col mb-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center py-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 text-left\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"font-weight-bold\"},name)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 text-center\"},\" \",completed,\" / \",total,\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"progress border\"},/*#__PURE__*/React.createElement(\"div\",{className:completed===total?\"progress-bar bg-warning\":status===\"RUNNING\"?summaries[name]&&summaries[name].n_failed>0?\"progress-bar progress-bar-striped progress-bar-animated bg-danger\":\"progress-bar progress-bar-striped progress-bar-animated bg-success\":summaries[name]&&summaries[name].n_failed>0?\"progress-bar bg-danger\":\"progress-bar bg-info\",role:\"progressbar\",style:{width:total>0?completed/total*100+\"%\":\"0%\"},\"aria-valuenow\":completed,\"aria-valuemin\":\"0\",\"aria-valuemax\":total}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 text-right\"},status&&status===\"RUNNING\"&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success text-right\"},\"ACTIVE\"),status&&status!==\"RUNNING\"&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary text-right\"},\"INACTIVE\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body py-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle text-muted pt-2\"},/*#__PURE__*/React.createElement(\"small\",null,\"Owner:\"),\" \",user)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"HPC: \",hpc))),/*#__PURE__*/React.createElement(\"p\",{className:\"card-text py-1 mb-1\"},/*#__PURE__*/React.createElement(\"small\",null,description)),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-3 px-1\"},!loadingSummary.has(name)&&/*#__PURE__*/React.createElement(\"form\",{onSubmit:onGetSummary,className:\"form\"},/*#__PURE__*/React.createElement(\"input\",{className:summaries[name]?\"btn btn-info btn-block btn-sm\":\"btn btn-outline-info btn-block btn-sm\",type:\"submit\",value:summaries[name]?\"Refresh\":\"Summary\",\"aria-controls\":name})),loadingSummary.has(name)&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-secondary btn-block disabled\",disabled:\"True\"},\"Loading...\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6 px-1\"},disabledMore===true&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-block\",disabled:\"True\"},\"More \\u2192\"),disabledMore===false&&/*#__PURE__*/React.createElement(Link,{to:\"/autosubmitapp/experiment/\".concat(name),className:\"btn btn-outline-primary btn-block btn-sm\"},\"More\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-3 px-1\"},/*#__PURE__*/React.createElement(Link,{to:\"/autosubmitapp/experiment/\".concat(name,\"/light\"),className:\"btn btn-outline-success btn-block btn-sm\"},\"Quick\")),summaries[name]&&summaries[name].error===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 pt-2\",id:name},/*#__PURE__*/React.createElement(\"div\",{className:\"card card-body py-0 scroll-x\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row text-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"small\"},/*#__PURE__*/React.createElement(\"strong\",null,\"ERROR: \",summaries[name].error_message)))))),summaries[name]&&summaries[name].error===false&&/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 pt-2\",id:name},/*#__PURE__*/React.createElement(\"div\",{className:\"card card-body py-0 scroll-x\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row text-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"small\",null,\"All : avg. queue\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,summaries[name].avg_queue_time),\" | run\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,summaries[name].avg_run_time)))),summaries[name].sim_queue_considered>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"row text-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-12\"},/*#__PURE__*/React.createElement(\"small\",null,\"SIM \",\" (\",summaries[name].n_sim,\") \",\" : avg. queue\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,summaries[name].avg_sim_queue_time),\" \",\" (\",summaries[name].sim_queue_considered,\") \",\"| run\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,summaries[name].avg_sim_run_time),\" (\",summaries[name].sim_run_considered,\")\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row pb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},summaries[name].n_running>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success\"},\"Running: \",summaries[name].n_running),\" \",summaries[name].n_queuing>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge\",style:{backgroundColor:\"pink\"}},\"Queuing: \",summaries[name].n_queuing),\" \",summaries[name].n_submitted>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge\",style:{backgroundColor:\"cyan\"}},\"Submitted: \",summaries[name].n_submitted),\" \",summaries[name].n_suspended>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge\",style:{backgroundColor:\"orange\"}},\"Suspended: \",summaries[name].n_suspended))),summaries[name].n_failed>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"row px-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-2 text-center px-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-danger\"},\"Failed: \",summaries[name].n_failed)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-10 text-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\",style:{overflow:\"auto\",maxHeight:\"200px\"}},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"ol\",null,summaries[name].failed_jobs.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{key:item},item);}))))))))),/*#__PURE__*/React.createElement(\"p\",{className:\"card-text text-center\"},/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},version)))));};export default ExperimentItem;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/ExperimentItem.js"],"names":["React","useContext","Link","ExperimentContext","quickThreshold","ExperimentItem","experiment","name","description","user","hpc","status","completed","total","version","experimentContext","getExperimentSummary","summaries","loadingSummary","onGetSummary","e","preventDefault","disabledMore","n_failed","width","has","error","error_message","avg_queue_time","avg_run_time","sim_queue_considered","n_sim","avg_sim_queue_time","avg_sim_run_time","sim_run_considered","n_running","n_queuing","backgroundColor","n_submitted","n_suspended","overflow","maxHeight","failed_jobs","map","item"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport { quickThreshold } from \"../context/vars\";\n\nconst ExperimentItem = ({\n  experiment: { name, description, user, hpc, status, completed, total, version },\n}) => {\n  const experimentContext = useContext(ExperimentContext);\n  const { getExperimentSummary, summaries, loadingSummary } = experimentContext;\n  const onGetSummary = (e) => {\n    e.preventDefault();\n    //console.log(name);\n    getExperimentSummary(name);\n  };\n\n  const disabledMore = total >= quickThreshold ? true : false;\n\n  return (\n    <div className='col mb-4'>\n      <div className='card'>\n        <div className='card-header text-center py-1'>\n          <div className='row'>\n            <div className='col-md-3 text-left'>\n              <h3 className='font-weight-bold'>{name}</h3>\n            </div>\n            <div className='col-md-6 text-center'>\n              {\" \"}\n              {completed} / {total}{\" \"}\n              <div className='progress border'>\n                <div\n                  className={\n                    completed === total\n                      ? \"progress-bar bg-warning\"\n                      : status === \"RUNNING\"\n                      ? summaries[name] && summaries[name].n_failed > 0\n                        ? \"progress-bar progress-bar-striped progress-bar-animated bg-danger\"\n                        : \"progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                      : summaries[name] && summaries[name].n_failed > 0\n                      ? \"progress-bar bg-danger\"\n                      : \"progress-bar bg-info\"\n                  }\n                  role='progressbar'\n                  style={{\n                    width: total > 0 ? (completed / total) * 100 + \"%\" : \"0%\",\n                  }}\n                  aria-valuenow={completed}\n                  aria-valuemin='0'\n                  aria-valuemax={total}\n                ></div>\n              </div>\n              {/* <span className='badge badge-default'>\n              {\" \"}\n              \n            </span> */}\n            </div>\n            <div className='col-md-3 text-right'>\n              {status && status === \"RUNNING\" && (\n                <span className='badge badge-success text-right'>ACTIVE</span>\n              )}\n              {status && status !== \"RUNNING\" && (\n                <span className='badge badge-secondary text-right'>\n                  INACTIVE\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className='card-body py-1'>\n          {/* <h4 className=\"card-title\"></h4> */}\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              <h6 className='card-subtitle text-muted pt-2'>\n                <small>Owner:</small> {user}\n              </h6>\n            </div>\n            <div>\n              <small className='text-muted'>HPC: {hpc}</small>\n            </div>\n          </div>          \n          <p className='card-text py-1 mb-1'>\n            <small>{description}</small>\n          </p>\n          <div className='row'>\n            <div className='col-3 px-1'>\n              {!loadingSummary.has(name) && (\n                <form onSubmit={onGetSummary} className='form'>\n                  <input\n                    className={\n                      summaries[name]\n                        ? \"btn btn-info btn-block btn-sm\"\n                        : \"btn btn-outline-info btn-block btn-sm\"\n                    }\n                    type='submit'\n                    value={summaries[name] ? \"Refresh\" : \"Summary\"}\n                    aria-controls={name}\n                  />\n                </form>\n              )}\n              {loadingSummary.has(name) && (\n                <button\n                  className='btn-sm btn-secondary btn-block disabled'\n                  disabled='True'\n                >\n                  Loading...\n                </button>\n              )}\n            </div>\n            <div className='col-6 px-1'>\n              {disabledMore === true && (\n                <button className='btn-sm btn-block' disabled='True'>\n                  More &#8594;\n                </button>\n              )}\n              {disabledMore === false && (\n                <Link\n                  to={`/autosubmitapp/experiment/${name}`}\n                  className='btn btn-outline-primary btn-block btn-sm'\n                >\n                  More\n                </Link>\n              )}\n            </div>\n            <div className='col-3 px-1'>\n              <Link\n                to={`/autosubmitapp/experiment/${name}/light`}\n                className='btn btn-outline-success btn-block btn-sm'\n              >\n                Quick\n              </Link>\n            </div>\n            {summaries[name] && summaries[name].error === true && (\n              <div className='col-12 pt-2' id={name}>\n                <div className='card card-body py-0 scroll-x'>\n                  <div className='row text-left'>\n                    <div className='col-md-12'>\n                      <div className='small'>\n                        <strong>ERROR: {summaries[name].error_message}</strong>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            {summaries[name] && summaries[name].error === false && (\n              <div className='col-12 pt-2' id={name}>\n                <div className='card card-body py-0 scroll-x'>\n                  <div className='row text-left'>\n                    <div className='col-md-12'>\n                      <small>\n                        All : avg. queue{\" \"}\n                        <strong>{summaries[name].avg_queue_time}</strong> | run{\" \"}\n                        <strong>{summaries[name].avg_run_time}</strong>\n                      </small>\n                    </div>\n                  </div>\n                  {summaries[name].sim_queue_considered > 0 && (\n                    <div className='row text-left'>\n                      <div className='col-md-12'>\n                        <small>\n                          SIM {\" (\"}\n                          {summaries[name].n_sim}\n                          {\") \"} : avg. queue{\" \"}\n                          <strong>{summaries[name].avg_sim_queue_time}</strong>{\" \"}\n                          {\" (\"}\n                          {summaries[name].sim_queue_considered}\n                          {\") \"}| run{\" \"}\n                          <strong>{summaries[name].avg_sim_run_time}</strong>\n                          {\" (\"}\n                          {summaries[name].sim_run_considered}\n                          {\")\"}\n                        </small>\n                      </div>\n                    </div>\n                  )}\n                  <div className='row pb-2'>\n                    <div className='col-12'>\n                      {summaries[name].n_running > 0 && (\n                        <span className='badge badge-success'>\n                          Running: {summaries[name].n_running}\n                        </span>\n                      )}{\" \"}\n                      {summaries[name].n_queuing > 0 && (\n                        <span\n                          className='badge'\n                          style={{ backgroundColor: \"pink\" }}\n                        >\n                          Queuing: {summaries[name].n_queuing}\n                        </span>\n                      )}{\" \"}\n                      {summaries[name].n_submitted > 0 && (\n                        <span\n                          className='badge'\n                          style={{ backgroundColor: \"cyan\" }}\n                        >\n                          Submitted: {summaries[name].n_submitted}\n                        </span>\n                      )}{\" \"}\n                      {summaries[name].n_suspended > 0 && (\n                        <span\n                          className='badge'\n                          style={{ backgroundColor: \"orange\" }}\n                        >\n                          Suspended: {summaries[name].n_suspended}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  {summaries[name].n_failed > 0 && (\n                    <div className='row px-1'>\n                      <div className='col-md-2 text-center px-2'>\n                        <span className='badge badge-danger'>\n                          Failed: {summaries[name].n_failed}\n                        </span>\n                      </div>\n                      <div className='col-md-10 text-left'>\n                        <div\n                          className=''\n                          style={{ overflow: \"auto\", maxHeight: \"200px\" }}\n                        >\n                          <small>\n                            <ol>\n                              {summaries[name].failed_jobs.map((item) => (\n                                <li key={item}>{item}</li>\n                              ))}\n                            </ol>\n                          </small>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          <p className='card-text text-center'>\n            <small className='text-muted'>{version}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nExperimentItem.propTypes = {\n  experiment: PropTypes.object.isRequired,\n};\n\nexport default ExperimentItem;\n"]},"metadata":{},"sourceType":"module"}