{"ast":null,"code":"import _slicedToArray from \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/context/statistics/StatsState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport StatsContext from './statsContext';\nimport StatsReducer from './statsReducer';\nimport { SET_LOADING, GET_EXPERIMENT_STATS } from '../types';\n\nconst StatsState = props => {\n  const initialState = {\n    loading: false,\n    statdata: null\n  };\n\n  const _useReducer = useReducer(StatsReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Experiment Stats\n\n\n  const getExperimentStats = async (expid, hours, type) => {\n    setLoading(); //cleanGraphData();\n\n    const res = await axios.get(\"http://84.88.185.30:8888/expinfo/\".concat(expid));\n    dispatch({\n      type: GET_EXPERIMENT,\n      payload: res.data\n    });\n  };\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(StatsContext.Provider, {\n    value: {\n      loading: state.loading,\n      statdata: state.statdata\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default StatsState;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/context/statistics/StatsState.js"],"names":["React","useReducer","axios","StatsContext","StatsReducer","SET_LOADING","GET_EXPERIMENT_STATS","StatsState","props","initialState","loading","statdata","state","dispatch","getExperimentStats","expid","hours","type","setLoading","res","get","GET_EXPERIMENT","payload","data","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,WADJ,EAEIC,oBAFJ,QAGO,UAHP;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE,KADQ;AAEjBC,IAAAA,QAAQ,EAAE;AAFO,GAArB;;AADwB,sBAMEV,UAAU,CAACG,YAAD,EAAeK,YAAf,CANZ;AAAA;AAAA,QAMjBG,KANiB;AAAA,QAMVC,QANU,oBAQxB;;;AACA,QAAMC,kBAAkB,GAAG,OAAOC,KAAP,EAAaC,KAAb,EAAmBC,IAAnB,KAA6B;AACpDC,IAAAA,UAAU,GAD0C,CAEpD;;AACA,UAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,4CAA8CL,KAA9C,EAAlB;AACAF,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEI,cADD;AAELC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIC,GARL;;AAUA,QAAML,UAAU,GAAG,MAAML,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAjC;;AAEA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,OAAO,EAAEE,KAAK,CAACF,OADZ;AAEHC,MAAAA,QAAQ,EAAEC,KAAK,CAACD;AAFb,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKH,KAAK,CAACgB,QALX,CADJ;AASH,CA9BD;;AAgCA,eAAejB,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport StatsContext from './statsContext';\nimport StatsReducer from './statsReducer';\nimport {\n    SET_LOADING,\n    GET_EXPERIMENT_STATS,\n} from '../types';\n\n\nconst StatsState = props => {\n    const initialState = {\n        loading: false,\n        statdata: null,\n    }\n\n    const [state, dispatch] = useReducer(StatsReducer, initialState);\n\n    // Get Experiment Stats\n    const getExperimentStats = async (expid,hours,type)  => {\n        setLoading();\n        //cleanGraphData();\n        const res = await axios.get(`http://84.88.185.30:8888/expinfo/${expid}`);        \n        dispatch({\n            type: GET_EXPERIMENT,\n            payload: res.data,\n        });\n        };\n\n    const setLoading = () => dispatch({ type: SET_LOADING });\n\n    return (\n        <StatsContext.Provider\n            value={{\n                loading: state.loading,\n                statdata: state.statdata,\n            }}>\n            {props.children}\n        </StatsContext.Provider>\n    );\n};\n\nexport default StatsState;"]},"metadata":{},"sourceType":"module"}