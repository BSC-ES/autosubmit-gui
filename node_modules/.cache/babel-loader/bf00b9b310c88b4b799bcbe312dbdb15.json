{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/pages/ExperimentCentral.js\";\nimport React, { Fragment, useContext } from 'react';\nimport Experiment from '../experiment/Experiment';\nimport GraphRepresentation from '../experiment/GraphRepresentation';\nimport ExperimentContext from '../context/experiment/experimentContext';\nimport Selection from '../experiment/Selection';\nimport OpenRun from '../experiment/OpenRun';\nimport Running from '../experiment/Running';\nimport JobMonitor from '../experiment/JobMonitor';\n\nconst ExperimentCentral = ({\n  match\n}) => {\n  const expid = match.params.expid;\n  const experimentContext = useContext(ExperimentContext);\n  const data = experimentContext.data,\n        updateSelection = experimentContext.updateSelection,\n        loadingGraph = experimentContext.loadingGraph,\n        loadingRun = experimentContext.loadingRun,\n        shouldUpdateGraph = experimentContext.shouldUpdateGraph,\n        cleanGraphData = experimentContext.cleanGraphData,\n        cleanRunData = experimentContext.cleanRunData,\n        getExperimentRun = experimentContext.getExperimentRun,\n        startAutoUpdateRun = experimentContext.startAutoUpdateRun,\n        rundata = experimentContext.rundata,\n        experiment = experimentContext.experiment;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Experiment, {\n    expidToken: expid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(JobMonitor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(GraphRepresentation, {\n    data: data,\n    updateSelection: updateSelection,\n    loadingGraph: loadingGraph,\n    cleanGraphData: cleanGraphData,\n    shouldUpdateGraph: shouldUpdateGraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Selection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(OpenRun, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), startAutoUpdateRun && React.createElement(Running, {\n    rundata: rundata,\n    loadingRun: loadingRun,\n    cleanRunData: cleanRunData,\n    getExperimentRun: getExperimentRun,\n    experiment: experiment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default ExperimentCentral;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/pages/ExperimentCentral.js"],"names":["React","Fragment","useContext","Experiment","GraphRepresentation","ExperimentContext","Selection","OpenRun","Running","JobMonitor","ExperimentCentral","match","expid","params","experimentContext","data","updateSelection","loadingGraph","loadingRun","shouldUpdateGraph","cleanGraphData","cleanRunData","getExperimentRun","startAutoUpdateRun","rundata","experiment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACrC,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACA,QAAME,iBAAiB,GAAGZ,UAAU,CAACG,iBAAD,CAApC;AAFqC,QAG9BU,IAH8B,GAalBD,iBAbkB,CAG9BC,IAH8B;AAAA,QAIjCC,eAJiC,GAalBF,iBAbkB,CAIjCE,eAJiC;AAAA,QAKjCC,YALiC,GAalBH,iBAbkB,CAKjCG,YALiC;AAAA,QAMjCC,UANiC,GAalBJ,iBAbkB,CAMjCI,UANiC;AAAA,QAOjCC,iBAPiC,GAalBL,iBAbkB,CAOjCK,iBAPiC;AAAA,QAQjCC,cARiC,GAalBN,iBAbkB,CAQjCM,cARiC;AAAA,QASjCC,YATiC,GAalBP,iBAbkB,CASjCO,YATiC;AAAA,QAUjCC,gBAViC,GAalBR,iBAbkB,CAUjCQ,gBAViC;AAAA,QAWjCC,kBAXiC,GAalBT,iBAbkB,CAWjCS,kBAXiC;AAAA,QAYjCC,OAZiC,GAalBV,iBAbkB,CAYjCU,OAZiC;AAAA,QAajCC,UAbiC,GAalBX,iBAbkB,CAajCW,UAbiC;AAerC,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEb,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAEG,IAA3B;AAAiC,IAAA,eAAe,EAAEC,eAAlD;AAAmE,IAAA,YAAY,EAAEC,YAAjF;AAA+F,IAAA,cAAc,EAAEG,cAA/G;AAA+H,IAAA,iBAAiB,EAAED,iBAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMKI,kBAAkB,IAAI,oBAAC,OAAD;AACnB,IAAA,OAAO,EAAEC,OADU;AAEnB,IAAA,UAAU,EAAEN,UAFO;AAGnB,IAAA,YAAY,EAAEG,YAHK;AAInB,IAAA,gBAAgB,EAAEC,gBAJC;AAKnB,IAAA,UAAU,EAAEG,UALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN3B,CADA;AAgBH,CA/BD;;AAiCA,eAAef,iBAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport Experiment from '../experiment/Experiment';\nimport GraphRepresentation from '../experiment/GraphRepresentation';\nimport ExperimentContext from '../context/experiment/experimentContext';\nimport Selection from '../experiment/Selection';\nimport OpenRun from '../experiment/OpenRun';\nimport Running from '../experiment/Running';\nimport JobMonitor from '../experiment/JobMonitor';\n\nconst ExperimentCentral = ({ match }) => {\n    const expid = match.params.expid;\n    const experimentContext = useContext(ExperimentContext);\n    const {data, \n        updateSelection, \n        loadingGraph, \n        loadingRun, \n        shouldUpdateGraph,\n        cleanGraphData, \n        cleanRunData, \n        getExperimentRun, \n        startAutoUpdateRun, \n        rundata,\n        experiment } = experimentContext;\n    \n    return (\n    <Fragment>\n        <Experiment expidToken={expid} />\n        <JobMonitor />\n        <GraphRepresentation data={data} updateSelection={updateSelection} loadingGraph={loadingGraph} cleanGraphData={cleanGraphData} shouldUpdateGraph={shouldUpdateGraph} />\n        <Selection />        \n        <OpenRun/>\n        {startAutoUpdateRun && <Running \n            rundata={rundata}\n            loadingRun={loadingRun} \n            cleanRunData={cleanRunData} \n            getExperimentRun={getExperimentRun}\n            experiment={experiment}  \n        />} \n    </Fragment>\n    );\n};  \n\nexport default ExperimentCentral;"]},"metadata":{},"sourceType":"module"}