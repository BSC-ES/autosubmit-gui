{"ast":null,"code":"/*!\n * jquery.fancytree.multi.js\n *\n * Allow multiple selection of nodes  by mouse or keyboard.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2020, Martin Wendt (https://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.37.0\n * @date 2020-09-11T18:58:08Z\n */\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"jquery\", \"./jquery.fancytree\"], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node/CommonJS\n    require(\"./jquery.fancytree\");\n\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  \"use strict\";\n  /*******************************************************************************\n   * Private functions and variables\n   */\n  // var isMac = /Mac/.test(navigator.platform);\n\n  /*******************************************************************************\n   * Extension code\n   */\n\n  $.ui.fancytree.registerExtension({\n    name: \"multi\",\n    version: \"2.37.0\",\n    // Default options for this extension.\n    options: {\n      allowNoSelect: false,\n      //\n      mode: \"sameParent\" //\n      // Events:\n      // beforeSelect: $.noop  // Return false to prevent cancel/save (data.input is available)\n\n    },\n    treeInit: function (ctx) {\n      this._superApply(arguments);\n\n      this.$container.addClass(\"fancytree-ext-multi\");\n\n      if (ctx.options.selectMode === 1) {\n        $.error(\"Fancytree ext-multi: selectMode: 1 (single) is not compatible.\");\n      }\n    },\n    nodeClick: function (ctx) {\n      var //pluginOpts = ctx.options.multi,\n      tree = ctx.tree,\n          node = ctx.node,\n          activeNode = tree.getActiveNode() || tree.getFirstChild(),\n          isCbClick = ctx.targetType === \"checkbox\",\n          isExpanderClick = ctx.targetType === \"expander\",\n          eventStr = $.ui.fancytree.eventToString(ctx.originalEvent);\n\n      switch (eventStr) {\n        case \"click\":\n          if (isExpanderClick) {\n            break;\n          } // Default handler will expand/collapse\n\n\n          if (!isCbClick) {\n            tree.selectAll(false); // Select clicked node (radio-button  mode)\n\n            node.setSelected();\n          } // Default handler will toggle checkbox clicks and activate\n\n\n          break;\n\n        case \"shift+click\":\n          // node.debug(\"click\")\n          tree.visitRows(function (n) {\n            // n.debug(\"click2\", n===node, node)\n            n.setSelected();\n\n            if (n === node) {\n              return false;\n            }\n          }, {\n            start: activeNode,\n            reverse: activeNode.isBelowOf(node)\n          });\n          break;\n\n        case \"ctrl+click\":\n        case \"meta+click\":\n          // Mac: [Command]\n          node.toggleSelected();\n          return;\n      }\n\n      return this._superApply(arguments);\n    },\n    nodeKeydown: function (ctx) {\n      var tree = ctx.tree,\n          node = ctx.node,\n          event = ctx.originalEvent,\n          eventStr = $.ui.fancytree.eventToString(event);\n\n      switch (eventStr) {\n        case \"up\":\n        case \"down\":\n          tree.selectAll(false);\n          node.navigate(event.which, true);\n          tree.getActiveNode().setSelected();\n          break;\n\n        case \"shift+up\":\n        case \"shift+down\":\n          node.navigate(event.which, true);\n          tree.getActiveNode().setSelected();\n          break;\n      }\n\n      return this._superApply(arguments);\n    }\n  }); // Value returned by `require('jquery.fancytree..')`\n\n  return $.ui.fancytree;\n}); // End of closure","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/jquery.fancytree/dist/modules/jquery.fancytree.multi.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","ui","fancytree","registerExtension","name","version","options","allowNoSelect","mode","treeInit","ctx","_superApply","arguments","$container","addClass","selectMode","error","nodeClick","tree","node","activeNode","getActiveNode","getFirstChild","isCbClick","targetType","isExpanderClick","eventStr","eventToString","originalEvent","selectAll","setSelected","visitRows","n","start","reverse","isBelowOf","toggleSelected","nodeKeydown","event","navigate","which"],"mappings":"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","sourcesContent":["/*!\n * jquery.fancytree.multi.js\n *\n * Allow multiple selection of nodes  by mouse or keyboard.\n * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)\n *\n * Copyright (c) 2008-2020, Martin Wendt (https://wwWendt.de)\n *\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.37.0\n * @date 2020-09-11T18:58:08Z\n */\n\n(function(factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([\"jquery\", \"./jquery.fancytree\"], factory);\n\t} else if (typeof module === \"object\" && module.exports) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n})(function($) {\n\t\"use strict\";\n\n\t/*******************************************************************************\n\t * Private functions and variables\n\t */\n\n\t// var isMac = /Mac/.test(navigator.platform);\n\n\t/*******************************************************************************\n\t * Extension code\n\t */\n\t$.ui.fancytree.registerExtension({\n\t\tname: \"multi\",\n\t\tversion: \"2.37.0\",\n\t\t// Default options for this extension.\n\t\toptions: {\n\t\t\tallowNoSelect: false, //\n\t\t\tmode: \"sameParent\", //\n\t\t\t// Events:\n\t\t\t// beforeSelect: $.noop  // Return false to prevent cancel/save (data.input is available)\n\t\t},\n\n\t\ttreeInit: function(ctx) {\n\t\t\tthis._superApply(arguments);\n\t\t\tthis.$container.addClass(\"fancytree-ext-multi\");\n\t\t\tif (ctx.options.selectMode === 1) {\n\t\t\t\t$.error(\n\t\t\t\t\t\"Fancytree ext-multi: selectMode: 1 (single) is not compatible.\"\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tnodeClick: function(ctx) {\n\t\t\tvar //pluginOpts = ctx.options.multi,\n\t\t\t\ttree = ctx.tree,\n\t\t\t\tnode = ctx.node,\n\t\t\t\tactiveNode = tree.getActiveNode() || tree.getFirstChild(),\n\t\t\t\tisCbClick = ctx.targetType === \"checkbox\",\n\t\t\t\tisExpanderClick = ctx.targetType === \"expander\",\n\t\t\t\teventStr = $.ui.fancytree.eventToString(ctx.originalEvent);\n\n\t\t\tswitch (eventStr) {\n\t\t\t\tcase \"click\":\n\t\t\t\t\tif (isExpanderClick) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // Default handler will expand/collapse\n\t\t\t\t\tif (!isCbClick) {\n\t\t\t\t\t\ttree.selectAll(false);\n\t\t\t\t\t\t// Select clicked node (radio-button  mode)\n\t\t\t\t\t\tnode.setSelected();\n\t\t\t\t\t}\n\t\t\t\t\t// Default handler will toggle checkbox clicks and activate\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"shift+click\":\n\t\t\t\t\t// node.debug(\"click\")\n\t\t\t\t\ttree.visitRows(\n\t\t\t\t\t\tfunction(n) {\n\t\t\t\t\t\t\t// n.debug(\"click2\", n===node, node)\n\t\t\t\t\t\t\tn.setSelected();\n\t\t\t\t\t\t\tif (n === node) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstart: activeNode,\n\t\t\t\t\t\t\treverse: activeNode.isBelowOf(node),\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ctrl+click\":\n\t\t\t\tcase \"meta+click\": // Mac: [Command]\n\t\t\t\t\tnode.toggleSelected();\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn this._superApply(arguments);\n\t\t},\n\t\tnodeKeydown: function(ctx) {\n\t\t\tvar tree = ctx.tree,\n\t\t\t\tnode = ctx.node,\n\t\t\t\tevent = ctx.originalEvent,\n\t\t\t\teventStr = $.ui.fancytree.eventToString(event);\n\n\t\t\tswitch (eventStr) {\n\t\t\t\tcase \"up\":\n\t\t\t\tcase \"down\":\n\t\t\t\t\ttree.selectAll(false);\n\t\t\t\t\tnode.navigate(event.which, true);\n\t\t\t\t\ttree.getActiveNode().setSelected();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"shift+up\":\n\t\t\t\tcase \"shift+down\":\n\t\t\t\t\tnode.navigate(event.which, true);\n\t\t\t\t\ttree.getActiveNode().setSelected();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn this._superApply(arguments);\n\t\t},\n\t});\n\t// Value returned by `require('jquery.fancytree..')`\n\treturn $.ui.fancytree;\n}); // End of closure\n"]},"metadata":{},"sourceType":"script"}