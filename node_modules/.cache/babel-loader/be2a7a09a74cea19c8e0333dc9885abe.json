{"ast":null,"code":"import _slicedToArray from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";//import ExperimentContext from \"../context/experiment/experimentContext\";\nimport GraphContext from\"../context/graph/graphContext\";import GraphNodeSelection from\"./GraphNodeSelection\";import AlertTotal from\"./AlertTotal\";var JobSearcher=function JobSearcher(){//const experimentContext = useContext(ExperimentContext);\nvar graphContext=useContext(GraphContext);var searchJobInGraph=graphContext.searchJobInGraph,foundNodes=graphContext.foundNodes,loadingSearchJob=graphContext.loadingSearchJob,data=graphContext.data,navigateTo=graphContext.navigateTo;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),jobId=_useState2[0],setJobId=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),currentIndex=_useState4[0],setCurrentIndex=_useState4[1];var onChangeId=function onChangeId(e){return setJobId(e.target.value);};var onSubmit=function onSubmit(e){e.preventDefault();searchJobInGraph(jobId);setCurrentIndex(0);};var onNext=function onNext(index){return function(e){e.preventDefault();if(foundNodes){var nextIndex=currentIndex+index;//setCurrentIndex(nextIndex);\n//console.log(nextIndex);\nif(nextIndex>=0&&nextIndex<foundNodes.length){//setCurrentIndex(nextIndex);\n//console.log(foundNodes[currentIndex].id);\nnavigateTo(foundNodes[nextIndex].id);setCurrentIndex(nextIndex);}else{if(nextIndex<0){navigateTo(foundNodes[foundNodes.length-1].id);setCurrentIndex(foundNodes.length-1);}else if(nextIndex>=foundNodes.length){navigateTo(foundNodes[0].id);setCurrentIndex(0);}}}};};return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit,className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"text\",name:\"section\",placeholder:\"Job Name (e.g. fc0_1_CLEAN)\",onChange:onChangeId}),loadingSearchJob&&/*#__PURE__*/React.createElement(\"span\",null,\"Searching...\"),!loadingSearchJob&&/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Search by Job Name\",className:\"btn btn-dark btn-sm\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-2 text-center\"},foundNodes&&foundNodes.length>1&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-info\",type:\"button\",onClick:onNext(-1)},\"Previous\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-info\",type:\"button\",onClick:onNext(1)},\"Next\"),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted ml-2\"},currentIndex+1,\" of \",foundNodes.length))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-2\"},/*#__PURE__*/React.createElement(GraphNodeSelection,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4 text-right text-muted pr-4\"},data&&/*#__PURE__*/React.createElement(\"small\",null,\"Max out: \",data.max_children,\" | Max in: \",data.max_parents,\" | Total #Jobs: \",data.total_jobs,\" \",/*#__PURE__*/React.createElement(AlertTotal,{source:\"graph\"}),\" | Chunk unit: \",/*#__PURE__*/React.createElement(\"strong\",null,data.chunk_unit),\" | Chunk size\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,data.chunk_size),\" \")));};export default JobSearcher;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobSearcher.js"],"names":["React","useContext","useState","GraphContext","GraphNodeSelection","AlertTotal","JobSearcher","graphContext","searchJobInGraph","foundNodes","loadingSearchJob","data","navigateTo","jobId","setJobId","currentIndex","setCurrentIndex","onChangeId","e","target","value","onSubmit","preventDefault","onNext","index","nextIndex","length","id","max_children","max_parents","total_jobs","chunk_unit","chunk_size"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n//import ExperimentContext from \"../context/experiment/experimentContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport GraphNodeSelection from \"./GraphNodeSelection\";\nimport AlertTotal from \"./AlertTotal\";\n\nconst JobSearcher = () => {\n  //const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const {\n    searchJobInGraph,\n    foundNodes,\n    loadingSearchJob,\n    data,\n    navigateTo,\n  } = graphContext;\n\n  const [jobId, setJobId] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(\"\");\n  const onChangeId = (e) => setJobId(e.target.value);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    searchJobInGraph(jobId);\n    setCurrentIndex(0);\n  };\n\n  const onNext = (index) => (e) => {\n    e.preventDefault();\n    if (foundNodes) {\n      let nextIndex = currentIndex + index;\n      //setCurrentIndex(nextIndex);\n      //console.log(nextIndex);\n      if (nextIndex >= 0 && nextIndex < foundNodes.length) {\n        //setCurrentIndex(nextIndex);\n        //console.log(foundNodes[currentIndex].id);\n        navigateTo(foundNodes[nextIndex].id);\n        setCurrentIndex(nextIndex);\n      } else {\n        if (nextIndex < 0) {\n          navigateTo(foundNodes[foundNodes.length - 1].id);\n          setCurrentIndex(foundNodes.length - 1);\n        } else if (nextIndex >= foundNodes.length) {\n          navigateTo(foundNodes[0].id);\n          setCurrentIndex(0);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className='row'>\n      <div className='col-md-4'>\n        <form onSubmit={onSubmit} className='form'>\n          <div className='input-group input-group-sm'>\n            <input\n              className='form-control'\n              type='text'\n              name='section'\n              placeholder='Job Name (e.g. fc0_1_CLEAN)'\n              onChange={onChangeId}\n            />\n            {/* <input\n                            className=\"form-control\"\n                            type='text'\n                            name='hours'\n                            placeholder='Hours'                          \n                            onChange={onChangeHour}\n                        />                     */}\n            {loadingSearchJob && <span>Searching...</span>}\n            {!loadingSearchJob && (\n              <div className='input-group-append'>\n                <input\n                  type='submit'\n                  value='Search by Job Name'\n                  className='btn btn-dark btn-sm'\n                />\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n      <div className='col-md-2 text-center'>\n        {foundNodes && foundNodes.length > 1 && (\n          <div>\n            <button\n              className='btn-sm btn-info'\n              type='button'\n              onClick={onNext(-1)}\n            >\n              Previous\n            </button>\n            <button\n              className='btn-sm btn-info'\n              type='button'\n              onClick={onNext(1)}\n            >\n              Next\n            </button>\n            <small className='text-muted ml-2'>\n              {currentIndex + 1} of {foundNodes.length}\n            </small>\n            {/* <form onSubmit={onNext(-1)} className='form'>\n                            <input          \n                            type='submit'\n                            value='Prev'\n                            className='btn btn-info btn-sm'                            \n                            />\n                        </form>\n\n                        <form onSubmit={onNext(1)} className='form'>\n                            <input          \n                            type='submit'\n                            value='Next'\n                            className='btn btn-info btn-sm'                            \n                            />\n                        </form> */}\n          </div>\n        )}\n      </div>\n      <div className='col-md-2'>\n        <GraphNodeSelection />\n      </div>\n\n      <div className='col-md-4 text-right text-muted pr-4'>\n        {data && (\n          <small>\n            Max out: {data.max_children} | Max in: {data.max_parents} | Total\n            #Jobs: {data.total_jobs} <AlertTotal source={\"graph\"} /> | Chunk\n            unit: <strong>{data.chunk_unit}</strong> | Chunk size{\" \"}\n            <strong>{data.chunk_size}</strong>{\" \"}\n          </small>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JobSearcher;\n"]},"metadata":{},"sourceType":"module"}