{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobMonitor.js\";\nimport React, { Component } from \"react\";\nimport Notification from \"react-web-notification\";\n\nclass JobMonitor extends Component {\n  // const experimentContext = useContext(ExperimentContext);\n  // const { pkldata, loadingPkl } = experimentContext;\n  componentDidMount() {\n    if (this.props.experiment) {\n      this.props.getExperimentPkl(this.props.experiment.expid, this.props.experiment.pkl_timestamp);\n\n      if (this.props.experimentRunning) {\n        this.interval = setInterval(() => this.props.getExperimentPkl(this.props.experiment.expid, this.props.experiment.pkl_timestamp), this.props.experiment.updateTime * 2000);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanPklData();\n\n    if (this.props.experimentRunning) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      loadingPkl,\n      pklchanges,\n      notificationTitleGraph,\n      setNotificationTitleGraph\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header text-center py-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Monitoring jobs...\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, pklchanges && /*#__PURE__*/React.createElement(\"pre\", {\n      className: \"scroll-y mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }\n    }, pklchanges), loadingPkl && /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 30\n      }\n    }, \"Loading...\")))), notificationTitleGraph && /*#__PURE__*/React.createElement(Notification, {\n      title: notificationTitleGraph,\n      onClose: () => setNotificationTitleGraph(null),\n      onPermissionDenied: () => console.log(\"Permission Denied.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }));\n  }\n\n} // const experimentStyle = {\n//     height: 338\n//   };\n// const monitorStyle = {\n//     height: 310\n// }\n\n\nexport default JobMonitor;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/JobMonitor.js"],"names":["React","Component","Notification","JobMonitor","componentDidMount","props","experiment","getExperimentPkl","expid","pkl_timestamp","experimentRunning","interval","setInterval","updateTime","componentWillUnmount","cleanPklData","clearInterval","render","loadingPkl","pklchanges","notificationTitleGraph","setNotificationTitleGraph","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjC;AACA;AACAG,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,WAAKD,KAAL,CAAWE,gBAAX,CACE,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,KADxB,EAEE,KAAKH,KAAL,CAAWC,UAAX,CAAsBG,aAFxB;;AAIA,UAAI,KAAKJ,KAAL,CAAWK,iBAAf,EAAkC;AAChC,aAAKC,QAAL,GAAgBC,WAAW,CACzB,MACE,KAAKP,KAAL,CAAWE,gBAAX,CACE,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,KADxB,EAEE,KAAKH,KAAL,CAAWC,UAAX,CAAsBG,aAFxB,CAFuB,EAMzB,KAAKJ,KAAL,CAAWC,UAAX,CAAsBO,UAAtB,GAAmC,IANV,CAA3B;AAQD;AACF;AACF;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKT,KAAL,CAAWU,YAAX;;AACA,QAAI,KAAKV,KAAL,CAAWK,iBAAf,EAAkC;AAChCM,MAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACD;AACF;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,UADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,sBAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKhB,KALT;AAMA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,UAAU,iBAAI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,UAAhC,CADjB,EAEGD,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFjB,CAJF,CADF,CADF,EAYGE,sBAAsB,iBACrB,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEA,sBADT;AAEE,MAAA,OAAO,EAAE,MAAMC,yBAAyB,CAAC,IAAD,CAF1C;AAGE,MAAA,kBAAkB,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADF;AAsBD;;AA1DgC,C,CA6DnC;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAepB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Notification from \"react-web-notification\";\n\nclass JobMonitor extends Component {\n  // const experimentContext = useContext(ExperimentContext);\n  // const { pkldata, loadingPkl } = experimentContext;\n  componentDidMount() {\n    if (this.props.experiment) {\n      this.props.getExperimentPkl(\n        this.props.experiment.expid,\n        this.props.experiment.pkl_timestamp\n      );\n      if (this.props.experimentRunning) {\n        this.interval = setInterval(\n          () =>\n            this.props.getExperimentPkl(\n              this.props.experiment.expid,\n              this.props.experiment.pkl_timestamp\n            ),\n          this.props.experiment.updateTime * 2000\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanPklData();\n    if (this.props.experimentRunning) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      loadingPkl,\n      pklchanges,\n      notificationTitleGraph,\n      setNotificationTitleGraph,\n    } = this.props;\n    return (\n      <div className='row'>\n        <div className='col-12'>\n          <div className='card'>\n            <div className='card-header text-center py-0'>\n              <small>Monitoring jobs...</small>\n            </div>\n            <div className='card-body p-0'>\n              {pklchanges && <pre className='scroll-y mb-0'>{pklchanges}</pre>}\n              {loadingPkl && <small>Loading...</small>}\n            </div>\n          </div>\n        </div>\n        {notificationTitleGraph && (\n          <Notification\n            title={notificationTitleGraph}\n            onClose={() => setNotificationTitleGraph(null)}\n            onPermissionDenied={() => console.log(\"Permission Denied.\")}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n// const experimentStyle = {\n//     height: 338\n//   };\n// const monitorStyle = {\n//     height: 310\n// }\n\nexport default JobMonitor;\n"]},"metadata":{},"sourceType":"module"}