{"ast":null,"code":"import _regeneratorRuntime from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from\"react\";import axios from\"axios\";import ExperimentContext from\"./experimentContext\";import ExperimentReducer from\"./experimentReducer\";import{SEARCH_EXPERIMENTS,SET_LOADING,CLEAR_EXPERIMENTS,GET_EXPERIMENT//GET_TREE,\n//SET_LOADING_TREE,\n,GET_EXPERIMENT_RUN,SET_LOADING_RUN,CLEAN_RUN_DATA,SET_AUTOUPDATE_RUN,SET_LOADING_STATE,GET_RUNNING_STATE,UPDATE_EXPERIMENT_TS,CURRENT_RUNNING,GET_EXPERIMENT_SUMMARY,CLEAR_SUMMARY_EXP,GET_EXPERIMENT_PERFORMANCE,CLEAN_PERFORMANCE_METRICS,ACTIVATE_SELECTION_MODE,DEACTIVATE_SELECTION_MODE,REMOVE_SELECTED_JOB,SET_CURRENT_COMMAND,UPDATE_SELECTED_JOBS,SET_LOADING_SUMMARY,CLEAN_EXPERIMENT_DATA,LOADING_PERFORMANCE_METRICS,GET_JOB_HISTORY,LOADING_JOB_HISTORY,LOADING_EXPERIMENT_RUNS,GET_EXPERIMENT_RUNS}from\"../types\";import{AUTOSUBMIT_API_SOURCE,DEBUG,ERROR_MESSAGE}from\"../vars\";import{timeStampToDate}from\"../utils\";var ExperimentState=function ExperimentState(props){var initialState={experiments:[],summaries:[],experiment:{},totalJobs:0,jobHistory:null,experimentRuns:null,expectedLoadingTreeTime:0,expectedLoadingQuickView:0,loadingSummary:new Map(),loading:false,loadingPerformance:false,experimentRunning:false,rundata:null,performancedata:null,loadingRun:false,loadingState:false,loadingFilterTree:false,loadingExperimentRuns:false,currentCommand:null,currentSelected:[],startAutoUpdateRun:false,startAutoUpdateTreePkl:false,fancyTree:null,allowJobMonitor:false,canSelect:false};var _useReducer=useReducer(ExperimentReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var localserver=AUTOSUBMIT_API_SOURCE;//const localserver = \"http://84.88.185.94:8081\";\nvar debug=DEBUG;// Search Experiments\nvar searchExperiments=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading();_context.next=3;return axios.get(\"\".concat(localserver,\"/search/\").concat(text)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 3:res=_context.sent;debug&&console.log(res.data);result=res?res.data.experiment:[];dispatch({type:SEARCH_EXPERIMENTS,payload:result});case 7:case\"end\":return _context.stop();}}},_callee);}));return function searchExperiments(_x){return _ref.apply(this,arguments);};}();var getSummaries=function getSummaries(){var experiments=state.experiments;for(var exp in experiments){var exp_name=experiments[exp].name;getExperimentSummary(exp_name);}};var getJobHistory=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(expid,job_name){var res,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoadingJobHistory();_context2.next=3;return axios.get(\"\".concat(localserver,\"/history/\").concat(expid,\"/\").concat(job_name)).catch(function(error){alert(error.message);});case 3:res=_context2.sent;debug&&console.log(res.data);result=res?res.data:null;dispatch({type:GET_JOB_HISTORY,payload:result});case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function getJobHistory(_x2,_x3){return _ref2.apply(this,arguments);};}();var getExperimentRuns=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(expid){var res,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoadingExperimentRuns();_context3.next=3;return axios.get(\"\".concat(localserver,\"/runs/\").concat(expid)).catch(function(error){alert(error.message);});case 3:res=_context3.sent;result=res?res.data:null;debug&&console.log(result);// console.log(result);\ndispatch({type:GET_EXPERIMENT_RUNS,payload:result});case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function getExperimentRuns(_x4){return _ref3.apply(this,arguments);};}();// Get Summary for Search item\nvar getExperimentSummary=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(expid){var res,summary;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:clearSummary(expid);setLoadingSummary(expid);_context4.next=4;return axios.get(\"\".concat(localserver,\"/summary/\").concat(expid)).catch(function(error){alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 4:res=_context4.sent;summary=res?res.data:null;debug&&console.log(summary);// console.log(summary);\n// console.log(state.summaries);\n//state.summaries.push({ key: expid, value: summary });\ndispatch({type:GET_EXPERIMENT_SUMMARY,payload:{expid:expid,summary:summary}//payload: { currentSummaries, summary, expid }\n});case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function getExperimentSummary(_x5){return _ref4.apply(this,arguments);};}();var getExperimentPerformanceMetrics=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(expid){var res,metrics;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:cleanPerformanceMetrics();setLoadingPerformanceMetrics();_context5.next=4;return axios.get(\"\".concat(localserver,\"/performance/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 4:res=_context5.sent;metrics=res?res.data:null;debug&&console.log(metrics);dispatch({type:GET_EXPERIMENT_PERFORMANCE,payload:metrics});case 8:case\"end\":return _context5.stop();}}},_callee5);}));return function getExperimentPerformanceMetrics(_x6){return _ref5.apply(this,arguments);};}();var clearSummary=function clearSummary(expid){dispatch({type:CLEAR_SUMMARY_EXP,payload:expid});};var getCurrentRunning=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var res,result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:setLoading();_context6.next=3;return axios.get(\"\".concat(localserver,\"/running/\")).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 3:res=_context6.sent;result=res?res.data.experiment:null;debug&&console.log(result);dispatch({type:CURRENT_RUNNING,payload:result});case 7:case\"end\":return _context6.stop();}}},_callee6);}));return function getCurrentRunning(){return _ref6.apply(this,arguments);};}();//const updateSelection = async () => {};\n// Get Experiment\nvar getExperiment=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(expid){var res,result;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:setLoading();//cleanGraphData();\n_context7.next=3;return axios.get(\"\".concat(localserver,\"/expinfo/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 3:res=_context7.sent;result=res?res.data:null;debug&&console.log(result);dispatch({type:GET_EXPERIMENT,payload:result});case 7:case\"end\":return _context7.stop();}}},_callee7);}));return function getExperiment(_x7){return _ref7.apply(this,arguments);};}();// Get Experiment Log Run\nvar getExperimentRun=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(expid){var res,result;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:setLoadingRun();_context8.next=3;return axios.get(\"\".concat(localserver,\"/exprun/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 3:res=_context8.sent;result=res?res.data:null;debug&&console.log(result);dispatch({type:GET_EXPERIMENT_RUN,payload:result});case 7:case\"end\":return _context8.stop();}}},_callee8);}));return function getExperimentRun(_x8){return _ref8.apply(this,arguments);};}();// Get Running State\nvar getRunningState=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(expid){var res,result;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:setLoadingState();_context9.next=3;return axios.get(\"\".concat(localserver,\"/ifrun/\").concat(expid)).catch(function(error){return alert(ERROR_MESSAGE+\"\\n\"+error.message);});case 3:res=_context9.sent;result=res?res.data:null;debug&&console.log(result);dispatch({type:GET_RUNNING_STATE,payload:result});case 7:case\"end\":return _context9.stop();}}},_callee9);}));return function getRunningState(_x9){return _ref9.apply(this,arguments);};}();var setCurrentCommand=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(command){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:// for change status\ndispatch({type:SET_CURRENT_COMMAND,payload:command});//return command;\ncase 1:case\"end\":return _context10.stop();}}},_callee10);}));return function setCurrentCommand(_x10){return _ref10.apply(this,arguments);};}();// Cleaning\nvar clearExperiments=function clearExperiments(){return dispatch({type:CLEAR_EXPERIMENTS});};//const cleanGraphData = () => dispatch({ type: CLEAN_GRAPH_DATA });\nvar cleanRunData=function cleanRunData(){return dispatch({type:CLEAN_RUN_DATA});};var cleanPerformanceMetrics=function cleanPerformanceMetrics(){return dispatch({type:CLEAN_PERFORMANCE_METRICS});};var cleanExperimentData=function cleanExperimentData(){return dispatch({type:CLEAN_EXPERIMENT_DATA});};// Set Loading\nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};var setLoadingRun=function setLoadingRun(){return dispatch({type:SET_LOADING_RUN});};var setLoadingState=function setLoadingState(){return dispatch({type:SET_LOADING_STATE});};var setLoadingSummary=function setLoadingSummary(summExpid){return dispatch({type:SET_LOADING_SUMMARY,payload:summExpid});};var setLoadingPerformanceMetrics=function setLoadingPerformanceMetrics(){return dispatch({type:LOADING_PERFORMANCE_METRICS});};var setLoadingJobHistory=function setLoadingJobHistory(){return dispatch({type:LOADING_JOB_HISTORY});};var setLoadingExperimentRuns=function setLoadingExperimentRuns(){return dispatch({type:LOADING_EXPERIMENT_RUNS});};// Action Things\nvar updateExperimentTimeStamp=function updateExperimentTimeStamp(timeStamp){//console.log(timeStamp);\ndispatch({type:UPDATE_EXPERIMENT_TS,payload:timeStamp});};// Updates for the Selection Tool\n// source: Tree, Graph\nvar updateCurrentSelectedTree=function updateCurrentSelectedTree(selectedJob,treedata){debug&&console.log(treedata);if(treedata){var currentNode={name:selectedJob,color:\"yellow\",source:\"Tree\"};var selectedNode=treedata.jobs.find(function(job){return job.id===currentNode.name;});currentNode.color=selectedNode.status_color;dispatch({type:UPDATE_SELECTED_JOBS,payload:currentNode});}};var updateCurrentSelectedGraph=function updateCurrentSelectedGraph(selectedJob,data){// console.log(data);\n// console.log(selectedJob);\nif(data){var currentNode={name:selectedJob,color:\"yellow\"};var selectedNode=data.nodes.find(function(node){return node.id===currentNode.name;});currentNode.color=selectedNode.status_color;dispatch({type:UPDATE_SELECTED_JOBS,payload:currentNode});}};var setAutoUpdateRun=function setAutoUpdateRun(value){return dispatch({type:SET_AUTOUPDATE_RUN,payload:value});};var activateSelectionMode=function activateSelectionMode(){return dispatch({type:ACTIVATE_SELECTION_MODE});};var deactivateSelectionMode=function deactivateSelectionMode(){return dispatch({type:DEACTIVATE_SELECTION_MODE});};var removeSelectedJob=function removeSelectedJob(name){return dispatch({type:REMOVE_SELECTED_JOB,payload:name});};return/*#__PURE__*/React.createElement(ExperimentContext.Provider,{value:{experiments:state.experiments,experiment:state.experiment,summaries:state.summaries,loadingSummary:state.loadingSummary,loading:state.loading,loadingRun:state.loadingRun,loadingState:state.loadingState,loadingPerformance:state.loadingPerformance,jobHistory:state.jobHistory,performancedata:state.performancedata,experimentRuns:state.experimentRuns,rundata:state.rundata,currentSelected:state.currentSelected,startAutoUpdateRun:state.startAutoUpdateRun,experimentRunning:state.experimentRunning,currentCommand:state.currentCommand,canSelect:state.canSelect,totalJobs:state.totalJobs,expectedLoadingTreeTime:state.expectedLoadingTreeTime,expectedLoadingQuickView:state.expectedLoadingQuickView,experimentRunDetailForTree:state.experimentRunDetailForTree,setAutoUpdateRun:setAutoUpdateRun,searchExperiments:searchExperiments,getCurrentRunning:getCurrentRunning,clearExperiments:clearExperiments,getExperiment:getExperiment,cleanPerformanceMetrics:cleanPerformanceMetrics,cleanRunData:cleanRunData,getExperimentRun:getExperimentRun,timeStampToDate:timeStampToDate,getRunningState:getRunningState,getExperimentPerformanceMetrics:getExperimentPerformanceMetrics,getExperimentSummary:getExperimentSummary,clearSummary:clearSummary,getSummaries:getSummaries,activateSelectionMode:activateSelectionMode,deactivateSelectionMode:deactivateSelectionMode,removeSelectedJob:removeSelectedJob,setCurrentCommand:setCurrentCommand,updateCurrentSelectedGraph:updateCurrentSelectedGraph,updateCurrentSelectedTree:updateCurrentSelectedTree,updateExperimentTimeStamp:updateExperimentTimeStamp,cleanExperimentData:cleanExperimentData,getJobHistory:getJobHistory,getExperimentRuns:getExperimentRuns}},props.children);};export default ExperimentState;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/experiment/ExperimentState.js"],"names":["React","useReducer","axios","ExperimentContext","ExperimentReducer","SEARCH_EXPERIMENTS","SET_LOADING","CLEAR_EXPERIMENTS","GET_EXPERIMENT","GET_EXPERIMENT_RUN","SET_LOADING_RUN","CLEAN_RUN_DATA","SET_AUTOUPDATE_RUN","SET_LOADING_STATE","GET_RUNNING_STATE","UPDATE_EXPERIMENT_TS","CURRENT_RUNNING","GET_EXPERIMENT_SUMMARY","CLEAR_SUMMARY_EXP","GET_EXPERIMENT_PERFORMANCE","CLEAN_PERFORMANCE_METRICS","ACTIVATE_SELECTION_MODE","DEACTIVATE_SELECTION_MODE","REMOVE_SELECTED_JOB","SET_CURRENT_COMMAND","UPDATE_SELECTED_JOBS","SET_LOADING_SUMMARY","CLEAN_EXPERIMENT_DATA","LOADING_PERFORMANCE_METRICS","GET_JOB_HISTORY","LOADING_JOB_HISTORY","LOADING_EXPERIMENT_RUNS","GET_EXPERIMENT_RUNS","AUTOSUBMIT_API_SOURCE","DEBUG","ERROR_MESSAGE","timeStampToDate","ExperimentState","props","initialState","experiments","summaries","experiment","totalJobs","jobHistory","experimentRuns","expectedLoadingTreeTime","expectedLoadingQuickView","loadingSummary","Map","loading","loadingPerformance","experimentRunning","rundata","performancedata","loadingRun","loadingState","loadingFilterTree","loadingExperimentRuns","currentCommand","currentSelected","startAutoUpdateRun","startAutoUpdateTreePkl","fancyTree","allowJobMonitor","canSelect","state","dispatch","localserver","debug","searchExperiments","text","setLoading","get","catch","error","alert","message","res","console","log","data","result","type","payload","getSummaries","exp","exp_name","name","getExperimentSummary","getJobHistory","expid","job_name","setLoadingJobHistory","getExperimentRuns","setLoadingExperimentRuns","clearSummary","setLoadingSummary","summary","getExperimentPerformanceMetrics","cleanPerformanceMetrics","setLoadingPerformanceMetrics","metrics","getCurrentRunning","getExperiment","getExperimentRun","setLoadingRun","getRunningState","setLoadingState","setCurrentCommand","command","clearExperiments","cleanRunData","cleanExperimentData","summExpid","updateExperimentTimeStamp","timeStamp","updateCurrentSelectedTree","selectedJob","treedata","currentNode","color","source","selectedNode","jobs","find","job","id","status_color","updateCurrentSelectedGraph","nodes","node","setAutoUpdateRun","value","activateSelectionMode","deactivateSelectionMode","removeSelectedJob","experimentRunDetailForTree","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ExperimentContext from \"./experimentContext\";\nimport ExperimentReducer from \"./experimentReducer\";\nimport {\n  SEARCH_EXPERIMENTS,\n  SET_LOADING,\n  CLEAR_EXPERIMENTS,\n  GET_EXPERIMENT,\n  //GET_TREE,\n  //SET_LOADING_TREE,\n  GET_EXPERIMENT_RUN,\n  SET_LOADING_RUN,\n  CLEAN_RUN_DATA,\n  SET_AUTOUPDATE_RUN,\n  SET_LOADING_STATE,\n  GET_RUNNING_STATE,\n  UPDATE_EXPERIMENT_TS,\n  CURRENT_RUNNING,\n  GET_EXPERIMENT_SUMMARY,\n  CLEAR_SUMMARY_EXP,\n  GET_EXPERIMENT_PERFORMANCE,\n  CLEAN_PERFORMANCE_METRICS,\n  ACTIVATE_SELECTION_MODE,\n  DEACTIVATE_SELECTION_MODE,\n  REMOVE_SELECTED_JOB,\n  SET_CURRENT_COMMAND,\n  UPDATE_SELECTED_JOBS,\n  SET_LOADING_SUMMARY,\n  CLEAN_EXPERIMENT_DATA,\n  LOADING_PERFORMANCE_METRICS,\n  GET_JOB_HISTORY,\n  LOADING_JOB_HISTORY,\n  LOADING_EXPERIMENT_RUNS,\n  GET_EXPERIMENT_RUNS,\n} from \"../types\";\n\nimport { AUTOSUBMIT_API_SOURCE, DEBUG, ERROR_MESSAGE } from \"../vars\";\n\nimport { timeStampToDate } from \"../utils\";\n\nconst ExperimentState = (props) => {\n  const initialState = {\n    experiments: [],\n    summaries: [],\n    experiment: {},\n    totalJobs: 0,\n    jobHistory: null,\n    experimentRuns: null,        \n    expectedLoadingTreeTime: 0,\n    expectedLoadingQuickView: 0,\n    loadingSummary: new Map(),\n    loading: false,\n    loadingPerformance: false,\n    experimentRunning: false,\n    rundata: null,\n    performancedata: null,\n    loadingRun: false,\n    loadingState: false,\n    loadingFilterTree: false,\n    loadingExperimentRuns: false,\n    currentCommand: null,\n    currentSelected: [],\n    startAutoUpdateRun: false,\n    startAutoUpdateTreePkl: false,\n    fancyTree: null,\n    allowJobMonitor: false,\n    canSelect: false,\n  };\n\n  const [state, dispatch] = useReducer(ExperimentReducer, initialState);\n\n  const localserver = AUTOSUBMIT_API_SOURCE;\n  //const localserver = \"http://84.88.185.94:8081\";\n  const debug = DEBUG;\n\n  // Search Experiments\n  const searchExperiments = async (text) => {\n    setLoading();\n    const res = await axios.get(`${localserver}/search/${text}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n    debug && console.log(res.data);\n    const result = res ? res.data.experiment : [];\n    dispatch({\n      type: SEARCH_EXPERIMENTS,\n      payload: result,\n    });\n  };\n\n  const getSummaries = () => {\n    const experiments = state.experiments;\n    for (var exp in experiments) {\n      var exp_name = experiments[exp].name;\n      getExperimentSummary(exp_name);\n    }\n  };\n\n  const getJobHistory = async (expid, job_name) => {\n    setLoadingJobHistory();\n    const res = await axios\n      .get(`${localserver}/history/${expid}/${job_name}`)\n      .catch((error) => {\n        alert(error.message);\n      });\n    debug && console.log(res.data);\n    const result = res ? res.data : null;\n    dispatch({\n      type: GET_JOB_HISTORY,\n      payload: result,\n    });\n  };\n\n\n\n  const getExperimentRuns = async (expid) => {\n    setLoadingExperimentRuns();\n    const res = await axios.get(`${localserver}/runs/${expid}`).catch((error) => {alert(error.message);});    \n    const result = res ? res.data : null;\n    debug && console.log(result);\n    // console.log(result);\n    dispatch({\n      type: GET_EXPERIMENT_RUNS,\n      payload: result,\n    })\n  }\n\n  // Get Summary for Search item\n  const getExperimentSummary = async (expid) => {\n    clearSummary(expid);\n    setLoadingSummary(expid);\n    const res = await axios.get(`${localserver}/summary/${expid}`).catch((error) => {alert(ERROR_MESSAGE + \"\\n\" + error.message);});\n    const summary = res ? res.data : null;\n    debug && console.log(summary);\n    // console.log(summary);\n    // console.log(state.summaries);\n    //state.summaries.push({ key: expid, value: summary });\n    dispatch({\n      type: GET_EXPERIMENT_SUMMARY,\n      payload: { expid: expid, summary: summary },\n      //payload: { currentSummaries, summary, expid }\n    });\n  };\n\n  const getExperimentPerformanceMetrics = async (expid) => {\n    cleanPerformanceMetrics();\n    setLoadingPerformanceMetrics();\n    const res = await axios.get(`${localserver}/performance/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n    const metrics = res ? res.data : null ;\n    debug && console.log(metrics);\n    dispatch({\n      type: GET_EXPERIMENT_PERFORMANCE,\n      payload: metrics,\n    });\n  };\n\n  const clearSummary = (expid) => {\n    dispatch({\n      type: CLEAR_SUMMARY_EXP,\n      payload: expid,\n    });\n  };\n\n  const getCurrentRunning = async () => {\n    setLoading();\n    const res = await axios.get(`${localserver}/running/`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n    const result = res ? res.data.experiment : null;\n    debug && console.log(result);\n    dispatch({\n      type: CURRENT_RUNNING,\n      payload: result,\n    });\n  };\n\n  //const updateSelection = async () => {};\n\n  // Get Experiment\n  const getExperiment = async (expid) => {\n    setLoading();\n    //cleanGraphData();\n    const res = await axios.get(`${localserver}/expinfo/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n    const result = res ? res.data : null;\n    debug && console.log(result);\n    dispatch({\n      type: GET_EXPERIMENT,\n      payload: result,\n    });\n  };\n\n  // Get Experiment Log Run\n  const getExperimentRun = async (expid) => {\n    setLoadingRun();\n    const res = await axios.get(`${localserver}/exprun/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n    const result = res ? res.data : null;\n    debug && console.log(result);\n    dispatch({\n      type: GET_EXPERIMENT_RUN,\n      payload: result,\n    });\n  };\n\n  // Get Running State\n  const getRunningState = async (expid) => {\n    setLoadingState();\n    const res = await axios.get(`${localserver}/ifrun/${expid}`).catch(error => alert(ERROR_MESSAGE + \"\\n\" + error.message));\n    const result = res ? res.data : null;\n    debug && console.log(result);\n    dispatch({\n      type: GET_RUNNING_STATE,\n      payload: result,\n    });\n  };\n\n  const setCurrentCommand = async (command) => {\n    // for change status\n    dispatch({\n      type: SET_CURRENT_COMMAND,\n      payload: command,\n    });\n    //return command;\n  };\n\n  // Cleaning\n  const clearExperiments = () => dispatch({ type: CLEAR_EXPERIMENTS });\n  //const cleanGraphData = () => dispatch({ type: CLEAN_GRAPH_DATA });\n\n  const cleanRunData = () => dispatch({ type: CLEAN_RUN_DATA });\n\n  const cleanPerformanceMetrics = () =>\n    dispatch({ type: CLEAN_PERFORMANCE_METRICS });\n\n  const cleanExperimentData = () => dispatch({ type: CLEAN_EXPERIMENT_DATA });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n  const setLoadingRun = () => dispatch({ type: SET_LOADING_RUN });\n  const setLoadingState = () => dispatch({ type: SET_LOADING_STATE });\n  const setLoadingSummary = (summExpid) =>\n    dispatch({ type: SET_LOADING_SUMMARY, payload: summExpid });\n  const setLoadingPerformanceMetrics = () =>\n    dispatch({ type: LOADING_PERFORMANCE_METRICS });\n  const setLoadingJobHistory = () => dispatch({ type: LOADING_JOB_HISTORY });\n  const setLoadingExperimentRuns = () => dispatch({ type: LOADING_EXPERIMENT_RUNS });\n  // Action Things\n  const updateExperimentTimeStamp = (timeStamp) => {\n    //console.log(timeStamp);\n    dispatch({ type: UPDATE_EXPERIMENT_TS, payload: timeStamp });\n  };\n\n  // Updates for the Selection Tool\n  // source: Tree, Graph\n  const updateCurrentSelectedTree = (selectedJob, treedata) => {\n    debug && console.log(treedata);\n    if (treedata) {\n      let currentNode = { name: selectedJob, color: \"yellow\", source: \"Tree\" };\n      const selectedNode = treedata.jobs.find(\n        (job) => job.id === currentNode.name\n      );\n      currentNode.color = selectedNode.status_color;\n      dispatch({\n        type: UPDATE_SELECTED_JOBS,\n        payload: currentNode,\n      });\n    }\n  };\n\n  const updateCurrentSelectedGraph = (selectedJob, data) => {\n    // console.log(data);\n    // console.log(selectedJob);\n    if (data) {\n      let currentNode = { name: selectedJob, color: \"yellow\" };\n      const selectedNode = data.nodes.find((node) => {\n        return node.id === currentNode.name;\n      });\n      currentNode.color = selectedNode.status_color;\n      dispatch({ type: UPDATE_SELECTED_JOBS, payload: currentNode });\n    }\n  };\n\n  const setAutoUpdateRun = (value) =>\n    dispatch({ type: SET_AUTOUPDATE_RUN, payload: value });\n\n  const activateSelectionMode = () =>\n    dispatch({ type: ACTIVATE_SELECTION_MODE });\n  const deactivateSelectionMode = () =>\n    dispatch({ type: DEACTIVATE_SELECTION_MODE });\n  const removeSelectedJob = (name) =>\n    dispatch({ type: REMOVE_SELECTED_JOB, payload: name });\n\n  return (\n    <ExperimentContext.Provider\n      value={{\n        experiments: state.experiments,\n        experiment: state.experiment,\n        summaries: state.summaries,\n        loadingSummary: state.loadingSummary,\n        loading: state.loading,\n        loadingRun: state.loadingRun,\n        loadingState: state.loadingState,\n        loadingPerformance: state.loadingPerformance,\n        jobHistory: state.jobHistory,\n        performancedata: state.performancedata,\n        experimentRuns: state.experimentRuns,\n        rundata: state.rundata,\n        currentSelected: state.currentSelected,\n        startAutoUpdateRun: state.startAutoUpdateRun,\n        experimentRunning: state.experimentRunning,\n        currentCommand: state.currentCommand,\n        canSelect: state.canSelect,\n        totalJobs: state.totalJobs,\n        expectedLoadingTreeTime: state.expectedLoadingTreeTime,\n        expectedLoadingQuickView: state.expectedLoadingQuickView,\n        experimentRunDetailForTree: state.experimentRunDetailForTree,        \n        setAutoUpdateRun,\n        searchExperiments,\n        getCurrentRunning,\n        clearExperiments,\n        getExperiment,\n        cleanPerformanceMetrics,\n        cleanRunData,\n        getExperimentRun,\n        timeStampToDate,\n        getRunningState,\n        getExperimentPerformanceMetrics,\n        getExperimentSummary,\n        clearSummary,\n        getSummaries,\n        activateSelectionMode,\n        deactivateSelectionMode,\n        removeSelectedJob,\n        setCurrentCommand,\n        updateCurrentSelectedGraph,\n        updateCurrentSelectedTree,\n        updateExperimentTimeStamp,\n        cleanExperimentData,\n        getJobHistory,\n        getExperimentRuns,\n      }}\n    >\n      {props.children}\n    </ExperimentContext.Provider>\n  );\n};\n\nexport default ExperimentState;\n"]},"metadata":{},"sourceType":"module"}