{"ast":null,"code":"import React,{useContext,Fragment}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import Spinner from\"../layout/Spinner\";import{secondsToDelta}from\"../context/utils\";var Performance=function Performance(){var experimentContext=useContext(ExperimentContext);var performancedata=experimentContext.performancedata,experiment=experimentContext.experiment,loadingPerformance=experimentContext.loadingPerformance;if(loadingPerformance===true){return/*#__PURE__*/React.createElement(Spinner,null);}if(!experiment||!performancedata){return/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"lead\"},\"Experiment not defined.\")));}// console.log(performancedata);\nvar ASYPD=performancedata.ASYPD,SYPD=performancedata.SYPD,JPSY=performancedata.JPSY,Parallelization=performancedata.Parallelization,CHSY=performancedata.CHSY,considered=performancedata.considered;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row px-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4 p-4\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Parallelization:\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary\"},Parallelization)),/*#__PURE__*/React.createElement(\"h5\",null,\"JPSY: \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary\"},JPSY)),/*#__PURE__*/React.createElement(\"h5\",null,\"SYPD: \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary\"},SYPD)),/*#__PURE__*/React.createElement(\"h5\",null,\"ASYPD: \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary\"},ASYPD)),/*#__PURE__*/React.createElement(\"h5\",null,\"CHSY: \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary\"},CHSY))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-8 p-3 scroll-y-jobs\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Considered: (\",considered.length,\")\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"#\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Job Name\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Queue\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Run\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"CHSY\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"JPSY\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Energy\"))),/*#__PURE__*/React.createElement(\"tbody\",null,considered.sort(function(a,b){return a.name>b.name?1:-1;}).map(function(item,index){return/*#__PURE__*/React.createElement(\"tr\",{key:item.name},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},index+1),/*#__PURE__*/React.createElement(\"td\",null,item.name),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"strong\",null,\" \",secondsToDelta(item.queue))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"strong\",null,secondsToDelta(item.running))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"strong\",null,item.CHSY)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"strong\",null,item.JPSY)),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"strong\",null,item.energy)));}))))),performancedata&&performancedata.warnings_job_data&&performancedata.warnings_job_data.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"row px-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-4\"},/*#__PURE__*/React.createElement(\"p\",null,\" \",\"There are some warnings about the calculations of performance metrics:\",\" \",/*#__PURE__*/React.createElement(\"button\",{\"data-target\":\"#warningsCollapse\",type:\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"warningsCollapse\",className:\"btn-sm btn-warning\",\"data-toggle\":\"collapse\"},\"Show warnings\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"collapse px-4\",id:\"warningsCollapse\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card card-body\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"ol\",null,performancedata.warnings_job_data.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{key:item},item);})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row px-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-4\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Metrics description:\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Parallelization\"),\": Total number of cores allocated for the run, per SIM.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"JPSY\"),\": Energy cost of a simulation, measured in Joules per simulated year.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"SYPD\"),\": Simulated years per day for the model in a 24 h period.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"ASYPD\"),\": Actual SYPD, this number should be lower than SYPD due to interruptions, queue wait time, data transfer or issues with the model workflow. This is collected by measuring the time between first submission and the date of arrival of the last history file on the storage file system.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"CHSY\"),\": Core hours per simulated year. This is measured as the product of the model runtime for 1 SY and the number of cores allocated. This is an average of the CHSY of all SIM jobs.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Considered\"),\": Scrollable list where each item in the list represents job information showing \",/*#__PURE__*/React.createElement(\"strong\",null,\"Job Name\"),\",\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,\"QUEUE\"),\" and \",/*#__PURE__*/React.createElement(\"strong\",null,\"RUNNING\"),\" time in\",\" \",/*#__PURE__*/React.createElement(\"i\",null,\"HH:mm:ss\"),\" format, \",/*#__PURE__*/React.createElement(\"strong\",null,\"CHSY\"),\", \",/*#__PURE__*/React.createElement(\"strong\",null,\"JPSY\"),\", and raw \",/*#__PURE__*/React.createElement(\"strong\",null,\"Energy\"),\" consumption for that job.\",\" \",/*#__PURE__*/React.createElement(\"i\",null,\"Note: Energy values are only collected for those jobs running on MareNostrum4 and using the latest version of Autosubmit. Subsequent development will expand this feature for other platforms.\")),/*#__PURE__*/React.createElement(\"p\",null,\"Visit\",\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://earth.bsc.es/gitlab/wuruchi/autosubmitreact/-/wikis/Performance-Metrics\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Performance Metrics Documentation\"),\" \",\"for more details.\"))));};export default Performance;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/Performance.js"],"names":["React","useContext","Fragment","ExperimentContext","Spinner","secondsToDelta","Performance","experimentContext","performancedata","experiment","loadingPerformance","ASYPD","SYPD","JPSY","Parallelization","CHSY","considered","length","sort","a","b","name","map","item","index","queue","running","energy","warnings_job_data"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport Spinner from \"../layout/Spinner\";\nimport { secondsToDelta } from \"../context/utils\";\n\nconst Performance = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const { performancedata, experiment, loadingPerformance } = experimentContext;\n\n  if (loadingPerformance === true) {\n    return <Spinner />;\n  }\n\n  if (!experiment || !performancedata) {\n    return (\n      <div className='row'>\n        <div className='col-12'>\n          <div className='lead'>Experiment not defined.</div>\n        </div>\n      </div>\n    );\n  }\n  // console.log(performancedata);\n  const {\n    ASYPD,\n    SYPD,\n    JPSY,\n    Parallelization,\n    CHSY,\n    considered,\n  } = performancedata;\n  return (\n    <Fragment>\n      <div className='row px-3'>\n        <div className='col-4 p-4'>\n          <h5>\n            Parallelization:{\" \"}\n            <span className='badge badge-secondary'>{Parallelization}</span>\n          </h5>\n          <h5>\n            JPSY: <span className='badge badge-secondary'>{JPSY}</span>\n          </h5>\n          <h5>\n            SYPD: <span className='badge badge-secondary'>{SYPD}</span>\n          </h5>\n          <h5>\n            ASYPD: <span className='badge badge-secondary'>{ASYPD}</span>\n          </h5>\n          <h5>\n            CHSY: <span className='badge badge-secondary'>{CHSY}</span>\n          </h5>\n          {/* <strong>considered: </strong> {considered} */}\n        </div>\n        <div className='col-8 p-3 scroll-y-jobs'>\n          <p className='lead'>Considered: ({considered.length})</p>\n          <table className='table'>\n            <thead>\n              <tr>\n                <th scope='col'>#</th>\n                <th scope='col'>Job Name</th>\n                <th scope='col'>Queue</th>\n                <th scope='col'>Run</th>\n                <th scope='col'>CHSY</th>\n                <th scope='col'>JPSY</th>\n                <th scope='col'>Energy</th>\n              </tr>\n            </thead>\n            <tbody>\n              {considered\n                .sort((a, b) => (a.name > b.name ? 1 : -1))\n                .map((item, index) => (\n                  <tr key={item.name}>\n                    <th scope='row'>{index + 1}</th>\n                    <td>{item.name}</td>\n                    <td>\n                      <strong> {secondsToDelta(item.queue)}</strong>\n                    </td>\n                    <td>\n                      <strong>{secondsToDelta(item.running)}</strong>\n                    </td>\n                    <td>\n                      <strong>{item.CHSY}</strong>\n                    </td>\n                    <td>\n                      <strong>{item.JPSY}</strong>\n                    </td>\n                    <td>\n                      <strong>{item.energy}</strong>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {performancedata &&\n        performancedata.warnings_job_data &&\n        performancedata.warnings_job_data.length > 0 && (\n          <div className='row px-3'>\n            <div className='col-12 px-4'>\n              <p>\n                {\" \"}\n                There are some warnings about the calculations of performance\n                metrics:{\" \"}\n                <button\n                  data-target='#warningsCollapse'\n                  type='button'\n                  aria-expanded='false'\n                  aria-controls='warningsCollapse'\n                  className='btn-sm btn-warning'\n                  data-toggle='collapse'\n                >\n                  Show warnings\n                </button>\n              </p>\n            </div>\n\n            <div className='collapse px-4' id='warningsCollapse'>\n              <div className='card card-body'>\n                <small>\n                  <ol>\n                    {performancedata.warnings_job_data.map((item) => (\n                      <li key={item}>{item}</li>\n                    ))}\n                  </ol>\n                </small>\n              </div>\n            </div>\n          </div>\n        )}\n\n      <div className='row px-3'>\n        <div className='col-12 px-4'>\n          <p className='lead'>Metrics description:</p>\n          <p>\n            <strong>Parallelization</strong>: Total number of cores allocated\n            for the run, per SIM.\n          </p>\n          <p>\n            <strong>JPSY</strong>: Energy cost of a simulation, measured in\n            Joules per simulated year.\n          </p>\n          <p>\n            <strong>SYPD</strong>: Simulated years per day for the model in a 24\n            h period.\n          </p>\n          <p>\n            <strong>ASYPD</strong>: Actual SYPD, this number should be lower\n            than SYPD due to interruptions, queue wait time, data transfer or\n            issues with the model workflow. This is collected by measuring the\n            time between first submission and the date of arrival of the last\n            history file on the storage file system.\n          </p>\n          <p>\n            <strong>CHSY</strong>: Core hours per simulated year. This is\n            measured as the product of the model runtime for 1 SY and the number\n            of cores allocated. This is an average of the CHSY of all SIM jobs.\n          </p>\n          <p>\n            <strong>Considered</strong>: Scrollable list where each item in the\n            list represents job information showing <strong>Job Name</strong>,{\" \"}\n            <strong>QUEUE</strong> and <strong>RUNNING</strong> time in{\" \"}\n            <i>HH:mm:ss</i> format, <strong>CHSY</strong>, <strong>JPSY</strong>\n            , and raw <strong>Energy</strong> consumption for that job.{\" \"}\n            <i>\n              Note: Energy values are only collected for those jobs running on\n              MareNostrum4 and using the latest version of Autosubmit.\n              Subsequent development will expand this feature for other\n              platforms.\n            </i>\n          </p>\n          <p>\n            Visit{\" \"}\n            <a\n              href='https://earth.bsc.es/gitlab/wuruchi/autosubmitreact/-/wikis/Performance-Metrics'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Performance Metrics Documentation\n            </a>{\" \"}\n            for more details.\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Performance;\n"]},"metadata":{},"sourceType":"module"}