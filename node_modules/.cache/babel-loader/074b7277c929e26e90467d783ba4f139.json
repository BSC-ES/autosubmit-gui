{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from\"react\";//import Experiment from \"../experiment/Experiment\";\nimport ExperimentColumn from\"../experiment/ExperimentColumn\";// import GraphRepresentation from '../experiment/GraphRepresentation';\nimport GraphNativeRep from\"../experiment/GraphNativeRep\";import JobSelection from\"../experiment/JobSelection\";import TreeNativeRep from\"../experiment/TreeNativeRep\";import LighterNativeRep from\"../experiment/LighterNativeRep\";import ExperimentContext from\"../context/experiment/experimentContext\";import StatsContext from\"../context/statistics/statsContext\";import GraphContext from\"../context/graph/graphContext\";import TreeContext from\"../context/tree/treeContext\";import LighterContext from\"../context/lighter/lighterContext\";import Selection from\"../experiment/Selection\";import SelectionTreeNode from\"../experiment/SelectionTreeNode\";import Running from\"../experiment/Running\";import JobMonitor from\"../experiment/JobMonitor\";import JobMonitorTree from\"../experiment/JobMonitorTree\";import Navigator from\"../experiment/Navigator\";import StatsSearch from\"../statistics/StatsSearch\";import JobSearcher from\"../experiment/JobSearcher\";import JobFilter from\"../experiment/JobFilter\";import WrapperList from\"../experiment/WrapperList\";import GraphControl from\"../experiment/GraphControl\";import LogControl from\"../experiment/LogControl\";import TreeControl from\"../experiment/TreeControl\";import LighterControl from\"../experiment/LighterControl\";import PerformanceControl from\"../experiment/PerformanceControl\";import Performance from\"../experiment/Performance\";// Main render component. Calls other component and supplies props if necessary.\nvar ExperimentCentral=function ExperimentCentral(_ref){var match=_ref.match;// Focus Logic\nvar expid=match.params.expid;// From custom URL\nvar resolve_action=match.params.action;var focus_graph=resolve_action&&resolve_action===\"graph\"?true:false;var focus_lighter=resolve_action&&resolve_action===\"light\"?true:false;//console.log(\"Focus: \" + focus_graph);\nvar classTree=focus_graph===true||focus_lighter===true?\"nav-link\":\"nav-link active\";var classGraph=focus_graph===true?\"nav-link active\":\"nav-link\";var classLighter=focus_lighter===true?\"nav-link active\":\"nav-link\";var classTabTree=focus_graph===true||focus_lighter===true?\"tab-pane fade\":\"tab-pane fade show active\";var classTabGraph=focus_graph===true?\"tab-pane fade show active\":\"tab-pane fade\";var classTabLighter=focus_lighter===true?\"tab-pane fade show active\":\"tab-pane fade\";//const isGraph = this.props.isGraph;\nvar experimentContext=useContext(ExperimentContext);var graphContext=useContext(GraphContext);var treeContext=useContext(TreeContext);var statsContext=useContext(StatsContext);var lighterContext=useContext(LighterContext);var loadingRun=experimentContext.loadingRun,cleanRunData=experimentContext.cleanRunData,getExperiment=experimentContext.getExperiment,getRunningState=experimentContext.getRunningState,getExperimentRun=experimentContext.getExperimentRun,getExperimentPerformanceMetrics=experimentContext.getExperimentPerformanceMetrics,startAutoUpdateRun=experimentContext.startAutoUpdateRun,setAutoUpdateRun=experimentContext.setAutoUpdateRun,rundata=experimentContext.rundata,experiment=experimentContext.experiment,canSelect=experimentContext.canSelect,experimentRunning=experimentContext.experimentRunning,updateCurrentSelectedGraph=experimentContext.updateCurrentSelectedGraph,updateCurrentSelectedTree=experimentContext.updateCurrentSelectedTree,cleanExperimentData=experimentContext.cleanExperimentData,totalJobs=experimentContext.totalJobs;var treedata=treeContext.treedata,updateSelectionTree=treeContext.updateSelectionTree,loadingTree=treeContext.loadingTree,getExperimentTreePkl=treeContext.getExperimentTreePkl,getExperimentTree=treeContext.getExperimentTree,cleanPklTreeData=treeContext.cleanPklTreeData,startAutoUpdateTreePkl=treeContext.startAutoUpdateTreePkl,pkltreechanges=treeContext.pkltreechanges,setFancyTree=treeContext.setFancyTree,cleanTreeData=treeContext.cleanTreeData,notificationTitleTree=treeContext.notificationTitleTree,setNotificationTitleTree=treeContext.setNotificationTitleTree;var cleanPklData=graphContext.cleanPklData,cleanNavData=graphContext.cleanNavData,getExperimentGraph=graphContext.getExperimentGraph,setVisData=graphContext.setVisData,getExperimentPkl=graphContext.getExperimentPkl,updateSelection=graphContext.updateSelection,setVisNetwork=graphContext.setVisNetwork,data=graphContext.data,visNetwork=graphContext.visNetwork,navToLatest=graphContext.navToLatest,navigateAfterLoadGraph=graphContext.navigateAfterLoadGraph,pklchanges=graphContext.pklchanges,loadingGraph=graphContext.loadingGraph,shouldUpdateGraph=graphContext.shouldUpdateGraph,startAutoUpdatePkl=graphContext.startAutoUpdatePkl,cleanGraphData=graphContext.cleanGraphData,current_grouped=graphContext.current_grouped,updateGraphSelectedNodes=graphContext.updateGraphSelectedNodes,notificationTitleGraph=graphContext.notificationTitleGraph,setNotificationTitleGraph=graphContext.setNotificationTitleGraph;var clearStats=statsContext.clearStats;var loadingView=lighterContext.loadingView,setLighterFancyTree=lighterContext.setLighterFancyTree,lightData=lighterContext.lightData,cleanLoadingLighterView=lighterContext.cleanLoadingLighterView,getLighterView=lighterContext.getLighterView;// if (experimentRunDetailForTree && currentRunId !== currentRunIdOnTree) {\n//   // If there is a run detected.        \n//   updateTreeContent(experimentRunDetailForTree, currentRunId);    \n// }\nuseEffect(function(){// Get experiment header data\ngetExperiment(expid);// Get experiment running status \ngetRunningState(expid);if(expid&&expid.length>0){// resolve_action depends on the URL call\n// Some type of switch might be useful here but more views are unlikely\nif(resolve_action){if(resolve_action===\"graph\"){getExperimentGraph(expid);}else if(resolve_action===\"light\"){getLighterView(expid);}}else{getExperimentTree(expid);}// Get performance metrics \ngetExperimentPerformanceMetrics(expid);}// getExperimentTree(expid);\nvar interval=setInterval(function(){return getRunningState(expid);},300000);return function(){clearInterval(interval);cleanExperimentData();};// eslint-disable-next-line\n},[]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"nav nav-tabs\",id:\"myTab\",role:\"tablist\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:classTree,id:\"treeview-tab\",\"data-toggle\":\"tab\",href:\"#treeview\",role:\"tab\",\"aria-controls\":\"treeview\",\"aria-selected\":\"false\"},\"Tree View\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:classGraph,id:\"graph-tab\",\"data-toggle\":\"tab\",href:\"#graph\",role:\"tab\",\"aria-controls\":\"graph\",\"aria-selected\":\"true\"},\"Graph\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:\"nav-link\",id:\"log-tab\",\"data-toggle\":\"tab\",href:\"#log\",role:\"tab\",\"aria-controls\":\"log\",\"aria-selected\":\"false\"},\"Log\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:\"nav-link\",id:\"stats-tab\",\"data-toggle\":\"tab\",href:\"#stats\",role:\"tab\",\"aria-controls\":\"stats\",\"aria-selected\":\"false\"},\"Statistics\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:\"nav-link\",id:\"performance-tab\",\"data-toggle\":\"tab\",href:\"#performance\",role:\"tab\",\"aria-controls\":\"performance\",\"aria-selected\":\"false\"},\"Performance\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:classLighter,id:\"lightview-tab\",\"data-toggle\":\"tab\",href:\"#lightview\",role:\"tab\",\"aria-controls\":\"lightview\",\"aria-selected\":\"false\"},\"Quick View\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-content\",id:\"myTabContent\"},/*#__PURE__*/React.createElement(\"div\",{className:classTabGraph,id:\"graph\",role:\"tabpanel\",\"aria-labelledby\":\"graph-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},experiment&&/*#__PURE__*/React.createElement(GraphControl,null),experiment&&data&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-header p-1\"},/*#__PURE__*/React.createElement(JobSearcher,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col pr-0\"},/*#__PURE__*/React.createElement(GraphNativeRep,{data:data,updateSelection:updateSelection,loadingGraph:loadingGraph,cleanGraphData:cleanGraphData,shouldUpdateGraph:shouldUpdateGraph,setVisData:setVisData,setVisNetwork:setVisNetwork,navToLatest:navToLatest,clearStats:clearStats,cleanNavData:cleanNavData,current_grouped:current_grouped,experimentRunning:experimentRunning,navigateAfterLoadGraph:navigateAfterLoadGraph,updateCurrentSelected:updateCurrentSelectedGraph,canSelect:canSelect,updateGraphSelectedNodes:updateGraphSelectedNodes})),/*#__PURE__*/React.createElement(\"div\",{className:canSelect===true?\"col-3 px-0\":\"col-3 pl-0\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"nav nav-tabs\",id:\"myTabSide\",role:\"tablist\"},/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:\"nav-link active\",id:\"selection-tab\",\"data-toggle\":\"tab\",href:\"#selection\",role:\"tab\",\"aria-controls\":\"selection\",\"aria-selected\":\"true\"},\"Selection\")),/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\"},/*#__PURE__*/React.createElement(\"a\",{className:\"nav-link\",id:\"wrapper-tab\",\"data-toggle\":\"tab\",href:\"#wrapper\",role:\"tab\",\"aria-controls\":\"treeview\",\"aria-selected\":\"false\"},\"Wrappers\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-content\",id:\"myTabSideContent\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tab-pane fade show active\",id:\"selection\",role:\"tabpanel\",\"aria-labelledby\":\"selection-tab\"},data&&/*#__PURE__*/React.createElement(Selection,null),startAutoUpdatePkl&&/*#__PURE__*/React.createElement(JobMonitor,{experiment:experiment,getExperimentPkl:getExperimentPkl,cleanPklData:cleanPklData,pklchanges:pklchanges,experimentRunning:experimentRunning,notificationTitleGraph:notificationTitleGraph,setNotificationTitleGraph:setNotificationTitleGraph})),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-pane fade show\",id:\"wrapper\",role:\"tabpanel\",\"aria-labelledby\":\"wrapper-tab\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(WrapperList,null))))),experiment&&data&&canSelect&&/*#__PURE__*/React.createElement(\"div\",{className:\"col-2 pl-0\"},/*#__PURE__*/React.createElement(JobSelection,{target:\"graph\",source:\"experiment\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-footer p-0\"},data&&visNetwork&&/*#__PURE__*/React.createElement(Navigator,null)))),/*#__PURE__*/React.createElement(\"div\",{className:classTabTree,id:\"treeview\",role:\"tabpanel\",\"aria-labelledby\":\"treeview-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},experiment&&/*#__PURE__*/React.createElement(TreeControl,null),experiment&&treedata&&/*#__PURE__*/React.createElement(\"div\",{className:\"card-header p-1\"},/*#__PURE__*/React.createElement(JobFilter,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:loadingTree===true?\"col\":\"col pr-0\"},/*#__PURE__*/React.createElement(TreeNativeRep,{treedata:treedata,loadingTree:loadingTree,cleanTreeData:cleanTreeData,setFancyTree:setFancyTree,updateSelectionTree:updateSelectionTree,updateCurrentSelected:updateCurrentSelectedTree,canSelect:canSelect,totalJobs:totalJobs})),treedata&&/*#__PURE__*/React.createElement(\"div\",{className:canSelect===true?\"col-3 px-0\":\"col-3 pl-0\"},/*#__PURE__*/React.createElement(SelectionTreeNode,null),startAutoUpdateTreePkl&&/*#__PURE__*/React.createElement(JobMonitorTree,{experiment:experiment,getExperimentTreePkl:getExperimentTreePkl,cleanPklTreeData:cleanPklTreeData,pkltreechanges:pkltreechanges,experimentRunning:experimentRunning,notificationTitleTree:notificationTitleTree,setNotificationTitleTree:setNotificationTitleTree})),experiment&&treedata&&canSelect&&/*#__PURE__*/React.createElement(\"div\",{className:\"col-2 pl-0\"},/*#__PURE__*/React.createElement(JobSelection,{target:\"tree\",source:\"experiment\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-pane fade\",id:\"log\",role:\"tabpanel\",\"aria-labelledby\":\"log-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},experiment&&/*#__PURE__*/React.createElement(LogControl,null),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-0\",style:experimentMinStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 p-0\"},startAutoUpdateRun&&/*#__PURE__*/React.createElement(Running,{rundata:rundata,loadingRun:loadingRun,cleanRunData:cleanRunData,getExperimentRun:getExperimentRun,experiment:experiment,startAutoUpdateRun:startAutoUpdateRun,setAutoUpdateRun:setAutoUpdateRun,experimentRunning:experimentRunning}),!startAutoUpdateRun&&/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 text-center\"},/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},\"Press\",\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},\"Show Log\"),\" \",\"to see the last 50 lines of the running log of this experiment. If the experiment is running, the log will update automatically.\"))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-pane fade\",id:\"stats\",role:\"tabpanel\",\"aria-labelledby\":\"stats-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card mt-2\",style:experimentMinStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header py-0 text-muted\"},/*#__PURE__*/React.createElement(\"small\",null,\"Statistics\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(StatsSearch,null))))),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-pane fade\",id:\"performance\",role:\"tabpanel\",\"aria-labelledby\":\"performance-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card mt-2\"},experiment&&/*#__PURE__*/React.createElement(PerformanceControl,null),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-1\"},experiment&&/*#__PURE__*/React.createElement(Performance,null)))),/*#__PURE__*/React.createElement(\"div\",{className:classTabLighter,id:\"lightview\",role:\"tabpanel\",\"aria-labelledby\":\"lightview-tab\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card mt-2\"},experiment&&/*#__PURE__*/React.createElement(LighterControl,null),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body p-1\"},experiment&&/*#__PURE__*/React.createElement(LighterNativeRep,{data:lightData,loadingView:loadingView,setLighterFancyTree:setLighterFancyTree,cleanLoadingLighterView:cleanLoadingLighterView}))))))),/*#__PURE__*/React.createElement(ExperimentColumn,{expidToken:expid}));};var experimentMinStyle={minHeight:\"100%\"};export default ExperimentCentral;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/pages/ExperimentCentral.js"],"names":["React","Fragment","useContext","useEffect","ExperimentColumn","GraphNativeRep","JobSelection","TreeNativeRep","LighterNativeRep","ExperimentContext","StatsContext","GraphContext","TreeContext","LighterContext","Selection","SelectionTreeNode","Running","JobMonitor","JobMonitorTree","Navigator","StatsSearch","JobSearcher","JobFilter","WrapperList","GraphControl","LogControl","TreeControl","LighterControl","PerformanceControl","Performance","ExperimentCentral","match","expid","params","resolve_action","action","focus_graph","focus_lighter","classTree","classGraph","classLighter","classTabTree","classTabGraph","classTabLighter","experimentContext","graphContext","treeContext","statsContext","lighterContext","loadingRun","cleanRunData","getExperiment","getRunningState","getExperimentRun","getExperimentPerformanceMetrics","startAutoUpdateRun","setAutoUpdateRun","rundata","experiment","canSelect","experimentRunning","updateCurrentSelectedGraph","updateCurrentSelectedTree","cleanExperimentData","totalJobs","treedata","updateSelectionTree","loadingTree","getExperimentTreePkl","getExperimentTree","cleanPklTreeData","startAutoUpdateTreePkl","pkltreechanges","setFancyTree","cleanTreeData","notificationTitleTree","setNotificationTitleTree","cleanPklData","cleanNavData","getExperimentGraph","setVisData","getExperimentPkl","updateSelection","setVisNetwork","data","visNetwork","navToLatest","navigateAfterLoadGraph","pklchanges","loadingGraph","shouldUpdateGraph","startAutoUpdatePkl","cleanGraphData","current_grouped","updateGraphSelectedNodes","notificationTitleGraph","setNotificationTitleGraph","clearStats","loadingView","setLighterFancyTree","lightData","cleanLoadingLighterView","getLighterView","length","interval","setInterval","clearInterval","experimentMinStyle","minHeight"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\n//import Experiment from \"../experiment/Experiment\";\nimport ExperimentColumn from \"../experiment/ExperimentColumn\";\n// import GraphRepresentation from '../experiment/GraphRepresentation';\nimport GraphNativeRep from \"../experiment/GraphNativeRep\";\nimport JobSelection from \"../experiment/JobSelection\";\nimport TreeNativeRep from \"../experiment/TreeNativeRep\";\nimport LighterNativeRep from \"../experiment/LighterNativeRep\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport StatsContext from \"../context/statistics/statsContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport TreeContext from \"../context/tree/treeContext\";\nimport LighterContext from \"../context/lighter/lighterContext\";\nimport Selection from \"../experiment/Selection\";\nimport SelectionTreeNode from \"../experiment/SelectionTreeNode\";\nimport Running from \"../experiment/Running\";\nimport JobMonitor from \"../experiment/JobMonitor\";\nimport JobMonitorTree from \"../experiment/JobMonitorTree\";\nimport Navigator from \"../experiment/Navigator\";\nimport StatsSearch from \"../statistics/StatsSearch\";\nimport JobSearcher from \"../experiment/JobSearcher\";\nimport JobFilter from \"../experiment/JobFilter\";\nimport WrapperList from \"../experiment/WrapperList\";\nimport GraphControl from \"../experiment/GraphControl\";\nimport LogControl from \"../experiment/LogControl\";\nimport TreeControl from \"../experiment/TreeControl\";\nimport LighterControl from \"../experiment/LighterControl\";\nimport PerformanceControl from \"../experiment/PerformanceControl\";\nimport Performance from \"../experiment/Performance\";\n\n// Main render component. Calls other component and supplies props if necessary.\nconst ExperimentCentral = ({ match }) => {\n  // Focus Logic\n  const expid = match.params.expid;\n  // From custom URL\n  const resolve_action = match.params.action;\n  const focus_graph =\n    resolve_action && resolve_action === \"graph\" ? true : false;\n  const focus_lighter =\n    resolve_action && resolve_action === \"light\" ? true : false;\n  //console.log(\"Focus: \" + focus_graph);\n  const classTree =\n    focus_graph === true || focus_lighter === true\n      ? \"nav-link\"\n      : \"nav-link active\";\n  const classGraph = focus_graph === true ? \"nav-link active\" : \"nav-link\";\n  const classLighter = focus_lighter === true ? \"nav-link active\" : \"nav-link\";\n  const classTabTree =\n    focus_graph === true || focus_lighter === true\n      ? \"tab-pane fade\"\n      : \"tab-pane fade show active\";\n  const classTabGraph =\n    focus_graph === true ? \"tab-pane fade show active\" : \"tab-pane fade\";\n  const classTabLighter =\n    focus_lighter === true ? \"tab-pane fade show active\" : \"tab-pane fade\";\n  //const isGraph = this.props.isGraph;\n  const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const treeContext = useContext(TreeContext);\n  const statsContext = useContext(StatsContext);\n  const lighterContext = useContext(LighterContext);\n  const {\n    loadingRun,\n    cleanRunData,\n    getExperiment,\n    getRunningState,\n    getExperimentRun,\n    getExperimentPerformanceMetrics,\n    startAutoUpdateRun,\n    setAutoUpdateRun,\n    rundata,\n    experiment,\n    canSelect,\n    experimentRunning,\n    updateCurrentSelectedGraph,\n    updateCurrentSelectedTree,\n    cleanExperimentData,\n    totalJobs,\n  } = experimentContext;\n\n  const {\n    treedata,\n    updateSelectionTree,\n    loadingTree,\n    getExperimentTreePkl,\n    getExperimentTree,\n    cleanPklTreeData,\n    startAutoUpdateTreePkl,\n    pkltreechanges,\n    setFancyTree,\n    cleanTreeData,\n    notificationTitleTree,\n    setNotificationTitleTree,\n  } = treeContext;\n\n  const {\n    cleanPklData,\n    cleanNavData,\n    getExperimentGraph,\n    setVisData,\n    getExperimentPkl,\n    updateSelection,\n    setVisNetwork,\n    data,\n    visNetwork,\n    navToLatest,\n    navigateAfterLoadGraph,\n    pklchanges,\n    loadingGraph,\n    shouldUpdateGraph,\n    startAutoUpdatePkl,\n    cleanGraphData,\n    current_grouped,\n    updateGraphSelectedNodes,\n    notificationTitleGraph,\n    setNotificationTitleGraph,\n  } = graphContext;\n\n  const { clearStats } = statsContext;\n\n  const {\n    loadingView,\n    setLighterFancyTree,\n    lightData,\n    cleanLoadingLighterView,\n    getLighterView,\n  } = lighterContext;\n\n  // if (experimentRunDetailForTree && currentRunId !== currentRunIdOnTree) {\n  //   // If there is a run detected.        \n  //   updateTreeContent(experimentRunDetailForTree, currentRunId);    \n  // }\n\n  useEffect(() => {\n    // Get experiment header data\n    getExperiment(expid);\n    // Get experiment running status \n    getRunningState(expid);\n    if (expid && expid.length > 0) {\n      // resolve_action depends on the URL call\n      // Some type of switch might be useful here but more views are unlikely\n      if (resolve_action) {\n        if (resolve_action === \"graph\") {\n          getExperimentGraph(expid);\n        } else if (resolve_action === \"light\") {\n          getLighterView(expid);\n        }\n      } else {\n        getExperimentTree(expid);\n      }\n      // Get performance metrics \n      getExperimentPerformanceMetrics(expid);\n    }\n    // getExperimentTree(expid);\n    const interval = setInterval(() => getRunningState(expid), 300000);\n    return () => {\n      clearInterval(interval);\n      cleanExperimentData();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Fragment>\n      <div className='row'>\n        <div className='col-12'>\n          <ul className='nav nav-tabs' id='myTab' role='tablist'>\n            <li className='nav-item'>\n              <a\n                className={classTree}\n                id='treeview-tab'\n                data-toggle='tab'\n                href='#treeview'\n                role='tab'\n                aria-controls='treeview'\n                aria-selected='false'\n              >\n                Tree View\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className={classGraph}\n                id='graph-tab'\n                data-toggle='tab'\n                href='#graph'\n                role='tab'\n                aria-controls='graph'\n                aria-selected='true'\n              >\n                Graph\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link'\n                id='log-tab'\n                data-toggle='tab'\n                href='#log'\n                role='tab'\n                aria-controls='log'\n                aria-selected='false'\n              >\n                Log\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link'\n                id='stats-tab'\n                data-toggle='tab'\n                href='#stats'\n                role='tab'\n                aria-controls='stats'\n                aria-selected='false'\n              >\n                Statistics\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className='nav-link'\n                id='performance-tab'\n                data-toggle='tab'\n                href='#performance'\n                role='tab'\n                aria-controls='performance'\n                aria-selected='false'\n              >\n                Performance\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a\n                className={classLighter}\n                id='lightview-tab'\n                data-toggle='tab'\n                href='#lightview'\n                role='tab'\n                aria-controls='lightview'\n                aria-selected='false'\n              >\n                Quick View\n              </a>\n            </li>\n          </ul>\n          <div className='tab-content' id='myTabContent'>\n            <div\n              className={classTabGraph}\n              id='graph'\n              role='tabpanel'\n              aria-labelledby='graph-tab'\n            >\n              <div className='card'>\n                {experiment && <GraphControl />}\n                {experiment && data && (\n                  <div className='card-header p-1'>\n                    <JobSearcher />\n                  </div>\n                )}\n                <div className='row'>\n                  <div className='col pr-0'>\n                    <GraphNativeRep\n                      data={data}\n                      updateSelection={updateSelection}\n                      loadingGraph={loadingGraph}\n                      cleanGraphData={cleanGraphData}\n                      shouldUpdateGraph={shouldUpdateGraph}\n                      setVisData={setVisData}\n                      setVisNetwork={setVisNetwork}\n                      navToLatest={navToLatest}\n                      clearStats={clearStats}\n                      cleanNavData={cleanNavData}\n                      current_grouped={current_grouped}\n                      experimentRunning={experimentRunning}\n                      navigateAfterLoadGraph={navigateAfterLoadGraph}\n                      updateCurrentSelected={updateCurrentSelectedGraph}\n                      canSelect={canSelect}\n                      updateGraphSelectedNodes={updateGraphSelectedNodes}\n                    />\n                  </div>\n                  <div\n                    className={canSelect === true ? \"col-3 px-0\" : \"col-3 pl-0\"}\n                  >\n                    <ul className='nav nav-tabs' id='myTabSide' role='tablist'>\n                      <li className='nav-item'>\n                        <a\n                          className='nav-link active'\n                          id='selection-tab'\n                          data-toggle='tab'\n                          href='#selection'\n                          role='tab'\n                          aria-controls='selection'\n                          aria-selected='true'\n                        >\n                          Selection\n                        </a>\n                      </li>\n                      <li className='nav-item'>\n                        <a\n                          className='nav-link'\n                          id='wrapper-tab'\n                          data-toggle='tab'\n                          href='#wrapper'\n                          role='tab'\n                          aria-controls='treeview'\n                          aria-selected='false'\n                        >\n                          Wrappers\n                        </a>\n                      </li>\n                    </ul>\n                    <div className='tab-content' id='myTabSideContent'>\n                      <div\n                        className='tab-pane fade show active'\n                        id='selection'\n                        role='tabpanel'\n                        aria-labelledby='selection-tab'\n                      >\n                        {data && <Selection />}\n                        {startAutoUpdatePkl && (\n                          <JobMonitor\n                            experiment={experiment}\n                            getExperimentPkl={getExperimentPkl}\n                            cleanPklData={cleanPklData}\n                            pklchanges={pklchanges}\n                            experimentRunning={experimentRunning}\n                            notificationTitleGraph={notificationTitleGraph}\n                            setNotificationTitleGraph={\n                              setNotificationTitleGraph\n                            }\n                          />\n                        )}\n                      </div>\n                      <div\n                        className='tab-pane fade show'\n                        id='wrapper'\n                        role='tabpanel'\n                        aria-labelledby='wrapper-tab'\n                      >\n                        <div>\n                          <WrapperList />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {experiment && data && canSelect && (\n                    <div className='col-2 pl-0'>\n                      <JobSelection target={\"graph\"} source={\"experiment\"} />\n                    </div>\n                  )}\n                </div>\n                <div className='card-footer p-0'>\n                  {data && visNetwork && <Navigator />}\n                </div>\n              </div>\n            </div>\n            <div\n              className={classTabTree}\n              id='treeview'\n              role='tabpanel'\n              aria-labelledby='treeview-tab'\n            >\n              <div className='card'>\n                {experiment && <TreeControl />}\n                {experiment && treedata && (\n                  <div className='card-header p-1'>\n                    <JobFilter />\n                  </div>\n                )}\n                <div className='row'>\n                  <div className={loadingTree === true ? \"col\" : \"col pr-0\"}>\n                    <TreeNativeRep\n                      treedata={treedata}\n                      loadingTree={loadingTree}\n                      cleanTreeData={cleanTreeData}\n                      setFancyTree={setFancyTree}\n                      updateSelectionTree={updateSelectionTree}\n                      updateCurrentSelected={updateCurrentSelectedTree}\n                      canSelect={canSelect}\n                      totalJobs={totalJobs}\n                    />\n                  </div>\n                  {treedata && (\n                    <div\n                      className={\n                        canSelect === true ? \"col-3 px-0\" : \"col-3 pl-0\"\n                      }\n                    >\n                      <SelectionTreeNode />\n                      {startAutoUpdateTreePkl && (\n                        <JobMonitorTree\n                          experiment={experiment}\n                          getExperimentTreePkl={getExperimentTreePkl}\n                          cleanPklTreeData={cleanPklTreeData}\n                          pkltreechanges={pkltreechanges}\n                          experimentRunning={experimentRunning}\n                          notificationTitleTree={notificationTitleTree}\n                          setNotificationTitleTree={setNotificationTitleTree}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                  {experiment && treedata && canSelect && (\n                    <div className='col-2 pl-0'>\n                      <JobSelection target={\"tree\"} source={\"experiment\"} />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div\n              className='tab-pane fade'\n              id='log'\n              role='tabpanel'\n              aria-labelledby='log-tab'\n            >\n              <div className='card'>\n                {experiment && <LogControl />}\n                <div className='card-body p-0' style={experimentMinStyle}>\n                  <div className='col-12 p-0'>\n                    {startAutoUpdateRun && (\n                      <Running\n                        rundata={rundata}\n                        loadingRun={loadingRun}\n                        cleanRunData={cleanRunData}\n                        getExperimentRun={getExperimentRun}\n                        experiment={experiment}\n                        startAutoUpdateRun={startAutoUpdateRun}\n                        setAutoUpdateRun={setAutoUpdateRun}\n                        experimentRunning={experimentRunning}\n                      />\n                    )}\n                    {!startAutoUpdateRun && (\n                      <div className='row'>\n                        <div className='col-12 text-center'>\n                          <p className='lead'>\n                            Press{\" \"}\n                            <span className='badge badge-dark'>Show Log</span>{\" \"}\n                            to see the last 50 lines of the running log of this\n                            experiment. If the experiment is running, the log\n                            will update automatically.\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className='tab-pane fade'\n              id='stats'\n              role='tabpanel'\n              aria-labelledby='stats-tab'\n            >\n              <div className='card mt-2' style={experimentMinStyle}>\n                <div className='card-header py-0 text-muted'>\n                  <small>Statistics</small>\n                </div>\n                <div className='card-body p-1'>\n                  <div className='col-12'>\n                    <StatsSearch />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className='tab-pane fade'\n              id='performance'\n              role='tabpanel'\n              aria-labelledby='performance-tab'\n            >\n              <div className='card mt-2'>\n                {experiment && <PerformanceControl />}\n                <div className='card-body p-1'>\n                  {experiment && <Performance />}\n                </div>\n              </div>\n            </div>\n            <div\n              className={classTabLighter}\n              id='lightview'\n              role='tabpanel'\n              aria-labelledby='lightview-tab'\n            >\n              <div className='card mt-2'>\n                {experiment && <LighterControl />}\n                <div className='card-body p-1'>\n                  {experiment && (\n                    <LighterNativeRep\n                      data={lightData}\n                      loadingView={loadingView}\n                      setLighterFancyTree={setLighterFancyTree}\n                      cleanLoadingLighterView={cleanLoadingLighterView}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ExperimentColumn expidToken={expid} />\n    </Fragment>\n  );\n};\n\nconst experimentMinStyle = {\n  minHeight: \"100%\",\n};\n\nexport default ExperimentCentral;\n"]},"metadata":{},"sourceType":"module"}