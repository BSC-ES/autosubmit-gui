{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Running.js\";\nimport React, { Component, Fragment } from 'react';\nimport Spinner from \"../layout/Spinner\";\n\nclass Running extends Component {\n  componentWillUnmount() {\n    this.props.cleanRunData();\n  }\n\n  render() {\n    const _this$props$rundata = this.props.rundata,\n          content = _this$props$rundata.content,\n          error = _this$props$rundata.error,\n          error_message = _this$props$rundata.error_message,\n          found = _this$props$rundata.found,\n          logfile = _this$props$rundata.logfile,\n          lastModified = _this$props$rundata.lastModified,\n          timeStamp = _this$props$rundata.timeStamp;\n    if (this.props.loadingRun) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n\n    if (this.props.rundata === null) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Press the button to show the Running State.\"));\n    }\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, error_message);\n    }\n\n    if (!found) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Running log not found. This experiment might not be currently running on Autosubmit.\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, logfile), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Last Modified: \", lastModified), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"TimeStamp: \", timeStamp)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default Running;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Running.js"],"names":["React","Component","Fragment","Spinner","Running","componentWillUnmount","props","cleanRunData","render","rundata","content","error","error_message","found","logfile","lastModified","timeStamp","loadingRun"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,oBAAoB,GAAG;AACnB,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,gCAOgB,KAAKF,KAAL,CAAWG,OAP3B;AAAA,UACGC,OADH,uBACGA,OADH;AAAA,UAEGC,KAFH,uBAEGA,KAFH;AAAA,UAGGC,aAHH,uBAGGA,aAHH;AAAA,UAIGC,KAJH,uBAIGA,KAJH;AAAA,UAKGC,OALH,uBAKGA,OALH;AAAA,UAMGC,YANH,uBAMGA,YANH;AAAA,UAOGC,SAPH,uBAOGA,SAPH;AASL,QAAI,KAAKV,KAAL,CAAWW,UAAf,EAA2B,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;;AAC3B,QAAI,KAAKX,KAAL,CAAWG,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADF,CADF;AAKD;;AACH,QAAIE,KAAJ,EAAW;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,aAAN,CADJ;AAGH;;AACD,QAAI,CAACC,KAAL,EAAY;AACR,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGADJ;AAGH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,OAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmBC,YAAnB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmBC,SAAnB,CAAH,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,OADL,CAJJ,CADJ;AAUH;;AA5C2B;;AA+ChC,eAAeN,OAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Spinner from \"../layout/Spinner\";\n\nclass Running extends Component {\n    \n    componentWillUnmount() {\n        this.props.cleanRunData();\n    }\n    \n    render() {\n        const { content,\n                error,\n                error_message,\n                found,\n                logfile,\n                lastModified,\n                timeStamp} = this.props.rundata;\n        \n        if (this.props.loadingRun) return <Spinner />;\n        if (this.props.rundata === null){\n            return (\n              <Fragment>\n                <div>Press the button to show the Running State.</div>\n              </Fragment>\n            );       \n          }\n        if (error) {\n            return (\n                <div>{error_message}</div>\n            );\n        }\n        if (!found) {\n            return (\n                <div>Running log not found. This experiment might not be currently running on Autosubmit.</div>\n            );\n        }\n\n        return (\n            <div>\n                <h1>{logfile}</h1>\n                <p>Last Modified: {lastModified}</p>\n                <p><small>TimeStamp: {timeStamp}</small></p>\n                <div>\n                    {content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Running;"]},"metadata":{},"sourceType":"module"}