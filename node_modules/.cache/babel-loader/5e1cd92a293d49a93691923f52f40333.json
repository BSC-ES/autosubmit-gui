{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/App.js\";\nimport React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Experiments from \"./components/experiment/Experiments\";\nimport Experiment from \"./components/experiment/Experiment\";\nimport Search from \"./components/experiment/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      experiments: [],\n      experiment: {},\n      loading: false,\n      loadingGraph: false,\n      alert: null,\n      data: {},\n      showGraph: false\n    };\n\n    this.cleanParent = () => {\n      console.log('Called Clean Parent');\n      this.setState({\n        data: {},\n        loading: false,\n        showGraph: false\n      });\n    };\n\n    this.searchExperiments = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"http://84.88.185.94:8888/search/\".concat(text)); //console.log(res.data);\n\n      this.setState({\n        experiments: res.data.experiment,\n        loading: false\n      }); //console.log(this.state.experiments);\n    };\n\n    this.getExperiment = async expid => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(\"http://84.88.185.94:8888/expinfo/\".concat(expid));\n      this.setState({\n        experiment: res.data,\n        loading: false\n      });\n    };\n\n    this.getExperimentGraph = async expid => {\n      this.setState({\n        loading: true\n      });\n      console.log(expid);\n      const res = await axios.get(\"http://84.88.185.94:8888/graph/\".concat(expid));\n      console.log(res.data);\n      this.setState({\n        data: res.data,\n        loading: false,\n        showGraph: !res.data.error\n      });\n    };\n\n    this.clearExperiments = () => this.setState({\n      experiments: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          experiments = _this$state.experiments,\n          experiment = _this$state.experiment,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchExperiments: this.searchExperiments,\n        clearExperiments: this.clearExperiments,\n        showClear: experiments.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Experiments, {\n        loading: loading,\n        experiments: experiments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/experiment/:expid\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Experiment, Object.assign({}, props, {\n        getExperimentGraph: this.getExperimentGraph,\n        data: this.state.data,\n        cleanParent: this.cleanParent,\n        showGraph: this.state.showGraph,\n        getExperiment: this.getExperiment,\n        experiment: experiment,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"myNetwork\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App; // OLD APP\n// import React, { Component } from 'react';\n// class AutosubmitIndex extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       expid : null,\n//       contacts: [],\n//       nodes: [],\n//       total : [],\n//       errorMessage : ''\n//     }\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   handleSubmit(event) {\n//     fetch('http://84.88.185.94:5002/graph/'+this.state.expid)\n//     .then(res => res.json())\n//     .then((data) => {\n//       this.setState({ contacts: data['edges'], nodes : data['nodes'], total : data, errorMessage: 'SUCCESFUL' })\n//     })\n//     .catch(console.log);\n//     // console.log(honk)\n//     // console.log(error)\n//     //this.setState({shouldShow: true});\n//     event.preventDefault();\n//   }\n//   handleChange(event) {\n//     //this.setState({shouldShow: false});\n//     this.setState({expid: event.target.value});\n//   }\n//   render() {\n//     return(\n//       <div>\n//         <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Experiment Id:\n//           <input type=\"text\" value={this.state.expid} onChange={this.handleChange}></input>\n//         </label>\n//         <input type=\"submit\" value=\"Submit\"></input>\n//         </form>\n//         <h3>{this.state.errorMessage}</h3>\n//         <Graph nodes_prop={this.state.total.nodes} edges_prop={this.state.total.edges} expid={this.state.expid}/>\n//       </div>\n//     );\n//   }\n// }\n// export default AutosubmitIndex;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/App.js"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","Navbar","Experiments","Experiment","Search","Alert","About","axios","App","state","experiments","experiment","loading","loadingGraph","alert","data","showGraph","cleanParent","console","log","setState","searchExperiments","text","res","get","getExperiment","expid","getExperimentGraph","error","clearExperiments","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Experiments from \"./components/experiment/Experiments\";\nimport Experiment from \"./components/experiment/Experiment\";\nimport Search from \"./components/experiment/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    experiments: [],\n    experiment: {},\n    loading: false,\n    loadingGraph: false,\n    alert: null,\n    data: {},\n    showGraph: false\n  };\n\n  cleanParent = () => {\n    console.log('Called Clean Parent')\n    this.setState({ data: {}, loading: false, showGraph: false});\n  };\n  // Search Github users\n  searchExperiments = async text => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(`http://84.88.185.94:8888/search/${text}`);\n    //console.log(res.data);\n    this.setState({ experiments: res.data.experiment, loading: false });\n    //console.log(this.state.experiments);\n  };\n\n  // Get single Experiment\n  getExperiment = async expid => {\n    this.setState({ loading: true });\n\n    const res = await axios.get(`http://84.88.185.94:8888/expinfo/${expid}`);\n\n    this.setState({ experiment: res.data, loading: false });\n  };\n\n  getExperimentGraph = async expid => {\n    this.setState({ loading: true });\n    console.log(expid);\n    const res = await axios.get(`http://84.88.185.94:8888/graph/${expid}`);\n    console.log(res.data);\n    this.setState({ data: res.data, loading: false, showGraph: !res.data.error });\n  };\n\n  // Clear users from state\n  clearExperiments = () => this.setState({ experiments: [], loading: false });\n\n  // Set Alert\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n  render() {\n    const { experiments, experiment, loading } = this.state;\n\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert alert={this.state.alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchExperiments={this.searchExperiments}\n                      clearExperiments={this.clearExperiments}\n                      showClear={experiments.length > 0 ? true : false}\n                      setAlert={this.setAlert}\n                    />\n                    <Experiments loading={loading} experiments={experiments} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path='/experiment/:expid'\n                render={props => (\n                  <Fragment>\n                    <Experiment\n                      {...props}\n                      getExperimentGraph={this.getExperimentGraph}\n                      data={this.state.data}\n                      cleanParent={this.cleanParent}\n                      showGraph={this.state.showGraph}\n                      getExperiment={this.getExperiment}\n                      experiment={experiment}\n                      loading={loading}\n                    />\n                    <div id='myNetwork' />\n                  </Fragment>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// OLD APP\n// import React, { Component } from 'react';\n\n// class AutosubmitIndex extends Component {\n\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       expid : null,\n//       contacts: [],\n//       nodes: [],\n//       total : [],\n//       errorMessage : ''\n//     }\n\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   handleSubmit(event) {\n\n//     fetch('http://84.88.185.94:5002/graph/'+this.state.expid)\n//     .then(res => res.json())\n//     .then((data) => {\n//       this.setState({ contacts: data['edges'], nodes : data['nodes'], total : data, errorMessage: 'SUCCESFUL' })\n//     })\n//     .catch(console.log);\n//     // console.log(honk)\n//     // console.log(error)\n//     //this.setState({shouldShow: true});\n//     event.preventDefault();\n//   }\n\n//   handleChange(event) {\n//     //this.setState({shouldShow: false});\n//     this.setState({expid: event.target.value});\n//   }\n\n//   render() {\n\n//     return(\n//       <div>\n//         <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Experiment Id:\n//           <input type=\"text\" value={this.state.expid} onChange={this.handleChange}></input>\n//         </label>\n//         <input type=\"submit\" value=\"Submit\"></input>\n//         </form>\n//         <h3>{this.state.errorMessage}</h3>\n//         <Graph nodes_prop={this.state.total.nodes} edges_prop={this.state.total.edges} expid={this.state.expid}/>\n//       </div>\n//     );\n\n//   }\n// }\n\n// export default AutosubmitIndex;\n"]},"metadata":{},"sourceType":"module"}