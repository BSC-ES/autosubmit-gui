{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Running.js\";\nimport React, { Component, Fragment } from 'react';\nimport Spinner from \"../layout/Spinner\";\n\nclass Running extends Component {\n  componentWillUnmount() {\n    this.props.cleanRunData();\n  }\n\n  render() {\n    if (this.props.loadingRun) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n\n    if (this.props.rundata === null) {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Press the button to show the Running State.\"));\n    }\n\n    const _this$props$rundata = this.props.rundata,\n          content = _this$props$rundata.content,\n          error = _this$props$rundata.error,\n          error_message = _this$props$rundata.error_message,\n          found = _this$props$rundata.found,\n          logfile = _this$props$rundata.logfile,\n          lastModified = _this$props$rundata.lastModified,\n          timeStamp = _this$props$rundata.timeStamp;\n    const logitems = content.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, item));\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, error_message);\n    }\n\n    if (!found) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Running log not found. This experiment might not be currently running on Autosubmit.\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Logfile: \", logfile), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Last Modified: \", lastModified), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"TimeStamp: \", timeStamp)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, logitems));\n  }\n\n}\n\nexport default Running;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Running.js"],"names":["React","Component","Fragment","Spinner","Running","componentWillUnmount","props","cleanRunData","render","loadingRun","rundata","content","error","error_message","found","logfile","lastModified","timeStamp","logitems","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,oBAAoB,GAAG;AACnB,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAGL,QAAI,KAAKF,KAAL,CAAWG,UAAf,EAA2B,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;;AAC3B,QAAI,KAAKH,KAAL,CAAWI,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADF,CADF;AAKD;;AAVE,gCAkBQ,KAAKJ,KAAL,CAAWI,OAlBnB;AAAA,UAYGC,OAZH,uBAYGA,OAZH;AAAA,UAaLC,KAbK,uBAaLA,KAbK;AAAA,UAcLC,aAdK,uBAcLA,aAdK;AAAA,UAeLC,KAfK,uBAeLA,KAfK;AAAA,UAgBLC,OAhBK,uBAgBLA,OAhBK;AAAA,UAiBLC,YAjBK,uBAiBLA,YAjBK;AAAA,UAkBLC,SAlBK,uBAkBLA,SAlBK;AAoBL,UAAMC,QAAQ,GAAGP,OAAO,CAACQ,GAAR,CAAaC,IAAD,IACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADa,CAAjB;;AAIA,QAAIR,KAAJ,EAAW;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,aAAN,CADJ;AAGH;;AACD,QAAI,CAACC,KAAL,EAAY;AACR,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGADJ;AAGH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcC,OAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmBC,YAAnB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmBC,SAAnB,CAAH,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,QADL,CAJJ,CADJ;AAUH;;AAnD2B;;AAsDhC,eAAed,OAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Spinner from \"../layout/Spinner\";\n\nclass Running extends Component {\n    \n    componentWillUnmount() {\n        this.props.cleanRunData();\n    }\n    \n    render() {\n        \n        \n        if (this.props.loadingRun) return <Spinner />;\n        if (this.props.rundata === null){\n            return (\n              <Fragment>\n                <div>Press the button to show the Running State.</div>\n              </Fragment>\n            );       \n          }\n\n        const { content,\n        error,\n        error_message,\n        found,\n        logfile,\n        lastModified,\n        timeStamp} = this.props.rundata;\n\n        const logitems = content.map((item) =>\n            <li>{item}</li>\n        );\n        \n        if (error) {\n            return (\n                <div>{error_message}</div>\n            );\n        }\n        if (!found) {\n            return (\n                <div>Running log not found. This experiment might not be currently running on Autosubmit.</div>\n            );\n        }\n\n        return (\n            <div>\n                <h3>Logfile: {logfile}</h3>\n                <p>Last Modified: {lastModified}</p>\n                <p><small>TimeStamp: {timeStamp}</small></p>\n                <div>\n                    {logitems}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Running;"]},"metadata":{},"sourceType":"module"}