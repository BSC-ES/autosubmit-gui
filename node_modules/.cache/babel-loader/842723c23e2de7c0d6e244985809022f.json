{"ast":null,"code":"import React,{useContext,Fragment}from\"react\";import ExperimentContext from\"../context/experiment/experimentContext\";import GraphContext from\"../context/graph/graphContext\";import JobHistory from\"./JobHistory\";import{secondsToDelta}from\"../context/utils\";import{DEBUG,statusCodeToStyle}from\"../context/vars\";var Selection=function Selection(){var experimentContext=useContext(ExperimentContext);var graphContext=useContext(GraphContext);var experiment=experimentContext.experiment;var data=graphContext.data,selection=graphContext.selection;// const { model, branch, hpc } = experiment;\n//var currentSelection = \"Node: \"\n// const navigateTo = e => {\n//     e.preventDefault();\n//     navToLatestCompleted();\n// };\nvar currentNode=\"\";var selectedNode=null;var parentList=[];var childrenList=[];var copyContent=function copyContent(inputname){return function(e){e.preventDefault();DEBUG&&console.log(\"Sending \"+inputname);window.copyToClip(inputname);};};if(selection&&data&&data.nodes){//console.log(\"Current selection \" + selection);\nselection.map(function(node){return currentNode=node;});selectedNode=data.nodes.find(function(node){return node.id===currentNode;});if(selectedNode&&selectedNode.parent_list&&selectedNode.parent_list.length>0){parentList=data.nodes.filter(function(node){return selectedNode.parent_list.indexOf(node.id)>=0;});//console.log(parentList);\n}if(selectedNode&&selectedNode.children_list&&selectedNode.children_list.length>0){childrenList=data.nodes.filter(function(node){return selectedNode.children_list.indexOf(node.id)>=0;});//console.log(childrenList);\n}// If selection mode is activated\n//console.log(\"Selected node\")\n//console.log(\"Data: \" + selectedNode.id + \" \" + selectedNode.platform_name)\n}return/*#__PURE__*/React.createElement(Fragment,null,selectedNode&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white bg-info\",style:experimentStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center p-0\",style:headerCard},/*#__PURE__*/React.createElement(\"div\",{className:\"mh-100 px-0 mx-0\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,selectedNode.id),\" \"),/*#__PURE__*/React.createElement(JobHistory,{source:\"graph\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body py-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Start:\"),\" \",selectedNode.date)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"End:\"),\" \",selectedNode.date_plus))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Section:\"),\" \",selectedNode.section)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Member:\"),\" \",selectedNode.member)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Chunk:\"),\" \",selectedNode.chunk)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Platform:\"),\" \",selectedNode.platform_name&&selectedNode.platform_name,\" \",!selectedNode.platform_name&&experiment.hpc,selectedNode.rm_id&&/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"strong\",null,\" \\xA0 Id: \"),selectedNode.rm_id))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Processors:\"),\" \",selectedNode.processors)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Wallclock:\"),\" \",selectedNode.wallclock)))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},\" \",selectedNode.minutes_queue>=0&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge text-center\",style:{width:\"100%\",backgroundColor:selectedNode.status===\"SUBMITTED\"?\"cyan\":\"pink\",color:\"black\"}},/*#__PURE__*/React.createElement(\"small\",null,selectedNode.status===\"SUBMITTED\"?\"Submit\":\"Queue\",\":\"),\" \",secondsToDelta(selectedNode.minutes_queue))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},selectedNode.minutes>=0&&[\"RUNNING\",\"COMPLETED\",\"FAILED\"].includes(selectedNode.status)&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success text-center ml-1\",style:{width:\"100%\"}},/*#__PURE__*/React.createElement(\"small\",null,\"Run:\"),\" \",secondsToDelta(selectedNode.minutes),\" \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row py-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6\"},/*#__PURE__*/React.createElement(\"span\",{className:\"badge text-center\",style:{width:\"100%\",backgroundColor:selectedNode.status_color,color:selectedNode.status===\"RUNNING\"?\"white\":\"black\"}},\"Status:\",/*#__PURE__*/React.createElement(\"strong\",null,\" \",selectedNode.status))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 px-1\"},selectedNode.children_list&&selectedNode.children_list.length>0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-dark btn-sm btn-block\",\"data-toggle\":\"modal\",\"data-target\":\"#childrenList\",type:\"button\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Out:\"),\" \",selectedNode.children)),selectedNode.children_list&&selectedNode.children_list.length===0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",type:\"button\",disabled:true},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Out:\"),\" \",selectedNode.children))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 px-1\"},selectedNode.parent_list&&selectedNode.parent_list.length>0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",\"data-toggle\":\"modal\",\"data-target\":\"#parentList\",type:\"button\"},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"In:\"),\" \",selectedNode.parents)),selectedNode.parent_list&&selectedNode.parent_list.length===0&&/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-dark btn-block\",type:\"button\",disabled:true},/*#__PURE__*/React.createElement(\"small\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"In:\"),\" \",selectedNode.parents)))),/*#__PURE__*/React.createElement(\"div\",null,selectedNode.out&&/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-0\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:copyContent(\"g_out\"),className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control py-0\",type:\"text\",value:selectedNode.out,id:\"g_out\",readOnly:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn-sm btn-light py-0\",value:\"Copy out\"})))))),selectedNode.err&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12 px-0\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:copyContent(\"g_err\"),className:\"form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control py-0\",type:\"text\",value:selectedNode.err,id:\"g_err\",readOnly:true}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-light btn-sm py-0\",value:\"Copy err\"}))))))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,selectedNode.submit!==null&&/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Submit:\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},selectedNode.submit))),selectedNode.start!==null&&/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Start:\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},selectedNode.start))),selectedNode.finish!==null&&/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Finish:\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark\"},selectedNode.finish)))))))))))),!selectedNode&&data&&/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card text-white bg-info\",style:experimentStyle},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header text-center py-0\"},/*#__PURE__*/React.createElement(\"small\",null,\"Here goes the Job Id\")),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"small\",null,\"Select a Node to see more information.\")))))),selectedNode&&childrenList&&childrenList.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"childrenList\",tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"childrenListTitle\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-list\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:\"childrenListTitle\"},\"Children List\"),/*#__PURE__*/React.createElement(\"button\",{className:\"close\",type:\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},/*#__PURE__*/React.createElement(\"ul\",null,childrenList.map(function(item,index){return/*#__PURE__*/React.createElement(\"li\",{key:index},item.id,\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge\",style:statusCodeToStyle(item.status_code)},item.status));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"))))),selectedNode&&parentList&&parentList.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"parentList\",tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"parentListTitle\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-list\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:\"parentListTitle\"},\"Parent List\"),/*#__PURE__*/React.createElement(\"button\",{className:\"close\",type:\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},/*#__PURE__*/React.createElement(\"ul\",null,parentList.map(function(item,index){return/*#__PURE__*/React.createElement(\"li\",{key:index},item.id,\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge\",style:statusCodeToStyle(item.status_code)},item.status));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-dismiss\":\"modal\"},\"Close\"))))));};var experimentStyle={height:360};var headerCard={height:30};export default Selection;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/Selection.js"],"names":["React","useContext","Fragment","ExperimentContext","GraphContext","JobHistory","secondsToDelta","DEBUG","statusCodeToStyle","Selection","experimentContext","graphContext","experiment","data","selection","currentNode","selectedNode","parentList","childrenList","copyContent","inputname","e","preventDefault","console","log","window","copyToClip","nodes","map","node","find","id","parent_list","length","filter","indexOf","children_list","experimentStyle","headerCard","date","date_plus","section","member","chunk","platform_name","hpc","rm_id","processors","wallclock","minutes_queue","width","backgroundColor","status","color","minutes","includes","status_color","children","parents","out","err","submit","start","finish","item","index","status_code","height"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport JobHistory from \"./JobHistory\";\nimport { secondsToDelta } from \"../context/utils\";\nimport { DEBUG, statusCodeToStyle } from \"../context/vars\";\n\nconst Selection = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const graphContext = useContext(GraphContext);\n  const { experiment } = experimentContext;\n  const { data, selection } = graphContext;\n  // const { model, branch, hpc } = experiment;\n  //var currentSelection = \"Node: \"\n\n  // const navigateTo = e => {\n  //     e.preventDefault();\n  //     navToLatestCompleted();\n  // };\n\n  let currentNode = \"\";\n  let selectedNode = null;\n  let parentList = [];\n  let childrenList = [];\n\n\n  const copyContent = (inputname) => (e) => {\n    e.preventDefault();\n    DEBUG && console.log(\"Sending \" + inputname);\n    window.copyToClip(inputname);\n  };\n\n  if (selection && data && data.nodes) {\n    //console.log(\"Current selection \" + selection);\n    selection.map((node) => (currentNode = node));\n\n    selectedNode = data.nodes.find((node) => node.id === currentNode);\n    if (selectedNode && selectedNode.parent_list && selectedNode.parent_list.length > 0){\n      parentList = data.nodes.filter((node) => selectedNode.parent_list.indexOf(node.id) >= 0);\n      //console.log(parentList);\n    }\n    if (selectedNode && selectedNode.children_list && selectedNode.children_list.length > 0){\n      childrenList = data.nodes.filter((node) => selectedNode.children_list.indexOf(node.id) >= 0);\n      //console.log(childrenList);\n    }\n\n    \n    // If selection mode is activated\n    //console.log(\"Selected node\")\n    //console.log(\"Data: \" + selectedNode.id + \" \" + selectedNode.platform_name)\n  }\n  return (\n    <Fragment>\n      {selectedNode && (\n        <Fragment>\n          <div className='row'>\n            <div className='col-12'>\n              <div className='card text-white bg-info' style={experimentStyle}>\n                <div className='card-header text-center p-0' style={headerCard}>\n                  <div className='mh-100 px-0 mx-0'>\n                    <small>\n                      <strong>{selectedNode.id}</strong>{\" \"}\n                      </small>\n                      <JobHistory source='graph' />\n                    \n                  </div>\n                </div>\n                <div className='card-body py-0'>\n                  <div className='row'>\n                    <div className='col-md-6'>\n                      <small>\n                        <strong>Start:</strong> {selectedNode.date}\n                      </small>\n                    </div>\n                    <div className='col-md-6'>\n                      <small>\n                        <strong>End:</strong> {selectedNode.date_plus}\n                      </small>\n                    </div>\n                  </div>\n                  <div>\n                    <div className='row'>\n                      <div className='col-12'>\n                        <small>\n                          <strong>Section:</strong> {selectedNode.section}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className='row'>\n                      <div className='col-md-6'>\n                        <small>\n                          <strong>Member:</strong> {selectedNode.member}\n                        </small>\n                      </div>\n                      <div className='col-md-6'>\n                        <small>\n                          <strong>Chunk:</strong> {selectedNode.chunk}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className='row'>\n                      <div className='col-12'>\n                        <small>\n                          <strong>Platform:</strong>{\" \"}\n                          {selectedNode.platform_name &&\n                            selectedNode.platform_name}{\" \"}\n                          {!selectedNode.platform_name && experiment.hpc}\n                          {selectedNode.rm_id && (\n                            <span>\n                              <strong> &nbsp; Id: </strong>\n                              {selectedNode.rm_id}\n                            </span>\n                          )}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div>\n                                        <small><strong>Priority:</strong> {selectedNode.priority}</small>\n                                    </div> */}\n                  <div>\n                    <div className='row'>\n                      <div className='col-6'>\n                        <small>\n                          <strong>Processors:</strong> {selectedNode.processors}\n                        </small>\n                      </div>\n                      <div className='col-6'>\n                        <small>\n                          <strong>Wallclock:</strong> {selectedNode.wallclock}\n                        </small>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='row'>\n                    <div className='col-md-6'>\n                      {\" \"}\n                      {selectedNode.minutes_queue >= 0 && (\n                        <span\n                          className='badge text-center'\n                          style={{\n                            width: \"100%\",\n                            backgroundColor:\n                              selectedNode.status === \"SUBMITTED\"\n                                ? \"cyan\"\n                                : \"pink\",\n                            color: \"black\",\n                          }}\n                        >\n                          <small>\n                            {selectedNode.status === \"SUBMITTED\"\n                              ? \"Submit\"\n                              : \"Queue\"}\n                            :\n                          </small>{\" \"}\n                          {secondsToDelta(selectedNode.minutes_queue)}\n                          {/* <small>min.</small> */}\n                        </span>\n                      )}\n                    </div>\n                    <div className='col-md-6'>\n                      {selectedNode.minutes >= 0 &&\n                        [\"RUNNING\", \"COMPLETED\", \"FAILED\"].includes(\n                          selectedNode.status\n                        ) && (\n                          <span\n                            className='badge badge-success text-center ml-1'\n                            style={{ width: \"100%\" }}\n                          >\n                            <small>Run:</small>{\" \"}\n                            {secondsToDelta(selectedNode.minutes)}{\" \"}\n                            {/* <small>min.</small> */}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n\n                  <div className='row py-1'>\n                    <div className='col-md-6'>\n                      <span\n                        className='badge text-center'\n                        style={{\n                          width: \"100%\",\n                          backgroundColor: selectedNode.status_color,\n                          color:\n                            selectedNode.status === \"RUNNING\"\n                              ? \"white\"\n                              : \"black\",\n                        }}\n                      >\n                        Status:\n                        <strong> {selectedNode.status}</strong>\n                      </span>\n                    </div>\n                    <div className='col-md-3 px-1'>\n                      {selectedNode.children_list &&\n                        selectedNode.children_list.length > 0 && (\n                          <button\n                            className='btn btn-dark btn-sm btn-block'\n                            data-toggle='modal'\n                            data-target='#childrenList'\n                            type='button'\n                          >\n                            <small>\n                              <strong>Out:</strong> {selectedNode.children}\n                            </small>\n                          </button>\n                        )}\n                      {selectedNode.children_list &&\n                        selectedNode.children_list.length === 0 && (\n                          <button\n                            className='btn-sm btn-dark btn-block'\n                            type='button'\n                            disabled\n                          >\n                            <small>\n                              <strong>Out:</strong> {selectedNode.children}\n                            </small>\n                          </button>\n                        )}\n                    </div>\n                    <div className='col-md-3 px-1'>\n                      {selectedNode.parent_list &&\n                        selectedNode.parent_list.length > 0 && (\n                          <button\n                            className='btn-sm btn-dark btn-block'\n                            data-toggle='modal'\n                            data-target='#parentList'\n                            type='button'\n                          >\n                            <small>\n                              <strong>In:</strong> {selectedNode.parents}\n                            </small>\n                          </button>\n                        )}\n                      {selectedNode.parent_list &&\n                        selectedNode.parent_list.length === 0 && (\n                          <button\n                            className='btn-sm btn-dark btn-block'\n                            type='button'\n                            disabled\n                          >\n                            <small>\n                              <strong>In:</strong> {selectedNode.parents}\n                            </small>\n                          </button>\n                        )}\n                    </div>\n                  </div>\n                  <div>\n                    {selectedNode.out && (\n                      <div className='row'>\n                        <div className='col-12 px-0'>\n                          <form\n                            onSubmit={copyContent(\"g_out\")}\n                            className='form'\n                          >\n                            <div className='input-group input-group-sm'>\n                              <input\n                                className='form-control py-0'\n                                type='text'\n                                value={selectedNode.out}\n                                id='g_out'\n                                readOnly\n                              />\n                              <div className='input-group-append'>\n                                <input\n                                  type='submit'\n                                  className='btn-sm btn-light py-0'\n                                  value='Copy out'\n                                />\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    )}\n\n                    {selectedNode.err && (\n                      <div className='row mt-1'>\n                        <div className='col-12 px-0'>\n                          <form\n                            onSubmit={copyContent(\"g_err\")}\n                            className='form'\n                          >\n                            <div className='input-group input-group-sm'>\n                              <input\n                                className='form-control py-0'\n                                type='text'\n                                value={selectedNode.err}\n                                id='g_err'\n                                readOnly\n                              />\n                              <div className='input-group-append'>\n                                <input\n                                  type='submit'\n                                  className='btn btn-light btn-sm py-0'\n                                  value='Copy err'\n                                />\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  <div className='row'>\n                    <div className='col'>\n                      <table>\n                        <tbody>\n                          {selectedNode.submit !== null && (\n                            <tr>\n                              <td>\n                                <small>Submit:</small>\n                              </td>\n                              <td>\n                                <span className='badge badge-dark'>\n                                  {selectedNode.submit}\n                                </span>\n                              </td>\n                            </tr>\n                          )}\n                          {selectedNode.start !== null && (\n                            <tr>\n                              <td>\n                                <small>Start:</small>\n                              </td>\n                              <td>\n                                <span className='badge badge-dark'>\n                                  {selectedNode.start}\n                                </span>\n                              </td>\n                            </tr>\n                          )}\n                          {selectedNode.finish !== null && (\n                            <tr>\n                              <td>\n                                <small>Finish:</small>\n                              </td>\n                              <td>\n                                <span className='badge badge-dark'>\n                                  {selectedNode.finish}\n                                </span>\n                              </td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n      {!selectedNode && data && (\n        <div className='row'>\n          <div className='col-12'>\n            <div className='card text-white bg-info' style={experimentStyle}>\n              <div className='card-header text-center py-0'>\n                <small>Here goes the Job Id</small>\n              </div>\n              <div className='card-body'>\n                <div className='text-center'>\n                  <small>Select a Node to see more information.</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {selectedNode &&\n        childrenList &&\n        childrenList.length > 0 && (\n          <div\n            className='modal fade'\n            id='childrenList'\n            tabIndex='-1'\n            role='dialog'\n            aria-labelledby='childrenListTitle'\n            aria-hidden='true'\n          >\n            <div className='modal-dialog modal-dialog-list' role='document'>\n              <div className='modal-content'>\n                <div className='modal-header'>\n                  <h5 className='modal-title' id='childrenListTitle'>\n                    Children List\n                  </h5>\n                  <button\n                    className='close'\n                    type='button'\n                    data-dismiss='modal'\n                    aria-label='Close'\n                  >\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  <ul>\n                    {childrenList.map((item, index) => (\n                      <li key={index}>{item.id} <span className=\"badge\" style={statusCodeToStyle(item.status_code)}>{item.status}</span></li>\n                    ))}\n                  </ul>\n                </div>\n                <div className='modal-footer'>\n                  <button\n                    type='button'\n                    className='btn btn-secondary'\n                    data-dismiss='modal'\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      {selectedNode &&\n        parentList &&\n        parentList.length > 0 && (\n          <div\n            className='modal fade'\n            id='parentList'\n            tabIndex='-1'\n            role='dialog'\n            aria-labelledby='parentListTitle'\n            aria-hidden='true'\n          >\n            <div className='modal-dialog modal-dialog-list' role='document'>\n              <div className='modal-content'>\n                <div className='modal-header'>\n                  <h5 className='modal-title' id='parentListTitle'>\n                    Parent List\n                  </h5>\n                  <button\n                    className='close'\n                    type='button'\n                    data-dismiss='modal'\n                    aria-label='Close'\n                  >\n                    <span aria-hidden='true'>&times;</span>\n                  </button>\n                </div>\n                <div className='modal-body'>\n                  <ul>\n                    {parentList.map((item, index) => (\n                      <li key={index}>{item.id} <span className=\"badge\" style={statusCodeToStyle(item.status_code)}>{item.status}</span></li>\n                    ))}\n                  </ul>\n                </div>\n                <div className='modal-footer'>\n                  <button\n                    type='button'\n                    className='btn btn-secondary'\n                    data-dismiss='modal'\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nconst experimentStyle = {\n  height: 360,\n};\n\nconst headerCard = {\n  height: 30,\n};\n\nexport default Selection;\n"]},"metadata":{},"sourceType":"module"}