{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Experiment.js\";\nimport React, { Fragment, useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiment = ({\n  expidToken\n}) => {\n  const experimentContext = useContext(ExperimentContext);\n  const timeStampToDate = experimentContext.timeStampToDate,\n        getExperiment = experimentContext.getExperiment,\n        getExperimentGraph = experimentContext.getExperimentGraph,\n        setAutoUpdatePkl = experimentContext.setAutoUpdatePkl,\n        loading = experimentContext.loading,\n        experiment = experimentContext.experiment,\n        enabledGraphSearch = experimentContext.enabledGraphSearch,\n        data = experimentContext.data;\n  useEffect(() => {\n    getExperiment(expidToken); // eslint-disable-next-line\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  };\n\n  const onJobMonitor = e => {\n    e.preventDefault();\n    setAutoUpdatePkl();\n  }; // const cleanParentLocal = () => {\n  //   console.log('Exp clean ')\n  //   cleanParent();\n  // };\n\n\n  const expid = experiment.expid,\n        owner = experiment.owner,\n        owner_id = experiment.owner_id,\n        path = experiment.path,\n        time_last_access = experiment.time_last_access,\n        time_last_mod = experiment.time_last_mod,\n        description = experiment.description,\n        version = experiment.version,\n        updateTime = experiment.updateTime,\n        running = experiment.running,\n        error = experiment.error,\n        error_message = experiment.error_message,\n        pkl_timestamp = experiment.pkl_timestamp;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Back To Search\"), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, expid, \" \", running && React.createElement(\"span\", {\n    className: \"text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" - RUNNING - \"), !running && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" - NOT RUNNING - \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Description: \", description), error && React.createElement(\"pre\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, error_message), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Version: \", version, \"  |  SleepTime: \", updateTime)), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Owner: \", owner_id, \" \", owner), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Last Access: \", time_last_access), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Last Modified: \", time_last_mod), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Path: \", path), pkl_timestamp && React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Pkl: \", timeStampToDate(pkl_timestamp))), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Show Graph\",\n    className: \"btn btn-success btn-block\",\n    disabled: !enabledGraphSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), running && data && React.createElement(\"form\", {\n    onSubmit: onJobMonitor,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Start Job Monitor\",\n    className: \"btn btn-dark btn-block\",\n    disabled: !enabledGraphSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))));\n};\n\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/experiment/Experiment.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Link","ExperimentContext","Experiment","expidToken","experimentContext","timeStampToDate","getExperiment","getExperimentGraph","setAutoUpdatePkl","loading","experiment","enabledGraphSearch","data","onSubmit","e","preventDefault","expid","onJobMonitor","owner","owner_id","path","time_last_access","time_last_mod","description","version","updateTime","running","error","error_message","pkl_timestamp"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst Experiment = ({ expidToken }) => {\n  const experimentContext = useContext(ExperimentContext); \n  const { timeStampToDate, getExperiment, getExperimentGraph, setAutoUpdatePkl, loading, experiment, enabledGraphSearch, data } = experimentContext;\n\n  useEffect(() => {\n    getExperiment(expidToken);\n    // eslint-disable-next-line\n  }, []);\n  \n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  };\n\n  const onJobMonitor = e => {\n    e.preventDefault();\n    setAutoUpdatePkl();\n  }\n\n  // const cleanParentLocal = () => {\n  //   console.log('Exp clean ')\n  //   cleanParent();\n  // };\n\n  const {\n    expid,\n    owner,\n    owner_id,\n    path,\n    time_last_access,\n    time_last_mod,\n    description,\n    version,\n    updateTime,\n    running,\n    error,\n    error_message,\n    pkl_timestamp,\n  } = experiment;\n\n  if (loading)  return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back To Search\n      </Link>    \n      <div className='card text-center'>\n        <div>\n            <h1>{expid} {running && <span className='text-success'> - RUNNING - </span>}{!running && <span className='text-danger'> - NOT RUNNING - </span>}</h1>\n            <p>Description: {description}</p>\n            {error && <pre className=\"text-danger\">{error_message}</pre>}\n            <small>Version: {version}  |  SleepTime: {updateTime}</small>\n        </div>\n        <div className='badge badge-light'>\n          Owner: {owner_id} {owner}\n        </div>\n        <div className='badge badge-light'>\n          Last Access: {time_last_access}\n        </div>\n        <div className='badge badge-light'>\n          Last Modified: {time_last_mod}\n        </div>\n        <div className='badge badge-light'>\n          Path: {path}\n        </div>\n        {pkl_timestamp && <div className='badge badge-light'>\n          Pkl: {timeStampToDate(pkl_timestamp)}\n        </div>}\n        \n      </div>      \n      \n      <div className='card grid-2'>\n        <form onSubmit={onSubmit} className='form'>\n          <input\n            type='submit'\n            value='Show Graph'\n            className='btn btn-success btn-block'\n            disabled={!enabledGraphSearch}\n          />\n        </form>\n        {running && data &&\n          <form onSubmit={onJobMonitor} className='form'>\n            <input\n              type='submit'\n              value='Start Job Monitor'\n              className='btn btn-dark btn-block'\n              disabled={!enabledGraphSearch}\n            />\n        </form>\n        }\n      </div>\n      \n    </Fragment>\n  );\n}\n\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}