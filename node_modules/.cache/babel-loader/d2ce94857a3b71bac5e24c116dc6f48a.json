{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/FileStatus.js\";\nimport React, { Component } from 'react';\n\nclass FileStatus extends Component {\n  componentDidMount() {\n    this.props.getFileStatus();\n    this.interval = setInterval(() => this.props.getFileStatus(), 300000); // Every 300 seconds\n  }\n\n  componentWillUnmount() {\n    this.props.cleanFileStatusData();\n    clearInterval(this.interval);\n  }\n\n  render() {\n    if (this.props.esarchiveStatus) {\n      const {\n        avg_bandwidth,\n        avg_latency,\n        bandwidth_warning,\n        current_bandwidth,\n        current_latency,\n        datetime,\n        error,\n        error_message,\n        latency_warning,\n        response_time,\n        response_warning,\n        status\n      } = this.props.esarchiveStatus;\n      const badge_style = status === \"ONLINE\" ? \"badge badge-success\" : \"badge badge-secondary\";\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-brand ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: badge_style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, status));\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-brand ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 51\n        }\n      }, \"UNKNOWN\"));\n    }\n  }\n\n}\n\nexport default FileStatus;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/FileStatus.js"],"names":["React","Component","FileStatus","componentDidMount","props","getFileStatus","interval","setInterval","componentWillUnmount","cleanFileStatusData","clearInterval","render","esarchiveStatus","avg_bandwidth","avg_latency","bandwidth_warning","current_bandwidth","current_latency","datetime","error","error_message","latency_warning","response_time","response_warning","status","badge_style"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAEjCE,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,aAAX;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKH,KAAL,CAAWC,aAAX,EAAP,EAAmC,MAAnC,CAA3B,CAFiB,CAEsD;AACxE;;AAEDG,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,KAAL,CAAWK,mBAAX;AACAC,IAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWQ,eAAf,EAA+B;AAC7B,YAAM;AACJC,QAAAA,aADI;AAEJC,QAAAA,WAFI;AAGJC,QAAAA,iBAHI;AAIJC,QAAAA,iBAJI;AAKJC,QAAAA,eALI;AAMJC,QAAAA,QANI;AAOJC,QAAAA,KAPI;AAQJC,QAAAA,aARI;AASJC,QAAAA,eATI;AAUJC,QAAAA,aAVI;AAWJC,QAAAA,gBAXI;AAYJC,QAAAA;AAZI,UAaF,KAAKpB,KAAL,CAAWQ,eAbf;AAcA,YAAMa,WAAW,GAAGD,MAAM,KAAK,QAAX,GAAsB,qBAAtB,GAA8C,uBAAlE;AACA,0BACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BD,MAA/B,CADF,CADF;AAMD,KAtBD,MAsBO;AACL,0BAAQ;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoC;AAAM,QAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAApC,CAAR;AACD;AAEF;;AAvCgC;;AA0CnC,eAAetB,UAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass FileStatus extends Component {\n\n  componentDidMount(){\n    this.props.getFileStatus();\n    this.interval = setInterval(() => this.props.getFileStatus(), 300000); // Every 300 seconds\n  }\n\n  componentWillUnmount() {\n    this.props.cleanFileStatusData();\n    clearInterval(this.interval);\n  }\n\n  render() {\n    if (this.props.esarchiveStatus){\n      const {\n        avg_bandwidth,\n        avg_latency,\n        bandwidth_warning,\n        current_bandwidth,\n        current_latency,\n        datetime,\n        error, \n        error_message,\n        latency_warning,\n        response_time,\n        response_warning,\n        status,\n      } = this.props.esarchiveStatus;\n      const badge_style = status === \"ONLINE\" ? \"badge badge-success\" : \"badge badge-secondary\";\n      return (\n        <span className=\"navbar-brand ml-4\">\n          <span className={badge_style}>{status}</span>        \n        </span>\n        \n      )\n    } else {\n      return (<span className=\"navbar-brand ml-4\"><span className=\"badge badge-secondary\">UNKNOWN</span></span>);\n    }\n    \n  }\n}\n\nexport default FileStatus\n"]},"metadata":{},"sourceType":"module"}