{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/lighter/LighterState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport LighterContext from \"./lighterContext\";\nimport LighterReducer from \"./lighterReducer\";\nimport { GET_LIGHTER_VIEW, SET_LOADING_LIGHTER_VIEW, CLEAN_LIGHTER_VIEW_DATA, SET_LIGHTER_FANCY_TREE, FILTER_LIGHTER_TREE_VIEW, SET_LOADING_FILTER_LIGHTER_TREE_VIEW, CLEAR_LIGHTER_FILTER, INCREASE_LOADING_QUICK_VIEW } from \"../types\";\nimport { AUTOSUBMIT_API_SOURCE, DEBUG } from \"../vars\";\n\nconst LighterState = props => {\n  const initialState = {\n    lightData: null,\n    lightFancyTree: null,\n    loadingView: false,\n    loadingFilterTreeView: false,\n    filterCount: 0,\n    elapsedLoadingQuickView: 1\n  };\n  const [state, dispatch] = useReducer(LighterReducer, initialState);\n  const localserver = AUTOSUBMIT_API_SOURCE;\n  const debug = DEBUG;\n\n  const getLighterView = async expid => {\n    cleanLoadingLighterView();\n    setLoadingLighterView();\n    const res = await axios.get(`${localserver}/quick/${expid}`);\n    debug && console.log(res.data);\n    const result = res.data;\n    dispatch({\n      type: GET_LIGHTER_VIEW,\n      payload: result\n    });\n  };\n\n  const filterLighterTreeView = string => {\n    setLoadingFilterLighterTreeView();\n    dispatch({\n      type: FILTER_LIGHTER_TREE_VIEW,\n      payload: string\n    });\n  };\n\n  const increaseElapsedLoadingQuickView = () => {\n    dispatch({\n      type: INCREASE_LOADING_QUICK_VIEW\n    });\n  };\n\n  const setLoadingLighterView = () => dispatch({\n    type: SET_LOADING_LIGHTER_VIEW\n  });\n\n  const cleanLoadingLighterView = () => dispatch({\n    type: CLEAN_LIGHTER_VIEW_DATA\n  });\n\n  const setLighterFancyTree = value => dispatch({\n    type: SET_LIGHTER_FANCY_TREE,\n    payload: value\n  });\n\n  const setLoadingFilterLighterTreeView = () => dispatch({\n    type: SET_LOADING_FILTER_LIGHTER_TREE_VIEW\n  });\n\n  const clearLighterFilterTreeView = () => dispatch({\n    type: CLEAR_LIGHTER_FILTER\n  });\n\n  return /*#__PURE__*/React.createElement(LighterContext.Provider, {\n    value: {\n      lightFancyTree: state.lightFancyTree,\n      lightData: state.lightData,\n      loadingView: state.loadingView,\n      loadingFilterTreeView: state.loadingFilterTreeView,\n      filterCount: state.filterCount,\n      elapsedLoadingQuickView: state.elapsedLoadingQuickView,\n      getLighterView,\n      cleanLoadingLighterView,\n      setLighterFancyTree,\n      filterLighterTreeView,\n      setLoadingFilterLighterTreeView,\n      clearLighterFilterTreeView,\n      increaseElapsedLoadingQuickView\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default LighterState;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/lighter/LighterState.js"],"names":["React","useReducer","axios","LighterContext","LighterReducer","GET_LIGHTER_VIEW","SET_LOADING_LIGHTER_VIEW","CLEAN_LIGHTER_VIEW_DATA","SET_LIGHTER_FANCY_TREE","FILTER_LIGHTER_TREE_VIEW","SET_LOADING_FILTER_LIGHTER_TREE_VIEW","CLEAR_LIGHTER_FILTER","INCREASE_LOADING_QUICK_VIEW","AUTOSUBMIT_API_SOURCE","DEBUG","LighterState","props","initialState","lightData","lightFancyTree","loadingView","loadingFilterTreeView","filterCount","elapsedLoadingQuickView","state","dispatch","localserver","debug","getLighterView","expid","cleanLoadingLighterView","setLoadingLighterView","res","get","console","log","data","result","type","payload","filterLighterTreeView","string","setLoadingFilterLighterTreeView","increaseElapsedLoadingQuickView","setLighterFancyTree","value","clearLighterFilterTreeView","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport LighterContext from \"./lighterContext\";\nimport LighterReducer from \"./lighterReducer\";\n\nimport {\n  GET_LIGHTER_VIEW,\n  SET_LOADING_LIGHTER_VIEW,\n  CLEAN_LIGHTER_VIEW_DATA,\n  SET_LIGHTER_FANCY_TREE,\n  FILTER_LIGHTER_TREE_VIEW,\n  SET_LOADING_FILTER_LIGHTER_TREE_VIEW,\n  CLEAR_LIGHTER_FILTER,\n  INCREASE_LOADING_QUICK_VIEW,\n} from \"../types\";\n\nimport { AUTOSUBMIT_API_SOURCE, DEBUG } from \"../vars\";\n\nconst LighterState = (props) => {\n  const initialState = {\n    lightData: null,\n    lightFancyTree: null,\n    loadingView: false,\n    loadingFilterTreeView: false,\n    filterCount: 0,\n    elapsedLoadingQuickView: 1,\n  };\n\n  const [state, dispatch] = useReducer(LighterReducer, initialState);\n  const localserver = AUTOSUBMIT_API_SOURCE;\n  const debug = DEBUG;\n\n  const getLighterView = async (expid) => {\n    cleanLoadingLighterView();\n    setLoadingLighterView();\n    const res = await axios.get(`${localserver}/quick/${expid}`);\n    debug && console.log(res.data);\n    const result = res.data;\n    dispatch({\n      type: GET_LIGHTER_VIEW,\n      payload: result,\n    });\n  };\n\n  const filterLighterTreeView = (string) => {\n    setLoadingFilterLighterTreeView();\n    dispatch({\n      type: FILTER_LIGHTER_TREE_VIEW,\n      payload: string,\n    });\n  };\n\n  const increaseElapsedLoadingQuickView = () => {\n    dispatch({ type: INCREASE_LOADING_QUICK_VIEW });\n  };\n\n  const setLoadingLighterView = () =>\n    dispatch({ type: SET_LOADING_LIGHTER_VIEW });\n\n  const cleanLoadingLighterView = () =>\n    dispatch({ type: CLEAN_LIGHTER_VIEW_DATA });\n\n  const setLighterFancyTree = (value) =>\n    dispatch({ type: SET_LIGHTER_FANCY_TREE, payload: value });\n\n  const setLoadingFilterLighterTreeView = () =>\n    dispatch({ type: SET_LOADING_FILTER_LIGHTER_TREE_VIEW });\n\n  const clearLighterFilterTreeView = () =>\n    dispatch({\n      type: CLEAR_LIGHTER_FILTER,\n    });\n\n  return (\n    <LighterContext.Provider\n      value={{\n        lightFancyTree: state.lightFancyTree,\n        lightData: state.lightData,\n        loadingView: state.loadingView,\n        loadingFilterTreeView: state.loadingFilterTreeView,\n        filterCount: state.filterCount,\n        elapsedLoadingQuickView: state.elapsedLoadingQuickView,\n        getLighterView,\n        cleanLoadingLighterView,\n        setLighterFancyTree,\n        filterLighterTreeView,\n        setLoadingFilterLighterTreeView,\n        clearLighterFilterTreeView,\n        increaseElapsedLoadingQuickView,\n      }}\n    >\n      {props.children}\n    </LighterContext.Provider>\n  );\n};\nexport default LighterState;\n"]},"metadata":{},"sourceType":"module"}