{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/react-api/src/App.js\";\nimport React, { Component } from 'react';\nimport Contacts from './components/contacts';\nimport Nodes from './components/nodes';\nimport Graph from './components/graph'; // class Selection extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       expid : null,\n//     }\n//   }\n//   handleChange = event => {\n//     this.setState({ expid : event.target.value });\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <React.Fragment>\n//           <form>\n//             <label htmlFor=\"expid\">expid</label>\n//             <input\n//               type = \"text\"\n//               name = \"expid\"\n//               value = {this.state.expid}\n//               onChange = {this.handleChange}\n//             />\n//           </form>\n//           <h3>You are selecting: {this.state.expid}</h3>\n//         </React.Fragment>\n//         <button onClick={this.props.onClick}>\n//           View {this.props.value}  \n//         </button>\n//       </div>      \n//     );\n//   }\n// }\n\nclass AutosubmitIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expid: null,\n      contacts: [],\n      nodes: [],\n      total: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.expid);\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({\n      expid: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Experiment Id:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.expid,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), typeof this.state.total.nodes != 'undefined' && typeof this.state.total.edges != 'undefined' && React.createElement(Graph, {\n      nodes_prop: this.state.total.nodes,\n      edges_prop: this.state.total.edges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), typeof this.state.total.nodes == 'undefined' || typeof this.state.total.edges == 'undefined' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"No data\")));\n  }\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      nodes: [],\n      total: []\n    };\n  }\n\n  componentDidMount() {\n    //const {expid} = this.props.match.params;\n    //console.log(this.props);\n    fetch('http://84.88.185.94:5002/graph/a22l').then(res => res.json()).then(data => {\n      this.setState({\n        contacts: data['edges'],\n        nodes: data['nodes'],\n        total: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    if (typeof this.state.total.nodes != \"undefined\" && typeof this.state.total.edges != \"undefined\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Graph, {\n        nodes_prop: this.state.total.nodes,\n        edges_prop: this.state.total.edges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"No data\"));\n    }\n  }\n\n}\n\nexport default AutosubmitIndex;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/react-api/src/App.js"],"names":["React","Component","Contacts","Nodes","Graph","AutosubmitIndex","constructor","props","state","expid","contacts","nodes","total","handleChange","bind","handleSubmit","event","console","log","preventDefault","setState","target","value","render","edges","App","componentDidMount","fetch","then","res","json","data","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Contacts from './components/contacts';\nimport Nodes from './components/nodes';\nimport Graph from './components/graph'\n\n\n\n// class Selection extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       expid : null,\n//     }\n//   }\n\n//   handleChange = event => {\n//     this.setState({ expid : event.target.value });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n        \n//         <React.Fragment>\n//           <form>\n//             <label htmlFor=\"expid\">expid</label>\n//             <input\n//               type = \"text\"\n//               name = \"expid\"\n//               value = {this.state.expid}\n//               onChange = {this.handleChange}\n//             />\n//           </form>\n//           <h3>You are selecting: {this.state.expid}</h3>\n//         </React.Fragment>\n\n//         <button onClick={this.props.onClick}>\n//           View {this.props.value}  \n//         </button>\n//       </div>      \n//     );\n//   }\n// }\n\nclass AutosubmitIndex extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      expid : null,\n      contacts: [],\n      nodes: [],\n      total : []\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.expid);\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({expid: event.target.value})\n  }\n  \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n        <label>\n          Experiment Id:\n          <input type=\"text\" value={this.state.expid} onChange={this.handleChange}></input>\n        </label>\n        <input type=\"submit\" value=\"Submit\"></input>\n      </form>\n\n      {typeof this.state.total.nodes != 'undefined' && typeof this.state.total.edges != 'undefined' &&    \n          <Graph nodes_prop={this.state.total.nodes} edges_prop={this.state.total.edges} />\n      }  \n\n      {typeof this.state.total.nodes == 'undefined' || typeof this.state.total.edges == 'undefined' &&    \n          <div>\n          <p>No data</p>\n        </div>\n      } \n\n      </div>\n      \n    );\n  }\n}\n\nclass App extends Component{\n\n  componentDidMount() {\n\n    //const {expid} = this.props.match.params;\n    //console.log(this.props);\n\n    fetch('http://84.88.185.94:5002/graph/a22l')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ contacts: data['edges'], nodes : data['nodes'], total : data })\n    })\n    .catch(console.log)\n  }\n\n  state = {\n    contacts: [],\n    nodes: [],\n    total : []\n  }\n\n  render() {\n    if (typeof this.state.total.nodes != \"undefined\" && typeof this.state.total.edges != \"undefined\"){\n      return (\n        <div>        \n          <Graph nodes_prop={this.state.total.nodes} edges_prop={this.state.total.edges} />\n          {/* <Contacts contacts={this.state.contacts} />\n          <Nodes nodes={this.state.nodes} />  */}\n        </div>      \n      );\n    } else {\n      return (\n        <div>\n          <p>No data</p>\n        </div>\n      );\n    }\n   \n  }\n}\n\nexport default AutosubmitIndex;\n"]},"metadata":{},"sourceType":"module"}