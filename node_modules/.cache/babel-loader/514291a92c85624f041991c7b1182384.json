{"ast":null,"code":"import React,{useEffect,useContext}from\"react\";import Spinner from\"../layout/Spinner\";// import { Link } from \"react-router-dom\";\nimport ExperimentContext from\"../context/experiment/experimentContext\";import ExperimentRuns from\"./ExperimentRuns\";var Experiment=function Experiment(_ref){var expidToken=_ref.expidToken;//console.log(expidToken);\nvar experimentContext=useContext(ExperimentContext);var loading=experimentContext.loading,loadingState=experimentContext.loadingState,experiment=experimentContext.experiment,experimentRunning=experimentContext.experimentRunning;//var interval;\nuseEffect(function(){if(expidToken){// getExperiment(expidToken);\n// getRunningState(expidToken);\n// getExperimentTree(expidToken);\n// getExperimentPerformanceMetrics(expidToken);\n// const interval = setInterval(() => getRunningState(expidToken), 300000);\n// return () => clearInterval(interval);\n}// eslint-disable-next-line\n},[]);if(experiment===null)return/*#__PURE__*/React.createElement(Spinner,null);var expid=experiment.expid,error=experiment.error,error_message=experiment.error_message;if(loading)return/*#__PURE__*/React.createElement(\"span\",null,\"Loading...\");if(!experiment)return null;return/*#__PURE__*/React.createElement(\"span\",{className:\"navbar-brand ml-4\"},/*#__PURE__*/React.createElement(\"strong\",null,expid),\" \",error&&/*#__PURE__*/React.createElement(\"pre\",{className:\"text-danger\"},error_message),\" \",loadingState&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-dark text-right\"},\"LOADING...\"),experimentRunning&&!loadingState&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-success text-right\"},\"ACTIVE\"),!experimentRunning&&!loadingState&&/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-secondary text-right\"},\"INACTIVE\"),\"\\xA0\",/*#__PURE__*/React.createElement(ExperimentRuns,null));};export default Experiment;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/Experiment.js"],"names":["React","useEffect","useContext","Spinner","ExperimentContext","ExperimentRuns","Experiment","expidToken","experimentContext","loading","loadingState","experiment","experimentRunning","expid","error","error_message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,yCAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,CACrC;AACA,GAAMC,CAAAA,iBAAiB,CAAGN,UAAU,CAACE,iBAAD,CAApC,CAFqC,GAInCK,CAAAA,OAJmC,CASjCD,iBATiC,CAInCC,OAJmC,CAKnCC,YALmC,CASjCF,iBATiC,CAKnCE,YALmC,CAMnCC,UANmC,CASjCH,iBATiC,CAMnCG,UANmC,CAOnCC,iBAPmC,CASjCJ,iBATiC,CAOnCI,iBAPmC,CAUrC;AAEAX,SAAS,CAAC,UAAM,CACd,GAAIM,UAAJ,CAAgB,CACd;AACA;AACA;AACA;AACA;AACA;AACD,CAED;AACD,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAII,UAAU,GAAK,IAAnB,CAAyB,mBAAO,oBAAC,OAAD,MAAP,CAzBY,GA2B7BE,CAAAA,KA3B6B,CA2BGF,UA3BH,CA2B7BE,KA3B6B,CA2BtBC,KA3BsB,CA2BGH,UA3BH,CA2BtBG,KA3BsB,CA2BfC,aA3Be,CA2BGJ,UA3BH,CA2BfI,aA3Be,CA6BrC,GAAIN,OAAJ,CAAa,mBAAO,6CAAP,CACb,GAAI,CAACE,UAAL,CAAiB,MAAO,KAAP,CACjB,mBACE,4BAAM,SAAS,CAAC,mBAAhB,eACE,kCAASE,KAAT,CADF,KAEGC,KAAK,eAAI,2BAAK,SAAS,CAAC,aAAf,EAA8BC,aAA9B,CAFZ,CAEgE,GAFhE,CAGGL,YAAY,eACX,4BAAM,SAAS,CAAC,6BAAhB,eAJJ,CAMGE,iBAAiB,EAAI,CAACF,YAAtB,eACC,4BAAM,SAAS,CAAC,gCAAhB,WAPJ,CASG,CAACE,iBAAD,EAAsB,CAACF,YAAvB,eACC,4BAAM,SAAS,CAAC,kCAAhB,aAVJ,qBAaI,oBAAC,cAAD,MAbJ,CADF,CAiBD,CAhDD,CAkDA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\n// import { Link } from \"react-router-dom\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport ExperimentRuns from \"./ExperimentRuns\";\n\nconst Experiment = ({ expidToken }) => {\n  //console.log(expidToken);\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    loading,\n    loadingState,\n    experiment,\n    experimentRunning,\n    // getRunningState,\n  } = experimentContext;\n  //var interval;\n\n  useEffect(() => {\n    if (expidToken) {\n      // getExperiment(expidToken);\n      // getRunningState(expidToken);\n      // getExperimentTree(expidToken);\n      // getExperimentPerformanceMetrics(expidToken);\n      // const interval = setInterval(() => getRunningState(expidToken), 300000);\n      // return () => clearInterval(interval);\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (experiment === null) return <Spinner />;\n\n  const { expid, error, error_message } = experiment;\n\n  if (loading) return <span>Loading...</span>;\n  if (!experiment) return null;\n  return (\n    <span className='navbar-brand ml-4'>\n      <strong>{expid}</strong> {/* {description}{\" \"} */}\n      {error && <pre className='text-danger'>{error_message}</pre>}{\" \"}\n      {loadingState && (\n        <span className='badge badge-dark text-right'>LOADING...</span>\n      )}\n      {experimentRunning && !loadingState && (\n        <span className='badge badge-success text-right'>ACTIVE</span>\n      )}\n      {!experimentRunning && !loadingState && (\n        <span className='badge badge-secondary text-right'>INACTIVE</span>\n      )}\n      &nbsp;\n        <ExperimentRuns />\n    </span>\n  );\n};\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}