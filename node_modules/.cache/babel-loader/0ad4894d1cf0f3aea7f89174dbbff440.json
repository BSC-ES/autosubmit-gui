{"ast":null,"code":"import _slicedToArray from \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/experiment/JobSearcher.js\";\nimport React, { useContext, useState } from 'react';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst JobSearcher = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const searchJobInGraph = experimentContext.searchJobInGraph,\n        foundNodes = experimentContext.foundNodes,\n        loadingSearchJob = experimentContext.loadingSearchJob,\n        data = experimentContext.data,\n        navigateToId = experimentContext.navigateToId;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        jobId = _useState2[0],\n        setJobId = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentIndex = _useState4[0],\n        setCurrentIndex = _useState4[1];\n\n  const onChangeId = e => setJobId(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    searchJobInGraph(jobId);\n    setCurrentIndex(0);\n  };\n\n  const onClickNav = index => {\n    if (currentIndex + index < 0) {}\n  };\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group input-group-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"section\",\n    placeholder: \"Job Name (e.g. fc0_1_CLEAN)\",\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), loadingSearchJob && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Searching...\"), !loadingSearchJob && React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search by Job Name\",\n    className: \"btn btn-dark btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), foundNodes && foundNodes.length > 1 && React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm btn-info\",\n    onClick: onClickNav(-1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(\"button\", {\n    className: \"btn-sm btn-info\",\n    onClick: onClickNav(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Next\"))))), React.createElement(\"div\", {\n    className: \"col-md-4 offset-md-4 text-right text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Max children: \", data.max_children, \" | Max parents: \", data.max_parents, \" | Total #Jobs: \", data.total_jobs)));\n};\n\nexport default JobSearcher;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/experiment/JobSearcher.js"],"names":["React","useContext","useState","ExperimentContext","JobSearcher","experimentContext","searchJobInGraph","foundNodes","loadingSearchJob","data","navigateToId","jobId","setJobId","currentIndex","setCurrentIndex","onChangeId","e","target","value","onSubmit","preventDefault","onClickNav","index","length","max_children","max_parents","total_jobs"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst JobSearcher = () => {\n    \n    const experimentContext = useContext(ExperimentContext);\n    const { searchJobInGraph, foundNodes, loadingSearchJob, data, navigateToId } = experimentContext;\n\n    const [jobId, setJobId] = useState('');    \n    const [currentIndex, setCurrentIndex] = useState('');\n    const onChangeId = e => setJobId(e.target.value);\n    \n\n    const onSubmit = e => {\n        e.preventDefault();\n        searchJobInGraph(jobId);\n        setCurrentIndex(0);\n    }\n\n    const onClickNav = index => {\n        if ((currentIndex + index) < 0) {\n            \n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n                <form onSubmit={onSubmit} className='form'>\n                    <div className=\"input-group input-group-sm\">                      \n                        <input\n                            className=\"form-control\"\n                            type='text'\n                            name='section'\n                            placeholder='Job Name (e.g. fc0_1_CLEAN)'                          \n                            onChange={onChangeId}\n                        />\n                        {/* <input\n                            className=\"form-control\"\n                            type='text'\n                            name='hours'\n                            placeholder='Hours'                          \n                            onChange={onChangeHour}\n                        />                     */}\n                        {loadingSearchJob && \n                            <span>Searching...</span>\n                        }\n                        {!loadingSearchJob && \n                        <div className=\"input-group-append\">\n                            <input          \n                            type='submit'\n                            value='Search by Job Name'\n                            className='btn btn-dark btn-sm'                            \n                            />\n                        </div>                    \n                        } \n                        {foundNodes && foundNodes.length > 1 &&\n                        <div className=\"input-group-append\">\n                            <button className=\"btn-sm btn-info\" onClick={onClickNav(-1)}>Previous</button>\n                            <button className=\"btn-sm btn-info\" onClick={onClickNav(1)}>Next</button>\n                        </div>                            \n                        }                       \n                    </div>\n                    </form>\n            </div>               \n            <div className=\"col-md-4 offset-md-4 text-right text-muted\">\n                {data && \n                    <small>Max children: {data.max_children} | Max parents: {data.max_parents} | Total #Jobs: {data.total_jobs}</small>\n                }\n            </div>         \n        </div>\n    )\n};\n\nexport default JobSearcher;\n"]},"metadata":{},"sourceType":"module"}