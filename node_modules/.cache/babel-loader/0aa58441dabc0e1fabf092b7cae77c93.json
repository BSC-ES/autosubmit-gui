{"ast":null,"code":"import _objectSpread from \"/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SEARCH_EXPERIMENTS, SET_LOADING, CLEAR_EXPERIMENTS, GET_EXPERIMENT, GET_GRAPH, SET_LOADING_GRAPH, CLEAN_GRAPH_DATA, CLEAN_RUN_DATA, UPDATE_SELECTION, SET_LOADING_RUN, GET_EXPERIMENT_RUN, SET_AUTOUPDATE_RUN, GET_PKL_DATA, SET_LOADING_PKL, UPDATE_NODES, SHOULD_UPDATE_GRAPH, SET_AUTOUPDATE_PKL, CLEAN_PKL_DATA, SET_PKL_CHANGES, UPDATE_EXPERIMENT_TS, SET_VIS_DATA } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case CLEAN_GRAPH_DATA:\n      return _objectSpread({}, state, {\n        data: null,\n        selection: null,\n        enabledGraphSearch: true,\n        loadingGraph: false,\n        loadingPkl: false,\n        visNodes: null\n      });\n\n    case CLEAN_RUN_DATA:\n      return _objectSpread({}, state, {\n        rundata: null,\n        startAutoUpdateRun: false\n      });\n\n    case CLEAN_PKL_DATA:\n      return _objectSpread({}, state, {\n        shouldUpdateGraph: false,\n        startAutoUpdatePkl: false,\n        pklchanges: null\n      });\n\n    case UPDATE_SELECTION:\n      return _objectSpread({}, state, {\n        selection: action.payload\n      });\n\n    case SEARCH_EXPERIMENTS:\n      return _objectSpread({}, state, {\n        experiments: action.payload,\n        loading: false\n      });\n\n    case SET_AUTOUPDATE_RUN:\n      return _objectSpread({}, state, {\n        startAutoUpdateRun: action.payload\n      });\n\n    case SET_AUTOUPDATE_PKL:\n      return _objectSpread({}, state, {\n        startAutoUpdatePkl: action.payload\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_LOADING_PKL:\n      return _objectSpread({}, state, {\n        loadingPkl: true\n      });\n\n    case SET_LOADING_GRAPH:\n      return _objectSpread({}, state, {\n        loadingGraph: true,\n        enabledGraphSearch: false\n      });\n\n    case SET_LOADING_RUN:\n      return _objectSpread({}, state, {\n        loadingRun: true\n      });\n\n    case SHOULD_UPDATE_GRAPH:\n      return _objectSpread({}, state, {\n        shouldUpdateGraph: action.payload\n      });\n\n    case CLEAR_EXPERIMENTS:\n      return _objectSpread({}, state, {\n        experiments: [],\n        loading: false\n      });\n\n    case GET_EXPERIMENT:\n      return _objectSpread({}, state, {\n        experiment: action.payload,\n        loading: false,\n        data: null\n      });\n\n    case GET_GRAPH:\n      return _objectSpread({}, state, {\n        data: action.payload,\n        loadingGraph: false,\n        enabledGraphSearch: true\n      });\n\n    case GET_EXPERIMENT_RUN:\n      return _objectSpread({}, state, {\n        rundata: action.payload,\n        loadingRun: false\n      });\n\n    case GET_PKL_DATA:\n      return _objectSpread({}, state, {\n        pkldata: action.payload,\n        loadingPkl: false\n      });\n\n    case UPDATE_NODES:\n      return _objectSpread({}, state, {\n        data: action.payload\n      });\n\n    case UPDATE_EXPERIMENT_TS:\n      return _objectSpread({}, state, {\n        experiment: action.payload\n      });\n\n    case SET_PKL_CHANGES:\n      return _objectSpread({}, state, {\n        pklchanges: action.payload\n      });\n\n    case SET_VIS_DATA:\n      return _objectSpread({}, state, {\n        visNodes: action.payload\n      });\n\n    default:\n      return null;\n  }\n\n  ;\n});","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/autosubmitreact/src/components/context/experiment/experimentReducer.js"],"names":["SEARCH_EXPERIMENTS","SET_LOADING","CLEAR_EXPERIMENTS","GET_EXPERIMENT","GET_GRAPH","SET_LOADING_GRAPH","CLEAN_GRAPH_DATA","CLEAN_RUN_DATA","UPDATE_SELECTION","SET_LOADING_RUN","GET_EXPERIMENT_RUN","SET_AUTOUPDATE_RUN","GET_PKL_DATA","SET_LOADING_PKL","UPDATE_NODES","SHOULD_UPDATE_GRAPH","SET_AUTOUPDATE_PKL","CLEAN_PKL_DATA","SET_PKL_CHANGES","UPDATE_EXPERIMENT_TS","SET_VIS_DATA","state","action","type","data","selection","enabledGraphSearch","loadingGraph","loadingPkl","visNodes","rundata","startAutoUpdateRun","shouldUpdateGraph","startAutoUpdatePkl","pklchanges","payload","experiments","loading","loadingRun","experiment","pkldata"],"mappings":"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","sourcesContent":["import {\n    SEARCH_EXPERIMENTS,\n    SET_LOADING,\n    CLEAR_EXPERIMENTS,\n    GET_EXPERIMENT,\n    GET_GRAPH,\n    SET_LOADING_GRAPH,\n    CLEAN_GRAPH_DATA,\n    CLEAN_RUN_DATA,\n    UPDATE_SELECTION,\n    SET_LOADING_RUN,\n    GET_EXPERIMENT_RUN,\n    SET_AUTOUPDATE_RUN,\n    GET_PKL_DATA,\n    SET_LOADING_PKL,\n    UPDATE_NODES,\n    SHOULD_UPDATE_GRAPH,\n    SET_AUTOUPDATE_PKL,\n    CLEAN_PKL_DATA,\n    SET_PKL_CHANGES,\n    UPDATE_EXPERIMENT_TS,\n    SET_VIS_DATA,\n} from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case CLEAN_GRAPH_DATA:\n            return {\n                ...state,\n                data: null,\n                selection: null,\n                enabledGraphSearch: true,\n                loadingGraph: false,\n                loadingPkl: false,\n                visNodes: null,\n            };\n        case CLEAN_RUN_DATA:\n            return {\n              ...state,\n              rundata: null,  \n              startAutoUpdateRun: false,\n            };\n        case CLEAN_PKL_DATA:\n            return {\n              ...state,\n              shouldUpdateGraph: false,  \n              startAutoUpdatePkl: false,\n              pklchanges: null,\n            };\n        case UPDATE_SELECTION:\n            return {\n                ...state,\n                selection: action.payload,\n            };\n        case SEARCH_EXPERIMENTS:\n            return {\n                ...state,\n                experiments: action.payload,\n                loading: false,\n            };\n        case SET_AUTOUPDATE_RUN:\n            return {\n                ...state,\n                startAutoUpdateRun: action.payload,\n            };\n        case SET_AUTOUPDATE_PKL:\n            return {\n                ...state,\n                startAutoUpdatePkl: action.payload,\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case SET_LOADING_PKL:\n            return {\n                ...state,\n                loadingPkl: true,\n            };\n        case SET_LOADING_GRAPH:\n            return {\n                ...state,\n                loadingGraph: true,\n                enabledGraphSearch: false,\n            };\n        case SET_LOADING_RUN:\n            return {\n                ...state,\n                loadingRun: true,                \n            };\n        case SHOULD_UPDATE_GRAPH:\n            return {\n                ...state,\n                shouldUpdateGraph: action.payload,\n            };\n        case CLEAR_EXPERIMENTS:\n            return {\n                ...state,\n                experiments: [],\n                loading: false,\n            };\n        case GET_EXPERIMENT:\n            return {\n                ...state,                \n                experiment: action.payload,\n                loading: false,\n                data: null,\n            };\n        case GET_GRAPH:\n            return {\n                ...state,\n                data: action.payload,\n                loadingGraph: false,\n                enabledGraphSearch: true,\n            };\n        case GET_EXPERIMENT_RUN:\n            return {\n                ...state,\n                rundata: action.payload,\n                loadingRun: false,\n            };\n        case GET_PKL_DATA:\n            return {\n                ...state,\n                pkldata: action.payload,\n                loadingPkl: false,\n            };\n        case UPDATE_NODES:\n            return {\n                ...state,\n                data: action.payload,\n            };\n        case UPDATE_EXPERIMENT_TS:\n            return {\n                ...state,\n                experiment: action.payload,\n            }\n        case SET_PKL_CHANGES:\n            return {\n                ...state,\n                pklchanges: action.payload,\n            };\n        case SET_VIS_DATA:\n            return {\n                ...state,\n                visNodes: action.payload,\n            };\n        default:\n            return null;\n    };\n};\n\n  "]},"metadata":{},"sourceType":"module"}