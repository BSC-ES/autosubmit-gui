{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/FileStatus.js\";\nimport React, { Component } from 'react';\n\nclass FileStatus extends Component {\n  componentDidMount() {\n    this.props.getFileStatus();\n    this.interval = setInterval(() => this.props.getFileStatus(), 300000); // Every 300 seconds\n  }\n\n  componentWillUnmount() {\n    this.props.cleanFileStatusData();\n    clearInterval(this.interval);\n  }\n\n  render() {\n    if (this.props.esarchiveStatus) {\n      const {\n        avg_bandwidth,\n        avg_latency,\n        bandwidth_warning,\n        current_bandwidth,\n        current_latency,\n        datetime,\n        error,\n        error_message,\n        latency_warning,\n        reponse_time,\n        response_warning,\n        status\n      } = this.props.esarchiveStatus;\n      let badge_style = status === \"ONLINE\" ? \"badge badge-success\" : \"badge badge-secondary\";\n      let show_alert = false;\n      let span_alert = /*#__PURE__*/React.createElement(\"span\", {\n        className: badge_style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }\n      }, \"/esarchive/ OK!\");\n\n      if (error) {\n        span_alert = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"badge badge-danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 22\n          }\n        }, \"/esarchive/ UNRESPONSIVE!\");\n      } else {\n        if (bandwidth_warning || latency_warning || response_warning) {\n          badge_style = \"badge badge-warning\";\n          show_alert = true;\n          const title_bandwidth_warn = bandwidth_warning ? String(bandwidth_warning) + \". Current bandwidth: \" + String(current_bandwidth.toFixed(2)) + \" MB/s. Average over last day: \" + String(avg_bandwidth.toFixed(2)) + \" MB/s.\" : \"\";\n          const title_latency_warn = latency_warning ? \"\\n\" + String(latency_warning) + \". Current latency: \" + String(current_latency.toFixed(2)) + \" s. Average over last day: \" + String(avg_latency.toFixed(2)) + \" s.\" : \"\";\n          const title_response_warn = response_warning ? \"\\n\" + String(response_warning) + \". Current response time: \" + String(reponse_time.toFixed(2)) : \"\";\n          const tootltip_title = title_bandwidth_warn + title_latency_warn + title_response_warn;\n          span_alert = /*#__PURE__*/React.createElement(\"span\", {\n            className: \"badge badge-warning\",\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"bottom\",\n            title: tootltip_title,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 24\n            }\n          }, \"/esarchive/ \", /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 143\n            }\n          }, \"WARNING!\"));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-brand ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, span_alert);\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-brand ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 51\n        }\n      }, \"UNKNOWN\"));\n    }\n  }\n\n}\n\nexport default FileStatus;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/FileStatus.js"],"names":["React","Component","FileStatus","componentDidMount","props","getFileStatus","interval","setInterval","componentWillUnmount","cleanFileStatusData","clearInterval","render","esarchiveStatus","avg_bandwidth","avg_latency","bandwidth_warning","current_bandwidth","current_latency","datetime","error","error_message","latency_warning","reponse_time","response_warning","status","badge_style","show_alert","span_alert","title_bandwidth_warn","String","toFixed","title_latency_warn","title_response_warn","tootltip_title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass FileStatus extends Component {\n\n  componentDidMount(){\n    this.props.getFileStatus();\n    this.interval = setInterval(() => this.props.getFileStatus(), 300000); // Every 300 seconds\n  }\n\n  componentWillUnmount() {\n    this.props.cleanFileStatusData();\n    clearInterval(this.interval);\n  }\n\n  render() {\n    if (this.props.esarchiveStatus){\n      const {\n        avg_bandwidth,\n        avg_latency,\n        bandwidth_warning,\n        current_bandwidth,\n        current_latency,\n        datetime,\n        error, \n        error_message,\n        latency_warning,\n        reponse_time,\n        response_warning,\n        status,\n      } = this.props.esarchiveStatus;\n      let badge_style = status === \"ONLINE\" ? \"badge badge-success\" : \"badge badge-secondary\";\n      let show_alert = false;\n      let span_alert = <span className={badge_style}>/esarchive/ OK!</span>;\n      if (error){\n        span_alert = <span className=\"badge badge-danger\">/esarchive/ UNRESPONSIVE!</span>;\n      } else {\n        if (bandwidth_warning || latency_warning || response_warning){\n          badge_style = \"badge badge-warning\";     \n          show_alert = true;  \n          const title_bandwidth_warn  =  bandwidth_warning ? \n          String(bandwidth_warning) + \". Current bandwidth: \" + String(current_bandwidth.toFixed(2)) + \" MB/s. Average over last day: \" + String(avg_bandwidth.toFixed(2)) + \" MB/s.\" \n          : \"\";\n          const title_latency_warn  =  latency_warning ? \n          \"\\n\" + String(latency_warning) + \". Current latency: \" + String(current_latency.toFixed(2)) + \" s. Average over last day: \" + String(avg_latency.toFixed(2)) + \" s.\" \n          : \"\";\n          const title_response_warn = response_warning ? \"\\n\" + String(response_warning) + \". Current response time: \" + String(reponse_time.toFixed(2)) : \"\";\n  \n  \n          const tootltip_title = title_bandwidth_warn + title_latency_warn + title_response_warn;\n          span_alert = <span className=\"badge badge-warning\" data-toggle='tooltip' data-placement='bottom' title={tootltip_title}>/esarchive/ <b>WARNING!</b></span>\n        }\n      }\n      \n      \n      return (\n        <span className=\"navbar-brand ml-4\">\n          {span_alert} \n        </span>\n        \n      )\n    } else {\n      return (<span className=\"navbar-brand ml-4\"><span className=\"badge badge-secondary\">UNKNOWN</span></span>);\n    }\n    \n  }\n}\n\nexport default FileStatus\n"]},"metadata":{},"sourceType":"module"}