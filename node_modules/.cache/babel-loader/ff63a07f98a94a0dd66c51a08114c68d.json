{"ast":null,"code":"import { Queue } from \"vis-network\";\nexport const AUTOSUBMIT_API_SOURCE = \"https://earth.bsc.es/autosubmitapi/\"; //export const AUTOSUBMIT_API_SOURCE = \"http://84.88.185.94:8081\";\n\nexport const DEBUG = false;\nexport const NOAPI = false;\nexport const ERROR_MESSAGE = \"Autosubmit API couldn't retrieve the requested information on time. It might be due to a network error or heavy traffic on the shared folders that Autosubmit uses to store experiment information (/esarchive/autosubmit/).\";\nexport const WaitingCode = 0;\nexport const FailedCode = -1;\nexport const CompletedCode = 5;\nexport const RunningCode = 4;\nexport const QueueCode = 3;\nexport const SubmittedCode = 2;\nexport const UnknownCode = -2;\nexport const SuspendedCode = -3;\nexport const HoldCode = 6;\nexport const ReadyCode = 1;\nexport const PreparedCode = 7;\nexport const maxReponseTimeThreshold = 240; // 4 minutes\n\nexport const quickThreshold = 12000;\nexport const queueColor = {\n  background: \"lightpink\",\n  fontWeight: \"bold\"\n};\nexport const failedColor = {\n  background: \"red\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\nexport const completedColor = {\n  background: \"yellow\",\n  fontWeight: \"bold\"\n};\nexport const submittedColor = {\n  background: \"cyan\",\n  fontWeight: \"bold\"\n};\nexport const runningColor = {\n  background: \"green\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\nexport const readyColor = {\n  background: \"lightblue\",\n  fontWeight: \"bold\"\n};\nexport const waitingColor = {\n  background: \"gray\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\nexport const unknownColor = {\n  background: \"white\",\n  color: \"black\",\n  fontWeight: \"bold\"\n};\nexport const suspendedColor = {\n  background: \"orange\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\nexport const holdColor = {\n  background: \"salmon\",\n  fontWeight: \"bold\",\n  color: \"white\"\n};\nexport const preparedColor = {\n  background: \"lightsalmon\",\n  fontWeight: \"bold\"\n};\nexport const statusCodeToStyle = code => {\n  if (code === WaitingCode) return waitingColor;\n  if (code === FailedCode) return failedColor;\n  if (code === CompletedCode) return completedColor;\n  if (code === RunningCode) return runningColor;\n  if (code === QueueCode) return queueColor;\n  if (code === SubmittedCode) return submittedColor;\n  if (code === UnknownCode) return unknownColor;\n  if (code === SuspendedCode) return suspendedColor;\n  if (code === HoldCode) return holdColor;\n  if (code === ReadyCode) return readyColor;\n  if (code === PreparedCode) return preparedColor;\n  return unknownColor;\n};","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/context/vars.js"],"names":["Queue","AUTOSUBMIT_API_SOURCE","DEBUG","NOAPI","ERROR_MESSAGE","WaitingCode","FailedCode","CompletedCode","RunningCode","QueueCode","SubmittedCode","UnknownCode","SuspendedCode","HoldCode","ReadyCode","PreparedCode","maxReponseTimeThreshold","quickThreshold","queueColor","background","fontWeight","failedColor","color","completedColor","submittedColor","runningColor","readyColor","waitingColor","unknownColor","suspendedColor","holdColor","preparedColor","statusCodeToStyle","code"],"mappings":"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","sourcesContent":["import { Queue } from \"vis-network\";\n\nexport const AUTOSUBMIT_API_SOURCE = \"https://earth.bsc.es/autosubmitapi/\";\n//export const AUTOSUBMIT_API_SOURCE = \"http://84.88.185.94:8081\";\nexport const DEBUG = false;\nexport const NOAPI = false;\nexport const ERROR_MESSAGE = \"Autosubmit API couldn't retrieve the requested information on time. It might be due to a network error or heavy traffic on the shared folders that Autosubmit uses to store experiment information (/esarchive/autosubmit/).\"\n\nexport const WaitingCode = 0;\nexport const FailedCode = -1;\nexport const CompletedCode = 5;\nexport const RunningCode = 4;\nexport const QueueCode = 3;\nexport const SubmittedCode = 2;\nexport const UnknownCode = -2;\nexport const SuspendedCode = -3;\nexport const HoldCode = 6;\nexport const ReadyCode = 1;\nexport const PreparedCode = 7;\n\nexport const maxReponseTimeThreshold = 240; // 4 minutes\nexport const quickThreshold = 12000;\n\nexport const queueColor = {\n  background: \"lightpink\",\n  fontWeight: \"bold\",\n};\nexport const failedColor = {\n  background: \"red\",\n  fontWeight: \"bold\",\n  color: \"white\",\n};\nexport const completedColor = {\n  background: \"yellow\",\n  fontWeight: \"bold\",\n};\nexport const submittedColor = {\n  background: \"cyan\",\n  fontWeight: \"bold\",\n};\nexport const runningColor = {\n  background: \"green\",\n  fontWeight: \"bold\",\n  color: \"white\",\n};\nexport const readyColor = {\n  background: \"lightblue\",\n  fontWeight: \"bold\",\n};\nexport const waitingColor = {\n  background: \"gray\",\n  fontWeight: \"bold\",\n  color: \"white\",\n};\nexport const unknownColor = {\n  background: \"white\",\n  color: \"black\",\n  fontWeight: \"bold\",\n};\nexport const suspendedColor = {\n  background: \"orange\",\n  fontWeight: \"bold\",\n  color: \"white\",\n};\nexport const holdColor = {\n  background: \"salmon\",\n  fontWeight: \"bold\",\n  color: \"white\",\n};\nexport const preparedColor = {\n  background: \"lightsalmon\",\n  fontWeight: \"bold\",\n};\n\n\n\nexport const statusCodeToStyle = (code) => {\n  if (code === WaitingCode)\n    return waitingColor;\n  if (code === FailedCode)\n    return failedColor;\n  if (code === CompletedCode)\n    return completedColor;\n  if (code === RunningCode)\n    return runningColor;\n  if (code === QueueCode)\n    return queueColor;\n  if (code === SubmittedCode)\n    return submittedColor;\n  if (code === UnknownCode)\n    return unknownColor;\n  if (code === SuspendedCode)\n    return suspendedColor;\n  if (code === HoldCode)\n    return holdColor;\n  if (code === ReadyCode)\n    return readyColor;\n  if (code === PreparedCode)\n    return preparedColor;\n  return unknownColor;\n};"]},"metadata":{},"sourceType":"module"}