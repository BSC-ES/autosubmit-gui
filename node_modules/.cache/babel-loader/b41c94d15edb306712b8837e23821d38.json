{"ast":null,"code":"import React,{useContext}from\"react\";import GraphContext from\"../context/graph/graphContext\";import ExperimentContext from\"../context/experiment/experimentContext\";import{DEBUG}from\"../context/vars\";import{commandGenerator,commandGeneratorGraph}from\"../context/utils\";var CommandModal=function CommandModal(_ref){var source=_ref.source,target=_ref.target;var graphContext=useContext(GraphContext);var experimentContext=useContext(ExperimentContext);var currentSelected=experimentContext.currentSelected,setCurrentCommand=experimentContext.setCurrentCommand,experiment=experimentContext.experiment,currentCommand=experimentContext.currentCommand;var graphSelectedNodes=graphContext.graphSelectedNodes,setCurrentCommandGraph=graphContext.setCurrentCommandGraph,currentCommandGraph=graphContext.currentCommandGraph;var expid=null;if(experiment){expid=experiment.expid;}var sourceSelection=source===\"graph-only\"?graphSelectedNodes:currentSelected;var sourceCommand=source===\"graph-only\"?currentCommandGraph:currentCommand;var invalidMessage=source===\"graph-only\"?\"Invalid Selection: You have to select at least one job from the Graph. You can select multiple jobs.\":\"Invalid Selection: You have to select at least one job.\";// console.log(sourceSelection);\n// console.log(sourceCommand);\nvar setStatusCommand=function setStatusCommand(status){return function(e){e.preventDefault();var command=\"\";if(source===\"graph-only\"){command=commandGeneratorGraph(expid,sourceSelection,status);copyContent(command);setCurrentCommandGraph(command);}else{command=commandGenerator(expid,sourceSelection,status);copyContent(command);setCurrentCommand(command);}};};var copyContent=function copyContent(inputname){//e.preventDefault();\nDEBUG&&console.log(\"Sending \"+inputname);window.copyTextToClipboard(inputname);};//copying to Clipboard\n// if (sourceCommand && sourceCommand.length > 0) {\n//   if (canCopyToClipboard === true) {\n//     DEBUG && console.log(sourceCommand);\n//     copyContent(JSON.parse(JSON.stringify(sourceCommand)));\n//   }\n// }\nvar modalHeader=/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},invalidMessage);if(sourceSelection&&sourceSelection.length>0){modalHeader=/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},\"Set status to:\",\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group\",role:\"group\",\"aria-label\":\"Status\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"lightblue\"},onClick:setStatusCommand(\"READY\")},\"Ready\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm btn-secondary\",onClick:setStatusCommand(\"WAITING\")},\"Waiting\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"yellow\"},onClick:setStatusCommand(\"COMPLETED\")},\"Completed\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm\",style:{background:\"orange\"},onClick:setStatusCommand(\"SUSPENDED\")},\"Suspended\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm btn-danger\",onClick:setStatusCommand(\"FAILED\")},\"Failed\")));}return/*#__PURE__*/React.createElement(\"div\",{className:\"modal fade\",id:\"command\"+target,tabIndex:\"-1\",role:\"dialog\",\"aria-labelledby\":\"commandTitle\"+target,\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-dialog modal-dialog-status\",role:\"document\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body pb-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},modalHeader),/*#__PURE__*/React.createElement(\"div\",{className:\"row mt-2 mx-1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\",style:{fontFamily:\"Courier\",background:\"black\",color:\"white\"}},sourceCommand&&/*#__PURE__*/React.createElement(\"div\",{className:\"p-2\"},JSON.parse(JSON.stringify(sourceCommand)))))),sourceCommand&&sourceCommand.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"row mx-1 mb-2 float-left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},\"The command has been copied to the clipboard. Paste it in your terminal.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-footer\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-sm btn-dark\",\"data-dismiss\":\"modal\"},\"Close\")))));};export default CommandModal;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/CommandModal.js"],"names":["React","useContext","GraphContext","ExperimentContext","DEBUG","commandGenerator","commandGeneratorGraph","CommandModal","source","target","graphContext","experimentContext","currentSelected","setCurrentCommand","experiment","currentCommand","graphSelectedNodes","setCurrentCommandGraph","currentCommandGraph","expid","sourceSelection","sourceCommand","invalidMessage","setStatusCommand","status","e","preventDefault","command","copyContent","inputname","console","log","window","copyTextToClipboard","modalHeader","length","background","fontFamily","color","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport { DEBUG } from \"../context/vars\";\nimport { commandGenerator, commandGeneratorGraph } from \"../context/utils\";\n\nconst CommandModal = ({ source, target }) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n\n  const {\n    currentSelected,\n    setCurrentCommand,\n    experiment,\n    currentCommand,\n  } = experimentContext;\n  const {\n    graphSelectedNodes,\n    setCurrentCommandGraph,\n    currentCommandGraph,\n  } = graphContext;\n  let expid = null;\n  if (experiment) {\n    expid = experiment.expid;\n  }\n  const sourceSelection =\n    source === \"graph-only\" ? graphSelectedNodes : currentSelected;\n  const sourceCommand =\n    source === \"graph-only\" ? currentCommandGraph : currentCommand;\n\n  const invalidMessage =\n    source === \"graph-only\"\n      ? \"Invalid Selection: You have to select at least one job from the Graph. You can select multiple jobs.\"\n      : \"Invalid Selection: You have to select at least one job.\";\n\n  // console.log(sourceSelection);\n  // console.log(sourceCommand);\n\n  const setStatusCommand = (status) => (e) => {\n    e.preventDefault();\n    let command = \"\";\n    if (source === \"graph-only\") {\n      command = commandGeneratorGraph(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommandGraph(command);\n    } else {\n      command = commandGenerator(expid, sourceSelection, status);\n      copyContent(command);\n      setCurrentCommand(command);\n    }\n  };\n\n  const copyContent = (inputname) => {\n    //e.preventDefault();\n    DEBUG && console.log(\"Sending \" + inputname);\n    window.copyTextToClipboard(inputname);\n  };\n\n  //copying to Clipboard\n  // if (sourceCommand && sourceCommand.length > 0) {\n  //   if (canCopyToClipboard === true) {\n  //     DEBUG && console.log(sourceCommand);\n  //     copyContent(JSON.parse(JSON.stringify(sourceCommand)));\n  //   }\n  // }\n\n  let modalHeader = <div className='col-12'>{invalidMessage}</div>;\n\n  if (sourceSelection && sourceSelection.length > 0) {\n    modalHeader = (\n      <div className='col-12'>\n        Set status to:{\" \"}\n        <div className='btn-group' role='group' aria-label='Status'>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"lightblue\" }}\n            onClick={setStatusCommand(\"READY\")}\n          >\n            Ready\n          </button>\n          <button\n            className='btn btn-sm btn-secondary'\n            onClick={setStatusCommand(\"WAITING\")}\n          >\n            Waiting\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"yellow\" }}\n            onClick={setStatusCommand(\"COMPLETED\")}\n          >\n            Completed\n          </button>\n          <button\n            className='btn btn-sm'\n            style={{ background: \"orange\" }}\n            onClick={setStatusCommand(\"SUSPENDED\")}\n          >\n            Suspended\n          </button>\n          <button\n            className='btn btn-sm btn-danger'\n            onClick={setStatusCommand(\"FAILED\")}\n          >\n            Failed\n          </button>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div\n      className='modal fade'\n      id={\"command\" + target}\n      tabIndex='-1'\n      role='dialog'\n      aria-labelledby={\"commandTitle\" + target}\n      aria-hidden='true'\n    >\n      <div className='modal-dialog modal-dialog-status' role='document'>\n        <div className='modal-content'>\n          <div className='modal-body pb-1'>\n            <div className='row'>{modalHeader}</div>\n            <div className='row mt-2 mx-1'>\n              <div\n                className='col-12'\n                style={{\n                  fontFamily: \"Courier\",\n                  background: \"black\",\n                  color: \"white\",\n                }}\n              >\n                {sourceCommand && (\n                  <div className='p-2'>\n                    {JSON.parse(JSON.stringify(sourceCommand))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n          {sourceCommand && sourceCommand.length > 0 && (\n            <div className='row mx-1 mb-2 float-left'>\n              <div className='col-12'>\n                The command has been copied to the clipboard. Paste it in your\n                terminal.\n              </div>\n            </div>\n          )}\n          <div className='modal-footer'>\n            <button\n              type='button'\n              className='btn btn-sm btn-dark'\n              data-dismiss='modal'\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommandModal;\n"]},"metadata":{},"sourceType":"module"}