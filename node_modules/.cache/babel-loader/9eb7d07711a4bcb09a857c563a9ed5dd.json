{"ast":null,"code":"import _objectSpread from \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_LOADING, GET_EXPERIMENT_STATS, CLEAR_STATS, SET_ERROR_STATS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_EXPERIMENT_STATS:\n      const _action$payload = action.payload,\n            result = _action$payload.result,\n            requestResult = _action$payload.requestResult;\n      return _objectSpread({}, state, {\n        statdata: result,\n        totaldata: requestResult,\n        loading: false\n      });\n\n    case CLEAR_STATS:\n      return _objectSpread({}, state, {\n        statdata: null,\n        loading: false,\n        isError: false,\n        errorMessage: \"\"\n      });\n\n    case SET_ERROR_STATS:\n      const _action$payload2 = action.payload,\n            error = _action$payload2.error,\n            msg = _action$payload2.msg;\n      return _objectSpread({}, state, {\n        isError: error,\n        errorMessage: msg\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/context/statistics/statsReducer.js"],"names":["SET_LOADING","GET_EXPERIMENT_STATS","CLEAR_STATS","SET_ERROR_STATS","state","action","type","loading","payload","result","requestResult","statdata","totaldata","isError","errorMessage","error","msg"],"mappings":";AAAA,SACIA,WADJ,EAEIC,oBAFJ,EAGIC,WAHJ,EAIIC,eAJJ,QAI4B,UAJ5B;AAMA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAL;AACI,+BACOI,KADP;AAEIG,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKN,oBAAL;AAAA,8BACsCI,MAAM,CAACG,OAD7C;AAAA,YACYC,MADZ,mBACYA,MADZ;AAAA,YACoBC,aADpB,mBACoBA,aADpB;AAEI,+BACON,KADP;AAEIO,QAAAA,QAAQ,EAAEF,MAFd;AAGIG,QAAAA,SAAS,EAAEF,aAHf;AAIIH,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKL,WAAL;AACI,+BACOE,KADP;AAEIO,QAAAA,QAAQ,EAAE,IAFd;AAGIJ,QAAAA,OAAO,EAAE,KAHb;AAIIM,QAAAA,OAAO,EAAE,KAJb;AAKIC,QAAAA,YAAY,EAAE;AALlB;;AAOJ,SAAKX,eAAL;AAAA,+BAC2BE,MAAM,CAACG,OADlC;AAAA,YACYO,KADZ,oBACYA,KADZ;AAAA,YACmBC,GADnB,oBACmBA,GADnB;AAEI,+BACOZ,KADP;AAEIS,QAAAA,OAAO,EAAEE,KAFb;AAGID,QAAAA,YAAY,EAAEE;AAHlB;;AAKJ;AACI,aAAOZ,KAAP;AA9BR;AAgCD,CAjCH","sourcesContent":["import { \n    SET_LOADING,\n    GET_EXPERIMENT_STATS,\n    CLEAR_STATS,\n    SET_ERROR_STATS, } from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case GET_EXPERIMENT_STATS:\n            const { result, requestResult } = action.payload;\n            return {\n                ...state,\n                statdata: result,\n                totaldata: requestResult,\n                loading: false,\n            };\n        case CLEAR_STATS:\n            return {\n                ...state,\n                statdata: null,\n                loading: false,\n                isError: false,\n                errorMessage: \"\",\n            };\n        case SET_ERROR_STATS:\n            const { error, msg } = action.payload;\n            return {\n                ...state,\n                isError: error,\n                errorMessage: msg,\n            }\n        default:\n            return state;\n    }\n  };"]},"metadata":{},"sourceType":"module"}