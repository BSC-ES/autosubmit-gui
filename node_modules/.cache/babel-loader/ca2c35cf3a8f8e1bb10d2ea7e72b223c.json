{"ast":null,"code":"var _jsxFileName = \"/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/Experiment.js\";\nimport React, { useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\"; // import { Link } from \"react-router-dom\";\n\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport ExperimentRuns from \"./ExperimentRuns\";\n\nconst Experiment = ({\n  expidToken\n}) => {\n  //console.log(expidToken);\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    loading,\n    loadingState,\n    experiment,\n    experimentRunning // getRunningState,\n\n  } = experimentContext; //var interval;\n\n  useEffect(() => {\n    if (expidToken) {// getExperiment(expidToken);\n      // getRunningState(expidToken);\n      // getExperimentTree(expidToken);\n      // getExperimentPerformanceMetrics(expidToken);\n      // const interval = setInterval(() => getRunningState(expidToken), 300000);\n      // return () => clearInterval(interval);\n    } // eslint-disable-next-line\n\n  }, []);\n  if (experiment === null) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }\n  });\n  const {\n    expid,\n    error,\n    error_message\n  } = experiment;\n  if (loading) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (!experiment) return null;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-brand ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, expid), \" \", error && /*#__PURE__*/React.createElement(\"pre\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, error_message), \" \", loadingState && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-dark text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"LOADING...\"), experimentRunning && !loadingState && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-success text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"ACTIVE\"), !experimentRunning && !loadingState && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-secondary text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"INACTIVE\"), \"\\xA0\", /*#__PURE__*/React.createElement(ExperimentRuns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Experiment;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/Experiment.js"],"names":["React","useEffect","useContext","Spinner","ExperimentContext","ExperimentRuns","Experiment","expidToken","experimentContext","loading","loadingState","experiment","experimentRunning","expid","error","error_message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC;AACA,QAAMC,iBAAiB,GAAGN,UAAU,CAACE,iBAAD,CAApC;AACA,QAAM;AACJK,IAAAA,OADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,iBAJI,CAKJ;;AALI,MAMFJ,iBANJ,CAHqC,CAUrC;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,UAAJ,EAAgB,CACd;AACA;AACA;AACA;AACA;AACA;AACD,KARa,CAUd;;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,MAAII,UAAU,KAAK,IAAnB,EAAyB,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEzB,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAkCJ,UAAxC;AAEA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAI,CAACE,UAAL,EAAiB,OAAO,IAAP;AACjB,sBACE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASE,KAAT,CADF,OAEGC,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BC,aAA9B,CAFZ,EAEgE,GAFhE,EAGGL,YAAY,iBACX;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAMGE,iBAAiB,IAAI,CAACF,YAAtB,iBACC;AAAM,IAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EASG,CAACE,iBAAD,IAAsB,CAACF,YAAvB,iBACC;AAAM,IAAA,SAAS,EAAC,kCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,uBAaI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAiBD,CAhDD;;AAkDA,eAAeJ,UAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\n// import { Link } from \"react-router-dom\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport ExperimentRuns from \"./ExperimentRuns\";\n\nconst Experiment = ({ expidToken }) => {\n  //console.log(expidToken);\n  const experimentContext = useContext(ExperimentContext);\n  const {\n    loading,\n    loadingState,\n    experiment,\n    experimentRunning,\n    // getRunningState,\n  } = experimentContext;\n  //var interval;\n\n  useEffect(() => {\n    if (expidToken) {\n      // getExperiment(expidToken);\n      // getRunningState(expidToken);\n      // getExperimentTree(expidToken);\n      // getExperimentPerformanceMetrics(expidToken);\n      // const interval = setInterval(() => getRunningState(expidToken), 300000);\n      // return () => clearInterval(interval);\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (experiment === null) return <Spinner />;\n\n  const { expid, error, error_message } = experiment;\n\n  if (loading) return <span>Loading...</span>;\n  if (!experiment) return null;\n  return (\n    <span className='navbar-brand ml-4'>\n      <strong>{expid}</strong> {/* {description}{\" \"} */}\n      {error && <pre className='text-danger'>{error_message}</pre>}{\" \"}\n      {loadingState && (\n        <span className='badge badge-dark text-right'>LOADING...</span>\n      )}\n      {experimentRunning && !loadingState && (\n        <span className='badge badge-success text-right'>ACTIVE</span>\n      )}\n      {!experimentRunning && !loadingState && (\n        <span className='badge badge-secondary text-right'>INACTIVE</span>\n      )}\n      &nbsp;\n        <ExperimentRuns />\n    </span>\n  );\n};\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}