{"ast":null,"code":"import _slicedToArray from \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/experiment/JobSearcher.js\";\nimport React, { useContext, useState } from 'react';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst JobSearcher = () => {\n  const experimentContext = useContext(ExperimentContext);\n  const searchJobInGraph = experimentContext.searchJobInGraph,\n        foundNodes = experimentContext.foundNodes,\n        loadingSearchJob = experimentContext.loadingSearchJob,\n        data = experimentContext.data,\n        navigateTo = experimentContext.navigateTo;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        jobId = _useState2[0],\n        setJobId = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentIndex = _useState4[0],\n        setCurrentIndex = _useState4[1];\n\n  const onChangeId = e => setJobId(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    searchJobInGraph(jobId);\n    setCurrentIndex(0);\n  };\n\n  const onNext = index => e => {\n    e.preventDefault();\n\n    if (foundNodes) {\n      let nextIndex = currentIndex + index; //setCurrentIndex(nextIndex);\n      //console.log(nextIndex);\n\n      if (nextIndex >= 0 && nextIndex < foundNodes.length) {\n        //setCurrentIndex(nextIndex);\n        //console.log(foundNodes[currentIndex].id);\n        navigateTo(foundNodes[nextIndex]);\n        setCurrentIndex(nextIndex);\n      } else {\n        if (nextIndex < 0) {\n          navigateTo(foundNodes[foundNodes.length - 1]);\n          setCurrentIndex(foundNodes.length - 1);\n        } else if (nextIndex >= foundNodes.length) {\n          navigateTo(foundNodes[0]);\n          setCurrentIndex(0);\n        }\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group input-group-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"section\",\n    placeholder: \"Job Name (e.g. fc0_1_CLEAN)\",\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), loadingSearchJob && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Searching...\"), !loadingSearchJob && React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search by Job Name\",\n    className: \"btn btn-dark btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"col-md-4 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, foundNodes && foundNodes.length > 1 && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-sm btn-info\",\n    type: \"button\",\n    onClick: onNext(-1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(\"button\", {\n    className: \"btn-sm btn-info\",\n    type: \"button\",\n    onClick: onNext(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Next\"), React.createElement(\"small\", {\n    className: \"text-muted ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, currentIndex + 1, \" of \", foundNodes.length))), React.createElement(\"div\", {\n    className: \"col-md-4 text-right text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, data && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Max children: \", data.max_children, \" | Max parents: \", data.max_parents, \" | Total #Jobs: \", data.total_jobs)));\n};\n\nexport default JobSearcher;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-autosubmitreact/autosubmitreact/src/components/experiment/JobSearcher.js"],"names":["React","useContext","useState","ExperimentContext","JobSearcher","experimentContext","searchJobInGraph","foundNodes","loadingSearchJob","data","navigateTo","jobId","setJobId","currentIndex","setCurrentIndex","onChangeId","e","target","value","onSubmit","preventDefault","onNext","index","nextIndex","length","max_children","max_parents","total_jobs"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ExperimentContext from '../context/experiment/experimentContext';\n\nconst JobSearcher = () => {\n    \n    const experimentContext = useContext(ExperimentContext);\n    const { searchJobInGraph, \n            foundNodes, \n            loadingSearchJob, \n            data, \n            navigateTo } = experimentContext;\n\n    const [jobId, setJobId] = useState('');    \n    const [currentIndex, setCurrentIndex] = useState('');\n    const onChangeId = e => setJobId(e.target.value);\n    \n\n    const onSubmit = e => {\n        e.preventDefault();\n        searchJobInGraph(jobId);\n        setCurrentIndex(0);\n    }\n\n    const onNext = index => e => {\n        e.preventDefault();\n        if (foundNodes) {\n            let nextIndex = currentIndex + index;\n            //setCurrentIndex(nextIndex);\n            //console.log(nextIndex);\n            if (nextIndex >= 0 && nextIndex < foundNodes.length ) {\n                //setCurrentIndex(nextIndex);\n                //console.log(foundNodes[currentIndex].id);\n                navigateTo(foundNodes[nextIndex]);\n                setCurrentIndex(nextIndex)\n            } else {\n               if (nextIndex < 0){\n                    navigateTo(foundNodes[foundNodes.length - 1]);\n                   setCurrentIndex(foundNodes.length - 1);\n               } else if (nextIndex >= foundNodes.length) {\n                    navigateTo(foundNodes[0]);\n                    setCurrentIndex(0);\n               }\n            }            \n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n                <form onSubmit={onSubmit} className='form'>\n                    <div className=\"input-group input-group-sm\">                      \n                        <input\n                            className=\"form-control\"\n                            type='text'\n                            name='section'\n                            placeholder='Job Name (e.g. fc0_1_CLEAN)'                          \n                            onChange={onChangeId}\n                        />\n                        {/* <input\n                            className=\"form-control\"\n                            type='text'\n                            name='hours'\n                            placeholder='Hours'                          \n                            onChange={onChangeHour}\n                        />                     */}\n                        {loadingSearchJob && \n                            <span>Searching...</span>\n                        }\n                        {!loadingSearchJob && \n                        <div className=\"input-group-append\">\n                            <input          \n                            type='submit'\n                            value='Search by Job Name'\n                            className='btn btn-dark btn-sm'                            \n                            />\n                        </div>                    \n                        }                    \n                    </div>\n                </form>\n            </div>      \n            <div className=\"col-md-4 text-center\">\n                {foundNodes && foundNodes.length > 1 &&\n                    <div>\n                        <button className=\"btn-sm btn-info\" type=\"button\" onClick={onNext(-1)}>Previous</button>\n                        <button className=\"btn-sm btn-info\" type=\"button\" onClick={onNext(1)}>Next</button>\n                        <small className='text-muted ml-2'>{currentIndex + 1} of {foundNodes.length}</small>\n                        {/* <form onSubmit={onNext(-1)} className='form'>\n                            <input          \n                            type='submit'\n                            value='Prev'\n                            className='btn btn-info btn-sm'                            \n                            />\n                        </form>\n\n                        <form onSubmit={onNext(1)} className='form'>\n                            <input          \n                            type='submit'\n                            value='Next'\n                            className='btn btn-info btn-sm'                            \n                            />\n                        </form> */}\n                    </div>                            \n                }   \n            </div>         \n            <div className=\"col-md-4 text-right text-muted\">\n                {data && \n                    <small>Max children: {data.max_children} | Max parents: {data.max_parents} | Total #Jobs: {data.total_jobs}</small>\n                }\n            </div>         \n        </div>\n    )\n};\n\nexport default JobSearcher;\n"]},"metadata":{},"sourceType":"module"}