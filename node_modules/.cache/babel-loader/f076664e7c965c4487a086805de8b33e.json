{"ast":null,"code":"/*!\n * jquery.fancytree.js\n * Tree view control with support for lazy loading and much more.\n * https://github.com/mar10/fancytree/\n *\n * Copyright (c) 2008-2020, Martin Wendt (https://wwWendt.de)\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.37.0\n * @date 2020-09-11T18:58:08Z\n */\n\n/** Core Fancytree module.\n */\n// UMD wrapper for the Fancytree core module\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"jquery\", \"./jquery.fancytree.ui-deps\"], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node/CommonJS\n    require(\"./jquery.fancytree.ui-deps\");\n\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  \"use strict\"; // prevent duplicate loading\n\n  if ($.ui && $.ui.fancytree) {\n    $.ui.fancytree.warn(\"Fancytree: ignored duplicate include\");\n    return;\n  }\n  /******************************************************************************\n   * Private functions and variables\n   */\n\n\n  var i,\n      attr,\n      FT = null,\n      // initialized below\n  TEST_IMG = new RegExp(/\\.|\\//),\n      // strings are considered image urls if they contain '.' or '/'\n  REX_HTML = /[&<>\"'/]/g,\n      // Escape those characters\n  REX_TOOLTIP = /[<>\"'/]/g,\n      // Don't escape `&` in tooltips\n  RECURSIVE_REQUEST_ERROR = \"$recursive_request\",\n      INVALID_REQUEST_TARGET_ERROR = \"$request_target_invalid\",\n      ENTITY_MAP = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#39;\",\n    \"/\": \"&#x2F;\"\n  },\n      IGNORE_KEYCODES = {\n    16: true,\n    17: true,\n    18: true\n  },\n      SPECIAL_KEYCODES = {\n    8: \"backspace\",\n    9: \"tab\",\n    10: \"return\",\n    13: \"return\",\n    // 16: null, 17: null, 18: null,  // ignore shift, ctrl, alt\n    19: \"pause\",\n    20: \"capslock\",\n    27: \"esc\",\n    32: \"space\",\n    33: \"pageup\",\n    34: \"pagedown\",\n    35: \"end\",\n    36: \"home\",\n    37: \"left\",\n    38: \"up\",\n    39: \"right\",\n    40: \"down\",\n    45: \"insert\",\n    46: \"del\",\n    59: \";\",\n    61: \"=\",\n    // 91: null, 93: null,  // ignore left and right meta\n    96: \"0\",\n    97: \"1\",\n    98: \"2\",\n    99: \"3\",\n    100: \"4\",\n    101: \"5\",\n    102: \"6\",\n    103: \"7\",\n    104: \"8\",\n    105: \"9\",\n    106: \"*\",\n    107: \"+\",\n    109: \"-\",\n    110: \".\",\n    111: \"/\",\n    112: \"f1\",\n    113: \"f2\",\n    114: \"f3\",\n    115: \"f4\",\n    116: \"f5\",\n    117: \"f6\",\n    118: \"f7\",\n    119: \"f8\",\n    120: \"f9\",\n    121: \"f10\",\n    122: \"f11\",\n    123: \"f12\",\n    144: \"numlock\",\n    145: \"scroll\",\n    173: \"-\",\n    186: \";\",\n    187: \"=\",\n    188: \",\",\n    189: \"-\",\n    190: \".\",\n    191: \"/\",\n    192: \"`\",\n    219: \"[\",\n    220: \"\\\\\",\n    221: \"]\",\n    222: \"'\"\n  },\n      MODIFIERS = {\n    16: \"shift\",\n    17: \"ctrl\",\n    18: \"alt\",\n    91: \"meta\",\n    93: \"meta\"\n  },\n      MOUSE_BUTTONS = {\n    0: \"\",\n    1: \"left\",\n    2: \"middle\",\n    3: \"right\"\n  },\n      // Boolean attributes that can be set with equivalent class names in the LI tags\n  // Note: v2.23: checkbox and hideCheckbox are *not* in this list\n  CLASS_ATTRS = \"active expanded focus folder lazy radiogroup selected unselectable unselectableIgnore\".split(\" \"),\n      CLASS_ATTR_MAP = {},\n      // Top-level Fancytree attributes, that can be set by dict\n  TREE_ATTRS = \"columns types\".split(\" \"),\n      // TREE_ATTR_MAP = {},\n  // Top-level FancytreeNode attributes, that can be set by dict\n  NODE_ATTRS = \"checkbox expanded extraClasses folder icon iconTooltip key lazy partsel radiogroup refKey selected statusNodeType title tooltip type unselectable unselectableIgnore unselectableStatus\".split(\" \"),\n      NODE_ATTR_MAP = {},\n      // Mapping of lowercase -> real name (because HTML5 data-... attribute only supports lowercase)\n  NODE_ATTR_LOWERCASE_MAP = {},\n      // Attribute names that should NOT be added to node.data\n  NONE_NODE_DATA_MAP = {\n    active: true,\n    children: true,\n    data: true,\n    focus: true\n  };\n\n  for (i = 0; i < CLASS_ATTRS.length; i++) {\n    CLASS_ATTR_MAP[CLASS_ATTRS[i]] = true;\n  }\n\n  for (i = 0; i < NODE_ATTRS.length; i++) {\n    attr = NODE_ATTRS[i];\n    NODE_ATTR_MAP[attr] = true;\n\n    if (attr !== attr.toLowerCase()) {\n      NODE_ATTR_LOWERCASE_MAP[attr.toLowerCase()] = attr;\n    }\n  } // for(i=0; i<TREE_ATTRS.length; i++) {\n  // \tTREE_ATTR_MAP[TREE_ATTRS[i]] = true;\n  // }\n\n\n  function _assert(cond, msg) {\n    // TODO: see qunit.js extractStacktrace()\n    if (!cond) {\n      msg = msg ? \": \" + msg : \"\"; // consoleApply(\"assert\", [!!cond, msg]);\n\n      $.error(\"Fancytree assertion failed\" + msg);\n    }\n  }\n\n  _assert($.ui, \"Fancytree requires jQuery UI (http://jqueryui.com)\");\n\n  function consoleApply(method, args) {\n    var i,\n        s,\n        fn = window.console ? window.console[method] : null;\n\n    if (fn) {\n      try {\n        fn.apply(window.console, args);\n      } catch (e) {\n        // IE 8?\n        s = \"\";\n\n        for (i = 0; i < args.length; i++) {\n          s += args[i];\n        }\n\n        fn(s);\n      }\n    }\n  }\n  /* support: IE8 Polyfil for Date.now() */\n\n\n  if (!Date.now) {\n    Date.now = function now() {\n      return new Date().getTime();\n    };\n  }\n  /*Return true if x is a FancytreeNode.*/\n\n\n  function _isNode(x) {\n    return !!(x.tree && x.statusNodeType !== undefined);\n  }\n  /** Return true if dotted version string is equal or higher than requested version.\n   *\n   * See http://jsfiddle.net/mar10/FjSAN/\n   */\n\n\n  function isVersionAtLeast(dottedVersion, major, minor, patch) {\n    var i,\n        v,\n        t,\n        verParts = $.map($.trim(dottedVersion).split(\".\"), function (e) {\n      return parseInt(e, 10);\n    }),\n        testParts = $.map(Array.prototype.slice.call(arguments, 1), function (e) {\n      return parseInt(e, 10);\n    });\n\n    for (i = 0; i < testParts.length; i++) {\n      v = verParts[i] || 0;\n      t = testParts[i] || 0;\n\n      if (v !== t) {\n        return v > t;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Deep-merge a list of objects (but replace array-type options).\n   *\n   * jQuery's $.extend(true, ...) method does a deep merge, that also merges Arrays.\n   * This variant is used to merge extension defaults with user options, and should\n   * merge objects, but override arrays (for example the `triggerStart: [...]` option\n   * of ext-edit). Also `null` values are copied over and not skipped.\n   *\n   * See issue #876\n   *\n   * Example:\n   * _simpleDeepMerge({}, o1, o2);\n   */\n\n\n  function _simpleDeepMerge() {\n    var options,\n        name,\n        src,\n        copy,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length; // Handle case when target is a string or something (possible in deep copy)\n\n    if (typeof target !== \"object\" && !$.isFunction(target)) {\n      target = {};\n    }\n\n    if (i === length) {\n      throw Error(\"need at least two args\");\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          if (options.hasOwnProperty(name)) {\n            src = target[name];\n            copy = options[name]; // Prevent never-ending loop\n\n            if (target === copy) {\n              continue;\n            } // Recurse if we're merging plain objects\n            // (NOTE: unlike $.extend, we don't merge arrays, but replace them)\n\n\n            if (copy && $.isPlainObject(copy)) {\n              clone = src && $.isPlainObject(src) ? src : {}; // Never move original objects, clone them\n\n              target[name] = _simpleDeepMerge(clone, copy); // Don't bring in undefined values\n            } else if (copy !== undefined) {\n              target[name] = copy;\n            }\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  }\n  /** Return a wrapper that calls sub.methodName() and exposes\n   *  this             : tree\n   *  this._local      : tree.ext.EXTNAME\n   *  this._super      : base.methodName.call()\n   *  this._superApply : base.methodName.apply()\n   */\n\n\n  function _makeVirtualFunction(methodName, tree, base, extension, extName) {\n    // $.ui.fancytree.debug(\"_makeVirtualFunction\", methodName, tree, base, extension, extName);\n    // if(rexTestSuper && !rexTestSuper.test(func)){\n    //     // extension.methodName() doesn't call _super(), so no wrapper required\n    //     return func;\n    // }\n    // Use an immediate function as closure\n    var proxy = function () {\n      var prevFunc = tree[methodName],\n          // org. tree method or prev. proxy\n      baseFunc = extension[methodName],\n          //\n      _local = tree.ext[extName],\n          _super = function () {\n        return prevFunc.apply(tree, arguments);\n      },\n          _superApply = function (args) {\n        return prevFunc.apply(tree, args);\n      }; // Return the wrapper function\n\n\n      return function () {\n        var prevLocal = tree._local,\n            prevSuper = tree._super,\n            prevSuperApply = tree._superApply;\n\n        try {\n          tree._local = _local;\n          tree._super = _super;\n          tree._superApply = _superApply;\n          return baseFunc.apply(tree, arguments);\n        } finally {\n          tree._local = prevLocal;\n          tree._super = prevSuper;\n          tree._superApply = prevSuperApply;\n        }\n      };\n    }(); // end of Immediate Function\n\n\n    return proxy;\n  }\n  /**\n   * Subclass `base` by creating proxy functions\n   */\n\n\n  function _subclassObject(tree, base, extension, extName) {\n    // $.ui.fancytree.debug(\"_subclassObject\", tree, base, extension, extName);\n    for (var attrName in extension) {\n      if (typeof extension[attrName] === \"function\") {\n        if (typeof tree[attrName] === \"function\") {\n          // override existing method\n          tree[attrName] = _makeVirtualFunction(attrName, tree, base, extension, extName);\n        } else if (attrName.charAt(0) === \"_\") {\n          // Create private methods in tree.ext.EXTENSION namespace\n          tree.ext[extName][attrName] = _makeVirtualFunction(attrName, tree, base, extension, extName);\n        } else {\n          $.error(\"Could not override tree.\" + attrName + \". Use prefix '_' to create tree.\" + extName + \"._\" + attrName);\n        }\n      } else {\n        // Create member variables in tree.ext.EXTENSION namespace\n        if (attrName !== \"options\") {\n          tree.ext[extName][attrName] = extension[attrName];\n        }\n      }\n    }\n  }\n\n  function _getResolvedPromise(context, argArray) {\n    if (context === undefined) {\n      return $.Deferred(function () {\n        this.resolve();\n      }).promise();\n    }\n\n    return $.Deferred(function () {\n      this.resolveWith(context, argArray);\n    }).promise();\n  }\n\n  function _getRejectedPromise(context, argArray) {\n    if (context === undefined) {\n      return $.Deferred(function () {\n        this.reject();\n      }).promise();\n    }\n\n    return $.Deferred(function () {\n      this.rejectWith(context, argArray);\n    }).promise();\n  }\n\n  function _makeResolveFunc(deferred, context) {\n    return function () {\n      deferred.resolveWith(context);\n    };\n  }\n\n  function _getElementDataAsDict($el) {\n    // Evaluate 'data-NAME' attributes with special treatment for 'data-json'.\n    var d = $.extend({}, $el.data()),\n        json = d.json;\n    delete d.fancytree; // added to container by widget factory (old jQuery UI)\n\n    delete d.uiFancytree; // added to container by widget factory\n\n    if (json) {\n      delete d.json; // <li data-json='...'> is already returned as object (http://api.jquery.com/data/#data-html5)\n\n      d = $.extend(d, json);\n    }\n\n    return d;\n  }\n\n  function _escapeTooltip(s) {\n    return (\"\" + s).replace(REX_TOOLTIP, function (s) {\n      return ENTITY_MAP[s];\n    });\n  } // TODO: use currying\n\n\n  function _makeNodeTitleMatcher(s) {\n    s = s.toLowerCase();\n    return function (node) {\n      return node.title.toLowerCase().indexOf(s) >= 0;\n    };\n  }\n\n  function _makeNodeTitleStartMatcher(s) {\n    var reMatch = new RegExp(\"^\" + s, \"i\");\n    return function (node) {\n      return reMatch.test(node.title);\n    };\n  }\n  /******************************************************************************\n   * FancytreeNode\n   */\n\n  /**\n   * Creates a new FancytreeNode\n   *\n   * @class FancytreeNode\n   * @classdesc A FancytreeNode represents the hierarchical data model and operations.\n   *\n   * @param {FancytreeNode} parent\n   * @param {NodeData} obj\n   *\n   * @property {Fancytree} tree The tree instance\n   * @property {FancytreeNode} parent The parent node\n   * @property {string} key Node id (must be unique inside the tree)\n   * @property {string} title Display name (may contain HTML)\n   * @property {object} data Contains all extra data that was passed on node creation\n   * @property {FancytreeNode[] | null | undefined} children Array of child nodes.<br>\n   *     For lazy nodes, null or undefined means 'not yet loaded'. Use an empty array\n   *     to define a node that has no children.\n   * @property {boolean} expanded Use isExpanded(), setExpanded() to access this property.\n   * @property {string} extraClasses Additional CSS classes, added to the node's `<span>`.<br>\n   *     Note: use `node.add/remove/toggleClass()` to modify.\n   * @property {boolean} folder Folder nodes have different default icons and click behavior.<br>\n   *     Note: Also non-folders may have children.\n   * @property {string} statusNodeType null for standard nodes. Otherwise type of special system node: 'error', 'loading', 'nodata', or 'paging'.\n   * @property {boolean} lazy True if this node is loaded on demand, i.e. on first expansion.\n   * @property {boolean} selected Use isSelected(), setSelected() to access this property.\n   * @property {string} tooltip Alternative description used as hover popup\n   * @property {string} iconTooltip Description used as hover popup for icon. @since 2.27\n   * @property {string} type Node type, used with tree.types map. @since 2.27\n   */\n\n\n  function FancytreeNode(parent, obj) {\n    var i, l, name, cl;\n    this.parent = parent;\n    this.tree = parent.tree;\n    this.ul = null;\n    this.li = null; // <li id='key' ftnode=this> tag\n\n    this.statusNodeType = null; // if this is a temp. node to display the status of its parent\n\n    this._isLoading = false; // if this node itself is loading\n\n    this._error = null; // {message: '...'} if a load error occurred\n\n    this.data = {}; // TODO: merge this code with node.toDict()\n    // copy attributes from obj object\n\n    for (i = 0, l = NODE_ATTRS.length; i < l; i++) {\n      name = NODE_ATTRS[i];\n      this[name] = obj[name];\n    } // unselectableIgnore and unselectableStatus imply unselectable\n\n\n    if (this.unselectableIgnore != null || this.unselectableStatus != null) {\n      this.unselectable = true;\n    }\n\n    if (obj.hideCheckbox) {\n      $.error(\"'hideCheckbox' node option was removed in v2.23.0: use 'checkbox: false'\");\n    } // node.data += obj.data\n\n\n    if (obj.data) {\n      $.extend(this.data, obj.data);\n    } // Copy all other attributes to this.data.NAME\n\n\n    for (name in obj) {\n      if (!NODE_ATTR_MAP[name] && (this.tree.options.copyFunctionsToData || !$.isFunction(obj[name])) && !NONE_NODE_DATA_MAP[name]) {\n        // node.data.NAME = obj.NAME\n        this.data[name] = obj[name];\n      }\n    } // Fix missing key\n\n\n    if (this.key == null) {\n      // test for null OR undefined\n      if (this.tree.options.defaultKey) {\n        this.key = \"\" + this.tree.options.defaultKey(this);\n\n        _assert(this.key, \"defaultKey() must return a unique key\");\n      } else {\n        this.key = \"_\" + FT._nextNodeKey++;\n      }\n    } else {\n      this.key = \"\" + this.key; // Convert to string (#217)\n    } // Fix tree.activeNode\n    // TODO: not elegant: we use obj.active as marker to set tree.activeNode\n    // when loading from a dictionary.\n\n\n    if (obj.active) {\n      _assert(this.tree.activeNode === null, \"only one active node allowed\");\n\n      this.tree.activeNode = this;\n    }\n\n    if (obj.selected) {\n      // #186\n      this.tree.lastSelectedNode = this;\n    } // TODO: handle obj.focus = true\n    // Create child nodes\n\n\n    cl = obj.children;\n\n    if (cl) {\n      if (cl.length) {\n        this._setChildren(cl);\n      } else {\n        // if an empty array was passed for a lazy node, keep it, in order to mark it 'loaded'\n        this.children = this.lazy ? [] : null;\n      }\n    } else {\n      this.children = null;\n    } // Add to key/ref map (except for root node)\n    //\tif( parent ) {\n\n\n    this.tree._callHook(\"treeRegisterNode\", this.tree, true, this); //\t}\n\n  }\n\n  FancytreeNode.prototype =\n  /** @lends FancytreeNode# */\n  {\n    /* Return the direct child FancytreeNode with a given key, index. */\n    _findDirectChild: function (ptr) {\n      var i,\n          l,\n          cl = this.children;\n\n      if (cl) {\n        if (typeof ptr === \"string\") {\n          for (i = 0, l = cl.length; i < l; i++) {\n            if (cl[i].key === ptr) {\n              return cl[i];\n            }\n          }\n        } else if (typeof ptr === \"number\") {\n          return this.children[ptr];\n        } else if (ptr.parent === this) {\n          return ptr;\n        }\n      }\n\n      return null;\n    },\n    // TODO: activate()\n    // TODO: activateSilently()\n\n    /* Internal helper called in recursive addChildren sequence.*/\n    _setChildren: function (children) {\n      _assert(children && (!this.children || this.children.length === 0), \"only init supported\");\n\n      this.children = [];\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        this.children.push(new FancytreeNode(this, children[i]));\n      }\n\n      this.tree._callHook(\"treeStructureChanged\", this.tree, \"setChildren\");\n    },\n\n    /**\n     * Append (or insert) a list of child nodes.\n     *\n     * @param {NodeData[]} children array of child node definitions (also single child accepted)\n     * @param {FancytreeNode | string | Integer} [insertBefore] child node (or key or index of such).\n     *     If omitted, the new children are appended.\n     * @returns {FancytreeNode} first child added\n     *\n     * @see FancytreeNode#applyPatch\n     */\n    addChildren: function (children, insertBefore) {\n      var i,\n          l,\n          pos,\n          origFirstChild = this.getFirstChild(),\n          origLastChild = this.getLastChild(),\n          firstNode = null,\n          nodeList = [];\n\n      if ($.isPlainObject(children)) {\n        children = [children];\n      }\n\n      if (!this.children) {\n        this.children = [];\n      }\n\n      for (i = 0, l = children.length; i < l; i++) {\n        nodeList.push(new FancytreeNode(this, children[i]));\n      }\n\n      firstNode = nodeList[0];\n\n      if (insertBefore == null) {\n        this.children = this.children.concat(nodeList);\n      } else {\n        // Returns null if insertBefore is not a direct child:\n        insertBefore = this._findDirectChild(insertBefore);\n        pos = $.inArray(insertBefore, this.children);\n\n        _assert(pos >= 0, \"insertBefore must be an existing child\"); // insert nodeList after children[pos]\n\n\n        this.children.splice.apply(this.children, [pos, 0].concat(nodeList));\n      }\n\n      if (origFirstChild && !insertBefore) {\n        // #708: Fast path -- don't render every child of root, just the new ones!\n        // #723, #729: but only if it's appended to an existing child list\n        for (i = 0, l = nodeList.length; i < l; i++) {\n          nodeList[i].render(); // New nodes were never rendered before\n        } // Adjust classes where status may have changed\n        // Has a first child\n\n\n        if (origFirstChild !== this.getFirstChild()) {\n          // Different first child -- recompute classes\n          origFirstChild.renderStatus();\n        }\n\n        if (origLastChild !== this.getLastChild()) {\n          // Different last child -- recompute classes\n          origLastChild.renderStatus();\n        }\n      } else if (!this.parent || this.parent.ul || this.tr) {\n        // render if the parent was rendered (or this is a root node)\n        this.render();\n      }\n\n      if (this.tree.options.selectMode === 3) {\n        this.fixSelection3FromEndNodes();\n      }\n\n      this.triggerModifyChild(\"add\", nodeList.length === 1 ? nodeList[0] : null);\n      return firstNode;\n    },\n\n    /**\n     * Add class to node's span tag and to .extraClasses.\n     *\n     * @param {string} className class name\n     *\n     * @since 2.17\n     */\n    addClass: function (className) {\n      return this.toggleClass(className, true);\n    },\n\n    /**\n     * Append or prepend a node, or append a child node.\n     *\n     * This a convenience function that calls addChildren()\n     *\n     * @param {NodeData} node node definition\n     * @param {string} [mode=child] 'before', 'after', 'firstChild', or 'child' ('over' is a synonym for 'child')\n     * @returns {FancytreeNode} new node\n     */\n    addNode: function (node, mode) {\n      if (mode === undefined || mode === \"over\") {\n        mode = \"child\";\n      }\n\n      switch (mode) {\n        case \"after\":\n          return this.getParent().addChildren(node, this.getNextSibling());\n\n        case \"before\":\n          return this.getParent().addChildren(node, this);\n\n        case \"firstChild\":\n          // Insert before the first child if any\n          var insertBefore = this.children ? this.children[0] : null;\n          return this.addChildren(node, insertBefore);\n\n        case \"child\":\n        case \"over\":\n          return this.addChildren(node);\n      }\n\n      _assert(false, \"Invalid mode: \" + mode);\n    },\n\n    /**Add child status nodes that indicate 'More...', etc.\n     *\n     * This also maintains the node's `partload` property.\n     * @param {boolean|object} node optional node definition. Pass `false` to remove all paging nodes.\n     * @param {string} [mode='child'] 'child'|firstChild'\n     * @since 2.15\n     */\n    addPagingNode: function (node, mode) {\n      var i, n;\n      mode = mode || \"child\";\n\n      if (node === false) {\n        for (i = this.children.length - 1; i >= 0; i--) {\n          n = this.children[i];\n\n          if (n.statusNodeType === \"paging\") {\n            this.removeChild(n);\n          }\n        }\n\n        this.partload = false;\n        return;\n      }\n\n      node = $.extend({\n        title: this.tree.options.strings.moreData,\n        statusNodeType: \"paging\",\n        icon: false\n      }, node);\n      this.partload = true;\n      return this.addNode(node, mode);\n    },\n\n    /**\n     * Append new node after this.\n     *\n     * This a convenience function that calls addNode(node, 'after')\n     *\n     * @param {NodeData} node node definition\n     * @returns {FancytreeNode} new node\n     */\n    appendSibling: function (node) {\n      return this.addNode(node, \"after\");\n    },\n\n    /**\n     * (experimental) Apply a modification (or navigation) operation.\n     *\n     * @param {string} cmd\n     * @param {object} [opts]\n     * @see Fancytree#applyCommand\n     * @since 2.32\n     */\n    applyCommand: function (cmd, opts) {\n      return this.tree.applyCommand(cmd, this, opts);\n    },\n\n    /**\n     * Modify existing child nodes.\n     *\n     * @param {NodePatch} patch\n     * @returns {$.Promise}\n     * @see FancytreeNode#addChildren\n     */\n    applyPatch: function (patch) {\n      // patch [key, null] means 'remove'\n      if (patch === null) {\n        this.remove();\n        return _getResolvedPromise(this);\n      } // TODO: make sure that root node is not collapsed or modified\n      // copy (most) attributes to node.ATTR or node.data.ATTR\n\n\n      var name,\n          promise,\n          v,\n          IGNORE_MAP = {\n        children: true,\n        expanded: true,\n        parent: true\n      }; // TODO: should be global\n\n      for (name in patch) {\n        if (patch.hasOwnProperty(name)) {\n          v = patch[name];\n\n          if (!IGNORE_MAP[name] && !$.isFunction(v)) {\n            if (NODE_ATTR_MAP[name]) {\n              this[name] = v;\n            } else {\n              this.data[name] = v;\n            }\n          }\n        }\n      } // Remove and/or create children\n\n\n      if (patch.hasOwnProperty(\"children\")) {\n        this.removeChildren();\n\n        if (patch.children) {\n          // only if not null and not empty list\n          // TODO: addChildren instead?\n          this._setChildren(patch.children);\n        } // TODO: how can we APPEND or INSERT child nodes?\n\n      }\n\n      if (this.isVisible()) {\n        this.renderTitle();\n        this.renderStatus();\n      } // Expand collapse (final step, since this may be async)\n\n\n      if (patch.hasOwnProperty(\"expanded\")) {\n        promise = this.setExpanded(patch.expanded);\n      } else {\n        promise = _getResolvedPromise(this);\n      }\n\n      return promise;\n    },\n\n    /** Collapse all sibling nodes.\n     * @returns {$.Promise}\n     */\n    collapseSiblings: function () {\n      return this.tree._callHook(\"nodeCollapseSiblings\", this);\n    },\n\n    /** Copy this node as sibling or child of `node`.\n     *\n     * @param {FancytreeNode} node source node\n     * @param {string} [mode=child] 'before' | 'after' | 'child'\n     * @param {Function} [map] callback function(NodeData, FancytreeNode) that could modify the new node\n     * @returns {FancytreeNode} new\n     */\n    copyTo: function (node, mode, map) {\n      return node.addNode(this.toDict(true, map), mode);\n    },\n\n    /** Count direct and indirect children.\n     *\n     * @param {boolean} [deep=true] pass 'false' to only count direct children\n     * @returns {int} number of child nodes\n     */\n    countChildren: function (deep) {\n      var cl = this.children,\n          i,\n          l,\n          n;\n\n      if (!cl) {\n        return 0;\n      }\n\n      n = cl.length;\n\n      if (deep !== false) {\n        for (i = 0, l = n; i < l; i++) {\n          n += cl[i].countChildren();\n        }\n      }\n\n      return n;\n    },\n    // TODO: deactivate()\n\n    /** Write to browser console if debugLevel >= 4 (prepending node info)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    debug: function (msg) {\n      if (this.tree.options.debugLevel >= 4) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"log\", arguments);\n      }\n    },\n\n    /** Deprecated.\n     * @deprecated since 2014-02-16. Use resetLazy() instead.\n     */\n    discard: function () {\n      this.warn(\"FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead.\");\n      return this.resetLazy();\n    },\n\n    /** Remove DOM elements for all descendents. May be called on .collapse event\n     * to keep the DOM small.\n     * @param {boolean} [includeSelf=false]\n     */\n    discardMarkup: function (includeSelf) {\n      var fn = includeSelf ? \"nodeRemoveMarkup\" : \"nodeRemoveChildMarkup\";\n\n      this.tree._callHook(fn, this);\n    },\n\n    /** Write error to browser console if debugLevel >= 1 (prepending tree info)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    error: function (msg) {\n      if (this.tree.options.debugLevel >= 1) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"error\", arguments);\n      }\n    },\n\n    /**Find all nodes that match condition (excluding self).\n     *\n     * @param {string | function(node)} match title string to search for, or a\n     *     callback function that returns `true` if a node is matched.\n     * @returns {FancytreeNode[]} array of nodes (may be empty)\n     */\n    findAll: function (match) {\n      match = $.isFunction(match) ? match : _makeNodeTitleMatcher(match);\n      var res = [];\n      this.visit(function (n) {\n        if (match(n)) {\n          res.push(n);\n        }\n      });\n      return res;\n    },\n\n    /**Find first node that matches condition (excluding self).\n     *\n     * @param {string | function(node)} match title string to search for, or a\n     *     callback function that returns `true` if a node is matched.\n     * @returns {FancytreeNode} matching node or null\n     * @see FancytreeNode#findAll\n     */\n    findFirst: function (match) {\n      match = $.isFunction(match) ? match : _makeNodeTitleMatcher(match);\n      var res = null;\n      this.visit(function (n) {\n        if (match(n)) {\n          res = n;\n          return false;\n        }\n      });\n      return res;\n    },\n\n    /** Find a node relative to self.\n     *\n     * @param {number|string} where The keyCode that would normally trigger this move,\n     *\t\tor a keyword ('down', 'first', 'last', 'left', 'parent', 'right', 'up').\n     * @returns {FancytreeNode}\n     * @since v2.31\n     */\n    findRelatedNode: function (where, includeHidden) {\n      return this.tree.findRelatedNode(this, where, includeHidden);\n    },\n\n    /* Apply selection state (internal use only) */\n    _changeSelectStatusAttrs: function (state) {\n      var changed = false,\n          opts = this.tree.options,\n          unselectable = FT.evalOption(\"unselectable\", this, this, opts, false),\n          unselectableStatus = FT.evalOption(\"unselectableStatus\", this, this, opts, undefined);\n\n      if (unselectable && unselectableStatus != null) {\n        state = unselectableStatus;\n      }\n\n      switch (state) {\n        case false:\n          changed = this.selected || this.partsel;\n          this.selected = false;\n          this.partsel = false;\n          break;\n\n        case true:\n          changed = !this.selected || !this.partsel;\n          this.selected = true;\n          this.partsel = true;\n          break;\n\n        case undefined:\n          changed = this.selected || !this.partsel;\n          this.selected = false;\n          this.partsel = true;\n          break;\n\n        default:\n          _assert(false, \"invalid state: \" + state);\n\n      } // this.debug(\"fixSelection3AfterLoad() _changeSelectStatusAttrs()\", state, changed);\n\n\n      if (changed) {\n        this.renderStatus();\n      }\n\n      return changed;\n    },\n\n    /**\n     * Fix selection status, after this node was (de)selected in multi-hier mode.\n     * This includes (de)selecting all children.\n     */\n    fixSelection3AfterClick: function (callOpts) {\n      var flag = this.isSelected(); // this.debug(\"fixSelection3AfterClick()\");\n\n      this.visit(function (node) {\n        node._changeSelectStatusAttrs(flag);\n\n        if (node.radiogroup) {\n          // #931: don't (de)select this branch\n          return \"skip\";\n        }\n      });\n      this.fixSelection3FromEndNodes(callOpts);\n    },\n\n    /**\n     * Fix selection status for multi-hier mode.\n     * Only end-nodes are considered to update the descendants branch and parents.\n     * Should be called after this node has loaded new children or after\n     * children have been modified using the API.\n     */\n    fixSelection3FromEndNodes: function (callOpts) {\n      var opts = this.tree.options; // this.debug(\"fixSelection3FromEndNodes()\");\n\n      _assert(opts.selectMode === 3, \"expected selectMode 3\"); // Visit all end nodes and adjust their parent's `selected` and `partsel`\n      // attributes. Return selection state true, false, or undefined.\n\n\n      function _walk(node) {\n        var i,\n            l,\n            child,\n            s,\n            state,\n            allSelected,\n            someSelected,\n            unselIgnore,\n            unselState,\n            children = node.children;\n\n        if (children && children.length) {\n          // check all children recursively\n          allSelected = true;\n          someSelected = false;\n\n          for (i = 0, l = children.length; i < l; i++) {\n            child = children[i]; // the selection state of a node is not relevant; we need the end-nodes\n\n            s = _walk(child); // if( !child.unselectableIgnore ) {\n\n            unselIgnore = FT.evalOption(\"unselectableIgnore\", child, child, opts, false);\n\n            if (!unselIgnore) {\n              if (s !== false) {\n                someSelected = true;\n              }\n\n              if (s !== true) {\n                allSelected = false;\n              }\n            }\n          } // eslint-disable-next-line no-nested-ternary\n\n\n          state = allSelected ? true : someSelected ? undefined : false;\n        } else {\n          // This is an end-node: simply report the status\n          unselState = FT.evalOption(\"unselectableStatus\", node, node, opts, undefined);\n          state = unselState == null ? !!node.selected : !!unselState;\n        } // #939: Keep a `partsel` flag that was explicitly set on a lazy node\n\n\n        if (node.partsel && !node.selected && node.lazy && node.children == null) {\n          state = undefined;\n        }\n\n        node._changeSelectStatusAttrs(state);\n\n        return state;\n      }\n\n      _walk(this); // Update parent's state\n\n\n      this.visitParents(function (node) {\n        var i,\n            l,\n            child,\n            state,\n            unselIgnore,\n            unselState,\n            children = node.children,\n            allSelected = true,\n            someSelected = false;\n\n        for (i = 0, l = children.length; i < l; i++) {\n          child = children[i];\n          unselIgnore = FT.evalOption(\"unselectableIgnore\", child, child, opts, false);\n\n          if (!unselIgnore) {\n            unselState = FT.evalOption(\"unselectableStatus\", child, child, opts, undefined);\n            state = unselState == null ? !!child.selected : !!unselState; // When fixing the parents, we trust the sibling status (i.e.\n            // we don't recurse)\n\n            if (state || child.partsel) {\n              someSelected = true;\n            }\n\n            if (!state) {\n              allSelected = false;\n            }\n          }\n        } // eslint-disable-next-line no-nested-ternary\n\n\n        state = allSelected ? true : someSelected ? undefined : false;\n\n        node._changeSelectStatusAttrs(state);\n      });\n    },\n    // TODO: focus()\n\n    /**\n     * Update node data. If dict contains 'children', then also replace\n     * the hole sub tree.\n     * @param {NodeData} dict\n     *\n     * @see FancytreeNode#addChildren\n     * @see FancytreeNode#applyPatch\n     */\n    fromDict: function (dict) {\n      // copy all other attributes to this.data.xxx\n      for (var name in dict) {\n        if (NODE_ATTR_MAP[name]) {\n          // node.NAME = dict.NAME\n          this[name] = dict[name];\n        } else if (name === \"data\") {\n          // node.data += dict.data\n          $.extend(this.data, dict.data);\n        } else if (!$.isFunction(dict[name]) && !NONE_NODE_DATA_MAP[name]) {\n          // node.data.NAME = dict.NAME\n          this.data[name] = dict[name];\n        }\n      }\n\n      if (dict.children) {\n        // recursively set children and render\n        this.removeChildren();\n        this.addChildren(dict.children);\n      }\n\n      this.renderTitle();\n      /*\n      var children = dict.children;\n      if(children === undefined){\n      \tthis.data = $.extend(this.data, dict);\n      \tthis.render();\n      \treturn;\n      }\n      dict = $.extend({}, dict);\n      dict.children = undefined;\n      this.data = $.extend(this.data, dict);\n      this.removeChildren();\n      this.addChild(children);\n      */\n    },\n\n    /** Return the list of child nodes (undefined for unexpanded lazy nodes).\n     * @returns {FancytreeNode[] | undefined}\n     */\n    getChildren: function () {\n      if (this.hasChildren() === undefined) {\n        // TODO: only required for lazy nodes?\n        return undefined; // Lazy node: unloaded, currently loading, or load error\n      }\n\n      return this.children;\n    },\n\n    /** Return the first child node or null.\n     * @returns {FancytreeNode | null}\n     */\n    getFirstChild: function () {\n      return this.children ? this.children[0] : null;\n    },\n\n    /** Return the 0-based child index.\n     * @returns {int}\n     */\n    getIndex: function () {\n      // return this.parent.children.indexOf(this);\n      return $.inArray(this, this.parent.children); // indexOf doesn't work in IE7\n    },\n\n    /** Return the hierarchical child index (1-based, e.g. '3.2.4').\n     * @param {string} [separator=\".\"]\n     * @param {int} [digits=1]\n     * @returns {string}\n     */\n    getIndexHier: function (separator, digits) {\n      separator = separator || \".\";\n      var s,\n          res = [];\n      $.each(this.getParentList(false, true), function (i, o) {\n        s = \"\" + (o.getIndex() + 1);\n\n        if (digits) {\n          // prepend leading zeroes\n          s = (\"0000000\" + s).substr(-digits);\n        }\n\n        res.push(s);\n      });\n      return res.join(separator);\n    },\n\n    /** Return the parent keys separated by options.keyPathSeparator, e.g. \"/id_1/id_17/id_32\".\n     *\n     * (Unlike `node.getPath()`, this method prepends a \"/\" and inverts the first argument.)\n     *\n     * @see FancytreeNode#getPath\n     * @param {boolean} [excludeSelf=false]\n     * @returns {string}\n     */\n    getKeyPath: function (excludeSelf) {\n      var sep = this.tree.options.keyPathSeparator;\n      return sep + this.getPath(!excludeSelf, \"key\", sep);\n    },\n\n    /** Return the last child of this node or null.\n     * @returns {FancytreeNode | null}\n     */\n    getLastChild: function () {\n      return this.children ? this.children[this.children.length - 1] : null;\n    },\n\n    /** Return node depth. 0: System root node, 1: visible top-level node, 2: first sub-level, ... .\n     * @returns {int}\n     */\n    getLevel: function () {\n      var level = 0,\n          dtn = this.parent;\n\n      while (dtn) {\n        level++;\n        dtn = dtn.parent;\n      }\n\n      return level;\n    },\n\n    /** Return the successor node (under the same parent) or null.\n     * @returns {FancytreeNode | null}\n     */\n    getNextSibling: function () {\n      // TODO: use indexOf, if available: (not in IE6)\n      if (this.parent) {\n        var i,\n            l,\n            ac = this.parent.children;\n\n        for (i = 0, l = ac.length - 1; i < l; i++) {\n          // up to length-2, so next(last) = null\n          if (ac[i] === this) {\n            return ac[i + 1];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /** Return the parent node (null for the system root node).\n     * @returns {FancytreeNode | null}\n     */\n    getParent: function () {\n      // TODO: return null for top-level nodes?\n      return this.parent;\n    },\n\n    /** Return an array of all parent nodes (top-down).\n     * @param {boolean} [includeRoot=false] Include the invisible system root node.\n     * @param {boolean} [includeSelf=false] Include the node itself.\n     * @returns {FancytreeNode[]}\n     */\n    getParentList: function (includeRoot, includeSelf) {\n      var l = [],\n          dtn = includeSelf ? this : this.parent;\n\n      while (dtn) {\n        if (includeRoot || dtn.parent) {\n          l.unshift(dtn);\n        }\n\n        dtn = dtn.parent;\n      }\n\n      return l;\n    },\n\n    /** Return a string representing the hierachical node path, e.g. \"a/b/c\".\n     * @param {boolean} [includeSelf=true]\n     * @param {string | function} [part=\"title\"] node property name or callback\n     * @param {string} [separator=\"/\"]\n     * @returns {string}\n     * @since v2.31\n     */\n    getPath: function (includeSelf, part, separator) {\n      includeSelf = includeSelf !== false;\n      part = part || \"title\";\n      separator = separator || \"/\";\n      var val,\n          path = [],\n          isFunc = $.isFunction(part);\n      this.visitParents(function (n) {\n        if (n.parent) {\n          val = isFunc ? part(n) : n[part];\n          path.unshift(val);\n        }\n      }, includeSelf);\n      return path.join(separator);\n    },\n\n    /** Return the predecessor node (under the same parent) or null.\n     * @returns {FancytreeNode | null}\n     */\n    getPrevSibling: function () {\n      if (this.parent) {\n        var i,\n            l,\n            ac = this.parent.children;\n\n        for (i = 1, l = ac.length; i < l; i++) {\n          // start with 1, so prev(first) = null\n          if (ac[i] === this) {\n            return ac[i - 1];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an array of selected descendant nodes.\n     * @param {boolean} [stopOnParents=false] only return the topmost selected\n     *     node (useful with selectMode 3)\n     * @returns {FancytreeNode[]}\n     */\n    getSelectedNodes: function (stopOnParents) {\n      var nodeList = [];\n      this.visit(function (node) {\n        if (node.selected) {\n          nodeList.push(node);\n\n          if (stopOnParents === true) {\n            return \"skip\"; // stop processing this branch\n          }\n        }\n      });\n      return nodeList;\n    },\n\n    /** Return true if node has children. Return undefined if not sure, i.e. the node is lazy and not yet loaded).\n     * @returns {boolean | undefined}\n     */\n    hasChildren: function () {\n      if (this.lazy) {\n        if (this.children == null) {\n          // null or undefined: Not yet loaded\n          return undefined;\n        } else if (this.children.length === 0) {\n          // Loaded, but response was empty\n          return false;\n        } else if (this.children.length === 1 && this.children[0].isStatusNode()) {\n          // Currently loading or load error\n          return undefined;\n        }\n\n        return true;\n      }\n\n      return !!(this.children && this.children.length);\n    },\n\n    /**\n     * Return true if node has `className` defined in .extraClasses.\n     *\n     * @param {string} className class name (separate multiple classes by space)\n     * @returns {boolean}\n     *\n     * @since 2.32\n     */\n    hasClass: function (className) {\n      return (\" \" + (this.extraClasses || \"\") + \" \").indexOf(\" \" + className + \" \") >= 0;\n    },\n\n    /** Return true if node has keyboard focus.\n     * @returns {boolean}\n     */\n    hasFocus: function () {\n      return this.tree.hasFocus() && this.tree.focusNode === this;\n    },\n\n    /** Write to browser console if debugLevel >= 3 (prepending node info)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    info: function (msg) {\n      if (this.tree.options.debugLevel >= 3) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"info\", arguments);\n      }\n    },\n\n    /** Return true if node is active (see also FancytreeNode#isSelected).\n     * @returns {boolean}\n     */\n    isActive: function () {\n      return this.tree.activeNode === this;\n    },\n\n    /** Return true if node is vertically below `otherNode`, i.e. rendered in a subsequent row.\n     * @param {FancytreeNode} otherNode\n     * @returns {boolean}\n     * @since 2.28\n     */\n    isBelowOf: function (otherNode) {\n      return this.getIndexHier(\".\", 5) > otherNode.getIndexHier(\".\", 5);\n    },\n\n    /** Return true if node is a direct child of otherNode.\n     * @param {FancytreeNode} otherNode\n     * @returns {boolean}\n     */\n    isChildOf: function (otherNode) {\n      return this.parent && this.parent === otherNode;\n    },\n\n    /** Return true, if node is a direct or indirect sub node of otherNode.\n     * @param {FancytreeNode} otherNode\n     * @returns {boolean}\n     */\n    isDescendantOf: function (otherNode) {\n      if (!otherNode || otherNode.tree !== this.tree) {\n        return false;\n      }\n\n      var p = this.parent;\n\n      while (p) {\n        if (p === otherNode) {\n          return true;\n        }\n\n        if (p === p.parent) {\n          $.error(\"Recursive parent link: \" + p);\n        }\n\n        p = p.parent;\n      }\n\n      return false;\n    },\n\n    /** Return true if node is expanded.\n     * @returns {boolean}\n     */\n    isExpanded: function () {\n      return !!this.expanded;\n    },\n\n    /** Return true if node is the first node of its parent's children.\n     * @returns {boolean}\n     */\n    isFirstSibling: function () {\n      var p = this.parent;\n      return !p || p.children[0] === this;\n    },\n\n    /** Return true if node is a folder, i.e. has the node.folder attribute set.\n     * @returns {boolean}\n     */\n    isFolder: function () {\n      return !!this.folder;\n    },\n\n    /** Return true if node is the last node of its parent's children.\n     * @returns {boolean}\n     */\n    isLastSibling: function () {\n      var p = this.parent;\n      return !p || p.children[p.children.length - 1] === this;\n    },\n\n    /** Return true if node is lazy (even if data was already loaded)\n     * @returns {boolean}\n     */\n    isLazy: function () {\n      return !!this.lazy;\n    },\n\n    /** Return true if node is lazy and loaded. For non-lazy nodes always return true.\n     * @returns {boolean}\n     */\n    isLoaded: function () {\n      return !this.lazy || this.hasChildren() !== undefined; // Also checks if the only child is a status node\n    },\n\n    /** Return true if children are currently beeing loaded, i.e. a Ajax request is pending.\n     * @returns {boolean}\n     */\n    isLoading: function () {\n      return !!this._isLoading;\n    },\n\n    /*\n     * @deprecated since v2.4.0:  Use isRootNode() instead\n     */\n    isRoot: function () {\n      return this.isRootNode();\n    },\n\n    /** Return true if node is partially selected (tri-state).\n     * @returns {boolean}\n     * @since 2.23\n     */\n    isPartsel: function () {\n      return !this.selected && !!this.partsel;\n    },\n\n    /** (experimental) Return true if this is partially loaded.\n     * @returns {boolean}\n     * @since 2.15\n     */\n    isPartload: function () {\n      return !!this.partload;\n    },\n\n    /** Return true if this is the (invisible) system root node.\n     * @returns {boolean}\n     * @since 2.4\n     */\n    isRootNode: function () {\n      return this.tree.rootNode === this;\n    },\n\n    /** Return true if node is selected, i.e. has a checkmark set (see also FancytreeNode#isActive).\n     * @returns {boolean}\n     */\n    isSelected: function () {\n      return !!this.selected;\n    },\n\n    /** Return true if this node is a temporarily generated system node like\n     * 'loading', 'paging', or 'error' (node.statusNodeType contains the type).\n     * @returns {boolean}\n     */\n    isStatusNode: function () {\n      return !!this.statusNodeType;\n    },\n\n    /** Return true if this node is a status node of type 'paging'.\n     * @returns {boolean}\n     * @since 2.15\n     */\n    isPagingNode: function () {\n      return this.statusNodeType === \"paging\";\n    },\n\n    /** Return true if this a top level node, i.e. a direct child of the (invisible) system root node.\n     * @returns {boolean}\n     * @since 2.4\n     */\n    isTopLevel: function () {\n      return this.tree.rootNode === this.parent;\n    },\n\n    /** Return true if node is lazy and not yet loaded. For non-lazy nodes always return false.\n     * @returns {boolean}\n     */\n    isUndefined: function () {\n      return this.hasChildren() === undefined; // also checks if the only child is a status node\n    },\n\n    /** Return true if all parent nodes are expanded. Note: this does not check\n     * whether the node is scrolled into the visible part of the screen.\n     * @returns {boolean}\n     */\n    isVisible: function () {\n      var i,\n          l,\n          n,\n          hasFilter = this.tree.enableFilter,\n          parents = this.getParentList(false, false); // TODO: check $(n.span).is(\":visible\")\n      // i.e. return false for nodes (but not parents) that are hidden\n      // by a filter\n\n      if (hasFilter && !this.match && !this.subMatchCount) {\n        // this.debug( \"isVisible: HIDDEN (\" + hasFilter + \", \" + this.match + \", \" + this.match + \")\" );\n        return false;\n      }\n\n      for (i = 0, l = parents.length; i < l; i++) {\n        n = parents[i];\n\n        if (!n.expanded) {\n          // this.debug(\"isVisible: HIDDEN (parent collapsed)\");\n          return false;\n        } // if (hasFilter && !n.match && !n.subMatchCount) {\n        // \tthis.debug(\"isVisible: HIDDEN (\" + hasFilter + \", \" + this.match + \", \" + this.match + \")\");\n        // \treturn false;\n        // }\n\n      } // this.debug(\"isVisible: VISIBLE\");\n\n\n      return true;\n    },\n\n    /** Deprecated.\n     * @deprecated since 2014-02-16: use load() instead.\n     */\n    lazyLoad: function (discard) {\n      $.error(\"FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead.\");\n    },\n\n    /**\n     * Load all children of a lazy node if neccessary. The <i>expanded</i> state is maintained.\n     * @param {boolean} [forceReload=false] Pass true to discard any existing nodes before. Otherwise this method does nothing if the node was already loaded.\n     * @returns {$.Promise}\n     */\n    load: function (forceReload) {\n      var res,\n          source,\n          self = this,\n          wasExpanded = this.isExpanded();\n\n      _assert(this.isLazy(), \"load() requires a lazy node\"); // _assert( forceReload || this.isUndefined(), \"Pass forceReload=true to re-load a lazy node\" );\n\n\n      if (!forceReload && !this.isUndefined()) {\n        return _getResolvedPromise(this);\n      }\n\n      if (this.isLoaded()) {\n        this.resetLazy(); // also collapses\n      } // This method is also called by setExpanded() and loadKeyPath(), so we\n      // have to avoid recursion.\n\n\n      source = this.tree._triggerNodeEvent(\"lazyLoad\", this);\n\n      if (source === false) {\n        // #69\n        return _getResolvedPromise(this);\n      }\n\n      _assert(typeof source !== \"boolean\", \"lazyLoad event must return source in data.result\");\n\n      res = this.tree._callHook(\"nodeLoadChildren\", this, source);\n\n      if (wasExpanded) {\n        this.expanded = true;\n        res.always(function () {\n          self.render();\n        });\n      } else {\n        res.always(function () {\n          self.renderStatus(); // fix expander icon to 'loaded'\n        });\n      }\n\n      return res;\n    },\n\n    /** Expand all parents and optionally scroll into visible area as neccessary.\n     * Promise is resolved, when lazy loading and animations are done.\n     * @param {object} [opts] passed to `setExpanded()`.\n     *     Defaults to {noAnimation: false, noEvents: false, scrollIntoView: true}\n     * @returns {$.Promise}\n     */\n    makeVisible: function (opts) {\n      var i,\n          self = this,\n          deferreds = [],\n          dfd = new $.Deferred(),\n          parents = this.getParentList(false, false),\n          len = parents.length,\n          effects = !(opts && opts.noAnimation === true),\n          scroll = !(opts && opts.scrollIntoView === false); // Expand bottom-up, so only the top node is animated\n\n      for (i = len - 1; i >= 0; i--) {\n        // self.debug(\"pushexpand\" + parents[i]);\n        deferreds.push(parents[i].setExpanded(true, opts));\n      }\n\n      $.when.apply($, deferreds).done(function () {\n        // All expands have finished\n        // self.debug(\"expand DONE\", scroll);\n        if (scroll) {\n          self.scrollIntoView(effects).done(function () {\n            // self.debug(\"scroll DONE\");\n            dfd.resolve();\n          });\n        } else {\n          dfd.resolve();\n        }\n      });\n      return dfd.promise();\n    },\n\n    /** Move this node to targetNode.\n     *  @param {FancytreeNode} targetNode\n     *  @param {string} mode <pre>\n     *      'child': append this node as last child of targetNode.\n     *               This is the default. To be compatble with the D'n'd\n     *               hitMode, we also accept 'over'.\n     *      'firstChild': add this node as first child of targetNode.\n     *      'before': add this node as sibling before targetNode.\n     *      'after': add this node as sibling after targetNode.</pre>\n     *  @param {function} [map] optional callback(FancytreeNode) to allow modifcations\n     */\n    moveTo: function (targetNode, mode, map) {\n      if (mode === undefined || mode === \"over\") {\n        mode = \"child\";\n      } else if (mode === \"firstChild\") {\n        if (targetNode.children && targetNode.children.length) {\n          mode = \"before\";\n          targetNode = targetNode.children[0];\n        } else {\n          mode = \"child\";\n        }\n      }\n\n      var pos,\n          tree = this.tree,\n          prevParent = this.parent,\n          targetParent = mode === \"child\" ? targetNode : targetNode.parent;\n\n      if (this === targetNode) {\n        return;\n      } else if (!this.parent) {\n        $.error(\"Cannot move system root\");\n      } else if (targetParent.isDescendantOf(this)) {\n        $.error(\"Cannot move a node to its own descendant\");\n      }\n\n      if (targetParent !== prevParent) {\n        prevParent.triggerModifyChild(\"remove\", this);\n      } // Unlink this node from current parent\n\n\n      if (this.parent.children.length === 1) {\n        if (this.parent === targetParent) {\n          return; // #258\n        }\n\n        this.parent.children = this.parent.lazy ? [] : null;\n        this.parent.expanded = false;\n      } else {\n        pos = $.inArray(this, this.parent.children);\n\n        _assert(pos >= 0, \"invalid source parent\");\n\n        this.parent.children.splice(pos, 1);\n      } // Remove from source DOM parent\n      // if(this.parent.ul){\n      // \tthis.parent.ul.removeChild(this.li);\n      // }\n      // Insert this node to target parent's child list\n\n\n      this.parent = targetParent;\n\n      if (targetParent.hasChildren()) {\n        switch (mode) {\n          case \"child\":\n            // Append to existing target children\n            targetParent.children.push(this);\n            break;\n\n          case \"before\":\n            // Insert this node before target node\n            pos = $.inArray(targetNode, targetParent.children);\n\n            _assert(pos >= 0, \"invalid target parent\");\n\n            targetParent.children.splice(pos, 0, this);\n            break;\n\n          case \"after\":\n            // Insert this node after target node\n            pos = $.inArray(targetNode, targetParent.children);\n\n            _assert(pos >= 0, \"invalid target parent\");\n\n            targetParent.children.splice(pos + 1, 0, this);\n            break;\n\n          default:\n            $.error(\"Invalid mode \" + mode);\n        }\n      } else {\n        targetParent.children = [this];\n      } // Parent has no <ul> tag yet:\n      // if( !targetParent.ul ) {\n      // \t// This is the parent's first child: create UL tag\n      // \t// (Hidden, because it will be\n      // \ttargetParent.ul = document.createElement(\"ul\");\n      // \ttargetParent.ul.style.display = \"none\";\n      // \ttargetParent.li.appendChild(targetParent.ul);\n      // }\n      // // Issue 319: Add to target DOM parent (only if node was already rendered(expanded))\n      // if(this.li){\n      // \ttargetParent.ul.appendChild(this.li);\n      // }\n      // Let caller modify the nodes\n\n\n      if (map) {\n        targetNode.visit(map, true);\n      }\n\n      if (targetParent === prevParent) {\n        targetParent.triggerModifyChild(\"move\", this);\n      } else {\n        // prevParent.triggerModifyChild(\"remove\", this);\n        targetParent.triggerModifyChild(\"add\", this);\n      } // Handle cross-tree moves\n\n\n      if (tree !== targetNode.tree) {\n        // Fix node.tree for all source nodes\n        // \t_assert(false, \"Cross-tree move is not yet implemented.\");\n        this.warn(\"Cross-tree moveTo is experimental!\");\n        this.visit(function (n) {\n          // TODO: fix selection state and activation, ...\n          n.tree = targetNode.tree;\n        }, true);\n      } // A collaposed node won't re-render children, so we have to remove it manually\n      // if( !targetParent.expanded ){\n      //   prevParent.ul.removeChild(this.li);\n      // }\n\n\n      tree._callHook(\"treeStructureChanged\", tree, \"moveTo\"); // Update HTML markup\n\n\n      if (!prevParent.isDescendantOf(targetParent)) {\n        prevParent.render();\n      }\n\n      if (!targetParent.isDescendantOf(prevParent) && targetParent !== prevParent) {\n        targetParent.render();\n      } // TODO: fix selection state\n      // TODO: fix active state\n\n      /*\n      var tree = this.tree;\n      var opts = tree.options;\n      var pers = tree.persistence;\n      \t// Always expand, if it's below minExpandLevel\n      // tree.logDebug (\"%s._addChildNode(%o), l=%o\", this, ftnode, ftnode.getLevel());\n      if ( opts.minExpandLevel >= ftnode.getLevel() ) {\n      \t// tree.logDebug (\"Force expand for %o\", ftnode);\n      \tthis.bExpanded = true;\n      }\n      \t// In multi-hier mode, update the parents selection state\n      // DT issue #82: only if not initializing, because the children may not exist yet\n      // if( !ftnode.data.isStatusNode() && opts.selectMode==3 && !isInitializing )\n      // \tftnode._fixSelectionState();\n      \t// In multi-hier mode, update the parents selection state\n      if( ftnode.bSelected && opts.selectMode==3 ) {\n      \tvar p = this;\n      \twhile( p ) {\n      \t\tif( !p.hasSubSel )\n      \t\t\tp._setSubSel(true);\n      \t\tp = p.parent;\n      \t}\n      }\n      // render this node and the new child\n      if ( tree.bEnableUpdate )\n      \tthis.render();\n      return ftnode;\n      */\n\n    },\n\n    /** Set focus relative to this node and optionally activate.\n     *\n     * 'left' collapses the node if it is expanded, or move to the parent\n     * otherwise.\n     * 'right' expands the node if it is collapsed, or move to the first\n     * child otherwise.\n     *\n     * @param {string|number} where 'down', 'first', 'last', 'left', 'parent', 'right', or 'up'.\n     *   (Alternatively the keyCode that would normally trigger this move,\n     *   e.g. `$.ui.keyCode.LEFT` = 'left'.\n     * @param {boolean} [activate=true]\n     * @returns {$.Promise}\n     */\n    navigate: function (where, activate) {\n      var node,\n          KC = $.ui.keyCode; // Handle optional expand/collapse action for LEFT/RIGHT\n\n      switch (where) {\n        case \"left\":\n        case KC.LEFT:\n          if (this.expanded) {\n            return this.setExpanded(false);\n          }\n\n          break;\n\n        case \"right\":\n        case KC.RIGHT:\n          if (!this.expanded && (this.children || this.lazy)) {\n            return this.setExpanded();\n          }\n\n          break;\n      } // Otherwise activate or focus the related node\n\n\n      node = this.findRelatedNode(where);\n\n      if (node) {\n        // setFocus/setActive will scroll later (if autoScroll is specified)\n        try {\n          node.makeVisible({\n            scrollIntoView: false\n          });\n        } catch (e) {} // #272\n\n\n        if (activate === false) {\n          node.setFocus();\n          return _getResolvedPromise();\n        }\n\n        return node.setActive();\n      }\n\n      this.warn(\"Could not find related node '\" + where + \"'.\");\n      return _getResolvedPromise();\n    },\n\n    /**\n     * Remove this node (not allowed for system root).\n     */\n    remove: function () {\n      return this.parent.removeChild(this);\n    },\n\n    /**\n     * Remove childNode from list of direct children.\n     * @param {FancytreeNode} childNode\n     */\n    removeChild: function (childNode) {\n      return this.tree._callHook(\"nodeRemoveChild\", this, childNode);\n    },\n\n    /**\n     * Remove all child nodes and descendents. This converts the node into a leaf.<br>\n     * If this was a lazy node, it is still considered 'loaded'; call node.resetLazy()\n     * in order to trigger lazyLoad on next expand.\n     */\n    removeChildren: function () {\n      return this.tree._callHook(\"nodeRemoveChildren\", this);\n    },\n\n    /**\n     * Remove class from node's span tag and .extraClasses.\n     *\n     * @param {string} className class name\n     *\n     * @since 2.17\n     */\n    removeClass: function (className) {\n      return this.toggleClass(className, false);\n    },\n\n    /**\n     * This method renders and updates all HTML markup that is required\n     * to display this node in its current state.<br>\n     * Note:\n     * <ul>\n     * <li>It should only be neccessary to call this method after the node object\n     *     was modified by direct access to its properties, because the common\n     *     API methods (node.setTitle(), moveTo(), addChildren(), remove(), ...)\n     *     already handle this.\n     * <li> {@link FancytreeNode#renderTitle} and {@link FancytreeNode#renderStatus}\n     *     are implied. If changes are more local, calling only renderTitle() or\n     *     renderStatus() may be sufficient and faster.\n     * </ul>\n     *\n     * @param {boolean} [force=false] re-render, even if html markup was already created\n     * @param {boolean} [deep=false] also render all descendants, even if parent is collapsed\n     */\n    render: function (force, deep) {\n      return this.tree._callHook(\"nodeRender\", this, force, deep);\n    },\n\n    /** Create HTML markup for the node's outer `<span>` (expander, checkbox, icon, and title).\n     * Implies {@link FancytreeNode#renderStatus}.\n     * @see Fancytree_Hooks#nodeRenderTitle\n     */\n    renderTitle: function () {\n      return this.tree._callHook(\"nodeRenderTitle\", this);\n    },\n\n    /** Update element's CSS classes according to node state.\n     * @see Fancytree_Hooks#nodeRenderStatus\n     */\n    renderStatus: function () {\n      return this.tree._callHook(\"nodeRenderStatus\", this);\n    },\n\n    /**\n     * (experimental) Replace this node with `source`.\n     * (Currently only available for paging nodes.)\n     * @param {NodeData[]} source List of child node definitions\n     * @since 2.15\n     */\n    replaceWith: function (source) {\n      var res,\n          parent = this.parent,\n          pos = $.inArray(this, parent.children),\n          self = this;\n\n      _assert(this.isPagingNode(), \"replaceWith() currently requires a paging status node\");\n\n      res = this.tree._callHook(\"nodeLoadChildren\", this, source);\n      res.done(function (data) {\n        // New nodes are currently children of `this`.\n        var children = self.children; // Prepend newly loaded child nodes to `this`\n        // Move new children after self\n\n        for (i = 0; i < children.length; i++) {\n          children[i].parent = parent;\n        }\n\n        parent.children.splice.apply(parent.children, [pos + 1, 0].concat(children)); // Remove self\n\n        self.children = null;\n        self.remove(); // Redraw new nodes\n\n        parent.render(); // TODO: set node.partload = false if this was tha last paging node?\n        // parent.addPagingNode(false);\n      }).fail(function () {\n        self.setExpanded();\n      });\n      return res; // $.error(\"Not implemented: replaceWith()\");\n    },\n\n    /**\n     * Remove all children, collapse, and set the lazy-flag, so that the lazyLoad\n     * event is triggered on next expand.\n     */\n    resetLazy: function () {\n      this.removeChildren();\n      this.expanded = false;\n      this.lazy = true;\n      this.children = undefined;\n      this.renderStatus();\n    },\n\n    /** Schedule activity for delayed execution (cancel any pending request).\n     *  scheduleAction('cancel') will only cancel a pending request (if any).\n     * @param {string} mode\n     * @param {number} ms\n     */\n    scheduleAction: function (mode, ms) {\n      if (this.tree.timer) {\n        clearTimeout(this.tree.timer);\n        this.tree.debug(\"clearTimeout(%o)\", this.tree.timer);\n      }\n\n      this.tree.timer = null;\n      var self = this; // required for closures\n\n      switch (mode) {\n        case \"cancel\":\n          // Simply made sure that timer was cleared\n          break;\n\n        case \"expand\":\n          this.tree.timer = setTimeout(function () {\n            self.tree.debug(\"setTimeout: trigger expand\");\n            self.setExpanded(true);\n          }, ms);\n          break;\n\n        case \"activate\":\n          this.tree.timer = setTimeout(function () {\n            self.tree.debug(\"setTimeout: trigger activate\");\n            self.setActive(true);\n          }, ms);\n          break;\n\n        default:\n          $.error(\"Invalid mode \" + mode);\n      } // this.tree.debug(\"setTimeout(%s, %s): %s\", mode, ms, this.tree.timer);\n\n    },\n\n    /**\n     *\n     * @param {boolean | PlainObject} [effects=false] animation options.\n     * @param {object} [options=null] {topNode: null, effects: ..., parent: ...} this node will remain visible in\n     *     any case, even if `this` is outside the scroll pane.\n     * @returns {$.Promise}\n     */\n    scrollIntoView: function (effects, options) {\n      if (options !== undefined && _isNode(options)) {\n        throw Error(\"scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead.\");\n      } // The scroll parent is typically the plain tree's <UL> container.\n      // For ext-table, we choose the nearest parent that has `position: relative`\n      // and `overflow` set.\n      // (This default can be overridden by the local or global `scrollParent` option.)\n\n\n      var opts = $.extend({\n        effects: effects === true ? {\n          duration: 200,\n          queue: false\n        } : effects,\n        scrollOfs: this.tree.options.scrollOfs,\n        scrollParent: this.tree.options.scrollParent,\n        topNode: null\n      }, options),\n          $scrollParent = opts.scrollParent,\n          $container = this.tree.$container,\n          overflowY = $container.css(\"overflow-y\");\n\n      if (!$scrollParent) {\n        if (this.tree.tbody) {\n          $scrollParent = $container.scrollParent();\n        } else if (overflowY === \"scroll\" || overflowY === \"auto\") {\n          $scrollParent = $container;\n        } else {\n          // #922 plain tree in a non-fixed-sized UL scrolls inside its parent\n          $scrollParent = $container.scrollParent();\n        }\n      } else if (!$scrollParent.jquery) {\n        // Make sure we have a jQuery object\n        $scrollParent = $($scrollParent);\n      }\n\n      if ($scrollParent[0] === document || $scrollParent[0] === document.body) {\n        // `document` may be returned by $().scrollParent(), if nothing is found,\n        // but would not work: (see #894)\n        this.debug(\"scrollIntoView(): normalizing scrollParent to 'window':\", $scrollParent[0]);\n        $scrollParent = $(window);\n      } // eslint-disable-next-line one-var\n\n\n      var topNodeY,\n          nodeY,\n          horzScrollbarHeight,\n          containerOffsetTop,\n          dfd = new $.Deferred(),\n          self = this,\n          nodeHeight = $(this.span).height(),\n          topOfs = opts.scrollOfs.top || 0,\n          bottomOfs = opts.scrollOfs.bottom || 0,\n          containerHeight = $scrollParent.height(),\n          scrollTop = $scrollParent.scrollTop(),\n          $animateTarget = $scrollParent,\n          isParentWindow = $scrollParent[0] === window,\n          topNode = opts.topNode || null,\n          newScrollTop = null; // this.debug(\"scrollIntoView(), scrollTop=\" + scrollTop, opts.scrollOfs);\n      // _assert($(this.span).is(\":visible\"), \"scrollIntoView node is invisible\"); // otherwise we cannot calc offsets\n\n      if (this.isRootNode() || !this.isVisible()) {\n        // We cannot calc offsets for hidden elements\n        this.info(\"scrollIntoView(): node is invisible.\");\n        return _getResolvedPromise();\n      }\n\n      if (isParentWindow) {\n        nodeY = $(this.span).offset().top;\n        topNodeY = topNode && topNode.span ? $(topNode.span).offset().top : 0;\n        $animateTarget = $(\"html,body\");\n      } else {\n        _assert($scrollParent[0] !== document && $scrollParent[0] !== document.body, \"scrollParent should be a simple element or `window`, not document or body.\");\n\n        containerOffsetTop = $scrollParent.offset().top;\n        nodeY = $(this.span).offset().top - containerOffsetTop + scrollTop; // relative to scroll parent\n\n        topNodeY = topNode ? $(topNode.span).offset().top - containerOffsetTop + scrollTop : 0;\n        horzScrollbarHeight = Math.max(0, $scrollParent.innerHeight() - $scrollParent[0].clientHeight);\n        containerHeight -= horzScrollbarHeight;\n      } // this.debug(\"    scrollIntoView(), nodeY=\" + nodeY + \", containerHeight=\" + containerHeight);\n\n\n      if (nodeY < scrollTop + topOfs) {\n        // Node is above visible container area\n        newScrollTop = nodeY - topOfs; // this.debug(\"    scrollIntoView(), UPPER newScrollTop=\" + newScrollTop);\n      } else if (nodeY + nodeHeight > scrollTop + containerHeight - bottomOfs) {\n        newScrollTop = nodeY + nodeHeight - containerHeight + bottomOfs; // this.debug(\"    scrollIntoView(), LOWER newScrollTop=\" + newScrollTop);\n        // If a topNode was passed, make sure that it is never scrolled\n        // outside the upper border\n\n        if (topNode) {\n          _assert(topNode.isRootNode() || topNode.isVisible(), \"topNode must be visible\");\n\n          if (topNodeY < newScrollTop) {\n            newScrollTop = topNodeY - topOfs; // this.debug(\"    scrollIntoView(), TOP newScrollTop=\" + newScrollTop);\n          }\n        }\n      }\n\n      if (newScrollTop === null) {\n        dfd.resolveWith(this);\n      } else {\n        // this.debug(\"    scrollIntoView(), SET newScrollTop=\" + newScrollTop);\n        if (opts.effects) {\n          opts.effects.complete = function () {\n            dfd.resolveWith(self);\n          };\n\n          $animateTarget.stop(true).animate({\n            scrollTop: newScrollTop\n          }, opts.effects);\n        } else {\n          $animateTarget[0].scrollTop = newScrollTop;\n          dfd.resolveWith(this);\n        }\n      }\n\n      return dfd.promise();\n    },\n\n    /**Activate this node.\n     *\n     * The `cell` option requires the ext-table and ext-ariagrid extensions.\n     *\n     * @param {boolean} [flag=true] pass false to deactivate\n     * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false, cell: null}\n     * @returns {$.Promise}\n     */\n    setActive: function (flag, opts) {\n      return this.tree._callHook(\"nodeSetActive\", this, flag, opts);\n    },\n\n    /**Expand or collapse this node. Promise is resolved, when lazy loading and animations are done.\n     * @param {boolean} [flag=true] pass false to collapse\n     * @param {object} [opts] additional options. Defaults to {noAnimation: false, noEvents: false}\n     * @returns {$.Promise}\n     */\n    setExpanded: function (flag, opts) {\n      return this.tree._callHook(\"nodeSetExpanded\", this, flag, opts);\n    },\n\n    /**Set keyboard focus to this node.\n     * @param {boolean} [flag=true] pass false to blur\n     * @see Fancytree#setFocus\n     */\n    setFocus: function (flag) {\n      return this.tree._callHook(\"nodeSetFocus\", this, flag);\n    },\n\n    /**Select this node, i.e. check the checkbox.\n     * @param {boolean} [flag=true] pass false to deselect\n     * @param {object} [opts] additional options. Defaults to {noEvents: false, p\n     *     propagateDown: null, propagateUp: null, callback: null }\n     */\n    setSelected: function (flag, opts) {\n      return this.tree._callHook(\"nodeSetSelected\", this, flag, opts);\n    },\n\n    /**Mark a lazy node as 'error', 'loading', 'nodata', or 'ok'.\n     * @param {string} status 'error'|'loading'|'nodata'|'ok'\n     * @param {string} [message]\n     * @param {string} [details]\n     */\n    setStatus: function (status, message, details) {\n      return this.tree._callHook(\"nodeSetStatus\", this, status, message, details);\n    },\n\n    /**Rename this node.\n     * @param {string} title\n     */\n    setTitle: function (title) {\n      this.title = title;\n      this.renderTitle();\n      this.triggerModify(\"rename\");\n    },\n\n    /**Sort child list by title.\n     * @param {function} [cmp] custom compare function(a, b) that returns -1, 0, or 1 (defaults to sort by title).\n     * @param {boolean} [deep=false] pass true to sort all descendant nodes\n     */\n    sortChildren: function (cmp, deep) {\n      var i,\n          l,\n          cl = this.children;\n\n      if (!cl) {\n        return;\n      }\n\n      cmp = cmp || function (a, b) {\n        var x = a.title.toLowerCase(),\n            y = b.title.toLowerCase(); // eslint-disable-next-line no-nested-ternary\n\n        return x === y ? 0 : x > y ? 1 : -1;\n      };\n\n      cl.sort(cmp);\n\n      if (deep) {\n        for (i = 0, l = cl.length; i < l; i++) {\n          if (cl[i].children) {\n            cl[i].sortChildren(cmp, \"$norender$\");\n          }\n        }\n      }\n\n      if (deep !== \"$norender$\") {\n        this.render();\n      }\n\n      this.triggerModifyChild(\"sort\");\n    },\n\n    /** Convert node (or whole branch) into a plain object.\n     *\n     * The result is compatible with node.addChildren().\n     *\n     * @param {boolean} [recursive=false] include child nodes\n     * @param {function} [callback] callback(dict, node) is called for every node, in order to allow modifications.\n     *     Return `false` to ignore this node or `\"skip\"` to include this node without its children.\n     * @returns {NodeData}\n     */\n    toDict: function (recursive, callback) {\n      var i,\n          l,\n          node,\n          res,\n          dict = {},\n          self = this;\n      $.each(NODE_ATTRS, function (i, a) {\n        if (self[a] || self[a] === false) {\n          dict[a] = self[a];\n        }\n      });\n\n      if (!$.isEmptyObject(this.data)) {\n        dict.data = $.extend({}, this.data);\n\n        if ($.isEmptyObject(dict.data)) {\n          delete dict.data;\n        }\n      }\n\n      if (callback) {\n        res = callback(dict, self);\n\n        if (res === false) {\n          return false; // Don't include this node nor its children\n        }\n\n        if (res === \"skip\") {\n          recursive = false; // Include this node, but not the children\n        }\n      }\n\n      if (recursive) {\n        if ($.isArray(this.children)) {\n          dict.children = [];\n\n          for (i = 0, l = this.children.length; i < l; i++) {\n            node = this.children[i];\n\n            if (!node.isStatusNode()) {\n              res = node.toDict(true, callback);\n\n              if (res !== false) {\n                dict.children.push(res);\n              }\n            }\n          }\n        }\n      }\n\n      return dict;\n    },\n\n    /**\n     * Set, clear, or toggle class of node's span tag and .extraClasses.\n     *\n     * @param {string} className class name (separate multiple classes by space)\n     * @param {boolean} [flag] true/false to add/remove class. If omitted, class is toggled.\n     * @returns {boolean} true if a class was added\n     *\n     * @since 2.17\n     */\n    toggleClass: function (value, flag) {\n      var className,\n          hasClass,\n          rnotwhite = /\\S+/g,\n          classNames = value.match(rnotwhite) || [],\n          i = 0,\n          wasAdded = false,\n          statusElem = this[this.tree.statusClassPropName],\n          curClasses = \" \" + (this.extraClasses || \"\") + \" \"; // this.info(\"toggleClass('\" + value + \"', \" + flag + \")\", curClasses);\n      // Modify DOM element directly if it already exists\n\n      if (statusElem) {\n        $(statusElem).toggleClass(value, flag);\n      } // Modify node.extraClasses to make this change persistent\n      // Toggle if flag was not passed\n\n\n      while (className = classNames[i++]) {\n        hasClass = curClasses.indexOf(\" \" + className + \" \") >= 0;\n        flag = flag === undefined ? !hasClass : !!flag;\n\n        if (flag) {\n          if (!hasClass) {\n            curClasses += className + \" \";\n            wasAdded = true;\n          }\n        } else {\n          while (curClasses.indexOf(\" \" + className + \" \") > -1) {\n            curClasses = curClasses.replace(\" \" + className + \" \", \" \");\n          }\n        }\n      }\n\n      this.extraClasses = $.trim(curClasses); // this.info(\"-> toggleClass('\" + value + \"', \" + flag + \"): '\" + this.extraClasses + \"'\");\n\n      return wasAdded;\n    },\n\n    /** Flip expanded status. */\n    toggleExpanded: function () {\n      return this.tree._callHook(\"nodeToggleExpanded\", this);\n    },\n\n    /** Flip selection status. */\n    toggleSelected: function () {\n      return this.tree._callHook(\"nodeToggleSelected\", this);\n    },\n    toString: function () {\n      return \"FancytreeNode@\" + this.key + \"[title='\" + this.title + \"']\"; // return \"<FancytreeNode(#\" + this.key + \", '\" + this.title + \"')>\";\n    },\n\n    /**\n     * Trigger `modifyChild` event on a parent to signal that a child was modified.\n     * @param {string} operation Type of change: 'add', 'remove', 'rename', 'move', 'data', ...\n     * @param {FancytreeNode} [childNode]\n     * @param {object} [extra]\n     */\n    triggerModifyChild: function (operation, childNode, extra) {\n      var data,\n          modifyChild = this.tree.options.modifyChild;\n\n      if (modifyChild) {\n        if (childNode && childNode.parent !== this) {\n          $.error(\"childNode \" + childNode + \" is not a child of \" + this);\n        }\n\n        data = {\n          node: this,\n          tree: this.tree,\n          operation: operation,\n          childNode: childNode || null\n        };\n\n        if (extra) {\n          $.extend(data, extra);\n        }\n\n        modifyChild({\n          type: \"modifyChild\"\n        }, data);\n      }\n    },\n\n    /**\n     * Trigger `modifyChild` event on node.parent(!).\n     * @param {string} operation Type of change: 'add', 'remove', 'rename', 'move', 'data', ...\n     * @param {object} [extra]\n     */\n    triggerModify: function (operation, extra) {\n      this.parent.triggerModifyChild(operation, this, extra);\n    },\n\n    /** Call fn(node) for all child nodes in hierarchical order (depth-first).<br>\n     * Stop iteration, if fn() returns false. Skip current branch, if fn() returns \"skip\".<br>\n     * Return false if iteration was stopped.\n     *\n     * @param {function} fn the callback function.\n     *     Return false to stop iteration, return \"skip\" to skip this node and\n     *     its children only.\n     * @param {boolean} [includeSelf=false]\n     * @returns {boolean}\n     */\n    visit: function (fn, includeSelf) {\n      var i,\n          l,\n          res = true,\n          children = this.children;\n\n      if (includeSelf === true) {\n        res = fn(this);\n\n        if (res === false || res === \"skip\") {\n          return res;\n        }\n      }\n\n      if (children) {\n        for (i = 0, l = children.length; i < l; i++) {\n          res = children[i].visit(fn, true);\n\n          if (res === false) {\n            break;\n          }\n        }\n      }\n\n      return res;\n    },\n\n    /** Call fn(node) for all child nodes and recursively load lazy children.<br>\n     * <b>Note:</b> If you need this method, you probably should consider to review\n     * your architecture! Recursivley loading nodes is a perfect way for lazy\n     * programmers to flood the server with requests ;-)\n     *\n     * @param {function} [fn] optional callback function.\n     *     Return false to stop iteration, return \"skip\" to skip this node and\n     *     its children only.\n     * @param {boolean} [includeSelf=false]\n     * @returns {$.Promise}\n     * @since 2.4\n     */\n    visitAndLoad: function (fn, includeSelf, _recursion) {\n      var dfd,\n          res,\n          loaders,\n          node = this; // node.debug(\"visitAndLoad\");\n\n      if (fn && includeSelf === true) {\n        res = fn(node);\n\n        if (res === false || res === \"skip\") {\n          return _recursion ? res : _getResolvedPromise();\n        }\n      }\n\n      if (!node.children && !node.lazy) {\n        return _getResolvedPromise();\n      }\n\n      dfd = new $.Deferred();\n      loaders = []; // node.debug(\"load()...\");\n\n      node.load().done(function () {\n        // node.debug(\"load()... done.\");\n        for (var i = 0, l = node.children.length; i < l; i++) {\n          res = node.children[i].visitAndLoad(fn, true, true);\n\n          if (res === false) {\n            dfd.reject();\n            break;\n          } else if (res !== \"skip\") {\n            loaders.push(res); // Add promise to the list\n          }\n        }\n\n        $.when.apply(this, loaders).then(function () {\n          dfd.resolve();\n        });\n      });\n      return dfd.promise();\n    },\n\n    /** Call fn(node) for all parent nodes, bottom-up, including invisible system root.<br>\n     * Stop iteration, if fn() returns false.<br>\n     * Return false if iteration was stopped.\n     *\n     * @param {function} fn the callback function.\n     *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n     * @param {boolean} [includeSelf=false]\n     * @returns {boolean}\n     */\n    visitParents: function (fn, includeSelf) {\n      // Visit parent nodes (bottom up)\n      if (includeSelf && fn(this) === false) {\n        return false;\n      }\n\n      var p = this.parent;\n\n      while (p) {\n        if (fn(p) === false) {\n          return false;\n        }\n\n        p = p.parent;\n      }\n\n      return true;\n    },\n\n    /** Call fn(node) for all sibling nodes.<br>\n     * Stop iteration, if fn() returns false.<br>\n     * Return false if iteration was stopped.\n     *\n     * @param {function} fn the callback function.\n     *     Return false to stop iteration.\n     * @param {boolean} [includeSelf=false]\n     * @returns {boolean}\n     */\n    visitSiblings: function (fn, includeSelf) {\n      var i,\n          l,\n          n,\n          ac = this.parent.children;\n\n      for (i = 0, l = ac.length; i < l; i++) {\n        n = ac[i];\n\n        if (includeSelf || n !== this) {\n          if (fn(n) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /** Write warning to browser console if debugLevel >= 2 (prepending node info)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    warn: function (msg) {\n      if (this.tree.options.debugLevel >= 2) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"warn\", arguments);\n      }\n    }\n  };\n  /******************************************************************************\n   * Fancytree\n   */\n\n  /**\n   * Construct a new tree object.\n   *\n   * @class Fancytree\n   * @classdesc The controller behind a fancytree.\n   * This class also contains 'hook methods': see {@link Fancytree_Hooks}.\n   *\n   * @param {Widget} widget\n   *\n   * @property {string} _id Automatically generated unique tree instance ID, e.g. \"1\".\n   * @property {string} _ns Automatically generated unique tree namespace, e.g. \".fancytree-1\".\n   * @property {FancytreeNode} activeNode Currently active node or null.\n   * @property {string} ariaPropName Property name of FancytreeNode that contains the element which will receive the aria attributes.\n   *     Typically \"li\", but \"tr\" for table extension.\n   * @property {jQueryObject} $container Outer `<ul>` element (or `<table>` element for ext-table).\n   * @property {jQueryObject} $div A jQuery object containing the element used to instantiate the tree widget (`widget.element`)\n   * @property {object|array} columns Recommended place to store shared column meta data. @since 2.27\n   * @property {object} data Metadata, i.e. properties that may be passed to `source` in addition to a children array.\n   * @property {object} ext Hash of all active plugin instances.\n   * @property {FancytreeNode} focusNode Currently focused node or null.\n   * @property {FancytreeNode} lastSelectedNode Used to implement selectMode 1 (single select)\n   * @property {string} nodeContainerAttrName Property name of FancytreeNode that contains the outer element of single nodes.\n   *     Typically \"li\", but \"tr\" for table extension.\n   * @property {FancytreeOptions} options Current options, i.e. default options + options passed to constructor.\n   * @property {FancytreeNode} rootNode Invisible system root node.\n   * @property {string} statusClassPropName Property name of FancytreeNode that contains the element which will receive the status classes.\n   *     Typically \"span\", but \"tr\" for table extension.\n   * @property {object} types Map for shared type specific meta data, used with node.type attribute. @since 2.27\n   * @property {object} viewport See ext-vieport. @since v2.31\n   * @property {object} widget Base widget instance.\n   */\n\n  function Fancytree(widget) {\n    this.widget = widget;\n    this.$div = widget.element;\n    this.options = widget.options;\n\n    if (this.options) {\n      if (this.options.lazyload !== undefined) {\n        $.error(\"The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead.\");\n      }\n\n      if (this.options.loaderror !== undefined) {\n        $.error(\"The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead.\");\n      }\n\n      if (this.options.fx !== undefined) {\n        $.error(\"The 'fx' option was replaced by 'toggleEffect' since 2014-11-30.\");\n      }\n\n      if (this.options.removeNode !== undefined) {\n        $.error(\"The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10).\");\n      }\n    }\n\n    this.ext = {}; // Active extension instances\n\n    this.types = {};\n    this.columns = {}; // allow to init tree.data.foo from <div data-foo=''>\n\n    this.data = _getElementDataAsDict(this.$div); // TODO: use widget.uuid instead?\n\n    this._id = \"\" + (this.options.treeId || $.ui.fancytree._nextId++); // TODO: use widget.eventNamespace instead?\n\n    this._ns = \".fancytree-\" + this._id; // append for namespaced events\n\n    this.activeNode = null;\n    this.focusNode = null;\n    this._hasFocus = null;\n    this._tempCache = {};\n    this._lastMousedownNode = null;\n    this._enableUpdate = true;\n    this.lastSelectedNode = null;\n    this.systemFocusElement = null;\n    this.lastQuicksearchTerm = \"\";\n    this.lastQuicksearchTime = 0;\n    this.viewport = null; // ext-grid\n\n    this.statusClassPropName = \"span\";\n    this.ariaPropName = \"li\";\n    this.nodeContainerAttrName = \"li\"; // Remove previous markup if any\n\n    this.$div.find(\">ul.fancytree-container\").remove(); // Create a node without parent.\n\n    var fakeParent = {\n      tree: this\n    },\n        $ul;\n    this.rootNode = new FancytreeNode(fakeParent, {\n      title: \"root\",\n      key: \"root_\" + this._id,\n      children: null,\n      expanded: true\n    });\n    this.rootNode.parent = null; // Create root markup\n\n    $ul = $(\"<ul>\", {\n      id: \"ft-id-\" + this._id,\n      class: \"ui-fancytree fancytree-container fancytree-plain\"\n    }).appendTo(this.$div);\n    this.$container = $ul;\n    this.rootNode.ul = $ul[0];\n\n    if (this.options.debugLevel == null) {\n      this.options.debugLevel = FT.debugLevel;\n    } // // Add container to the TAB chain\n    // // See http://www.w3.org/TR/wai-aria-practices/#focus_activedescendant\n    // // #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n    // this.$container.attr(\"tabindex\", this.options.tabindex);\n    // if( this.options.rtl ) {\n    // \tthis.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n    // // }else{\n    // //\tthis.$container.attr(\"DIR\", null).removeClass(\"fancytree-rtl\");\n    // }\n    // if(this.options.aria){\n    // \tthis.$container.attr(\"role\", \"tree\");\n    // \tif( this.options.selectMode !== 1 ) {\n    // \t\tthis.$container.attr(\"aria-multiselectable\", true);\n    // \t}\n    // }\n\n  }\n\n  Fancytree.prototype =\n  /** @lends Fancytree# */\n  {\n    /* Return a context object that can be re-used for _callHook().\n     * @param {Fancytree | FancytreeNode | EventData} obj\n     * @param {Event} originalEvent\n     * @param {Object} extra\n     * @returns {EventData}\n     */\n    _makeHookContext: function (obj, originalEvent, extra) {\n      var ctx, tree;\n\n      if (obj.node !== undefined) {\n        // obj is already a context object\n        if (originalEvent && obj.originalEvent !== originalEvent) {\n          $.error(\"invalid args\");\n        }\n\n        ctx = obj;\n      } else if (obj.tree) {\n        // obj is a FancytreeNode\n        tree = obj.tree;\n        ctx = {\n          node: obj,\n          tree: tree,\n          widget: tree.widget,\n          options: tree.widget.options,\n          originalEvent: originalEvent,\n          typeInfo: tree.types[obj.type] || {}\n        };\n      } else if (obj.widget) {\n        // obj is a Fancytree\n        ctx = {\n          node: null,\n          tree: obj,\n          widget: obj.widget,\n          options: obj.widget.options,\n          originalEvent: originalEvent\n        };\n      } else {\n        $.error(\"invalid args\");\n      }\n\n      if (extra) {\n        $.extend(ctx, extra);\n      }\n\n      return ctx;\n    },\n\n    /* Trigger a hook function: funcName(ctx, [...]).\n     *\n     * @param {string} funcName\n     * @param {Fancytree|FancytreeNode|EventData} contextObject\n     * @param {any}  [_extraArgs] optional additional arguments\n     * @returns {any}\n     */\n    _callHook: function (funcName, contextObject, _extraArgs) {\n      var ctx = this._makeHookContext(contextObject),\n          fn = this[funcName],\n          args = Array.prototype.slice.call(arguments, 2);\n\n      if (!$.isFunction(fn)) {\n        $.error(\"_callHook('\" + funcName + \"') is not a function\");\n      }\n\n      args.unshift(ctx); // this.debug(\"_hook\", funcName, ctx.node && ctx.node.toString() || ctx.tree.toString(), args);\n\n      return fn.apply(this, args);\n    },\n    _setExpiringValue: function (key, value, ms) {\n      this._tempCache[key] = {\n        value: value,\n        expire: Date.now() + (+ms || 50)\n      };\n    },\n    _getExpiringValue: function (key) {\n      var entry = this._tempCache[key];\n\n      if (entry && entry.expire > Date.now()) {\n        return entry.value;\n      }\n\n      delete this._tempCache[key];\n      return null;\n    },\n\n    /* Check if this tree has extension `name` enabled.\n     *\n     * @param {string} name name of the required extension\n     */\n    _usesExtension: function (name) {\n      return $.inArray(name, this.options.extensions) >= 0;\n    },\n\n    /* Check if current extensions dependencies are met and throw an error if not.\n     *\n     * This method may be called inside the `treeInit` hook for custom extensions.\n     *\n     * @param {string} name name of the required extension\n     * @param {boolean} [required=true] pass `false` if the extension is optional, but we want to check for order if it is present\n     * @param {boolean} [before] `true` if `name` must be included before this, `false` otherwise (use `null` if order doesn't matter)\n     * @param {string} [message] optional error message (defaults to a descriptve error message)\n     */\n    _requireExtension: function (name, required, before, message) {\n      if (before != null) {\n        before = !!before;\n      }\n\n      var thisName = this._local.name,\n          extList = this.options.extensions,\n          isBefore = $.inArray(name, extList) < $.inArray(thisName, extList),\n          isMissing = required && this.ext[name] == null,\n          badOrder = !isMissing && before != null && before !== isBefore;\n\n      _assert(thisName && thisName !== name, \"invalid or same name '\" + thisName + \"' (require yourself?)\");\n\n      if (isMissing || badOrder) {\n        if (!message) {\n          if (isMissing || required) {\n            message = \"'\" + thisName + \"' extension requires '\" + name + \"'\";\n\n            if (badOrder) {\n              message += \" to be registered \" + (before ? \"before\" : \"after\") + \" itself\";\n            }\n          } else {\n            message = \"If used together, `\" + name + \"` must be registered \" + (before ? \"before\" : \"after\") + \" `\" + thisName + \"`\";\n          }\n        }\n\n        $.error(message);\n        return false;\n      }\n\n      return true;\n    },\n\n    /** Activate node with a given key and fire focus and activate events.\n     *\n     * A previously activated node will be deactivated.\n     * If activeVisible option is set, all parents will be expanded as necessary.\n     * Pass key = false, to deactivate the current node only.\n     * @param {string} key\n     * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false}\n     * @returns {FancytreeNode} activated node (null, if not found)\n     */\n    activateKey: function (key, opts) {\n      var node = this.getNodeByKey(key);\n\n      if (node) {\n        node.setActive(true, opts);\n      } else if (this.activeNode) {\n        this.activeNode.setActive(false, opts);\n      }\n\n      return node;\n    },\n\n    /** (experimental) Add child status nodes that indicate 'More...', ....\n     * @param {boolean|object} node optional node definition. Pass `false` to remove all paging nodes.\n     * @param {string} [mode='append'] 'child'|firstChild'\n     * @since 2.15\n     */\n    addPagingNode: function (node, mode) {\n      return this.rootNode.addPagingNode(node, mode);\n    },\n\n    /**\n     * (experimental) Apply a modification (or navigation) operation.\n     *\n     * Valid commands:\n     *   - 'moveUp', 'moveDown'\n     *   - 'indent', 'outdent'\n     *   - 'remove'\n     *   - 'edit', 'addChild', 'addSibling': (reqires ext-edit extension)\n     *   - 'cut', 'copy', 'paste': (use an internal singleton 'clipboard')\n     *   - 'down', 'first', 'last', 'left', 'parent', 'right', 'up': navigate\n     *\n     * @param {string} cmd\n     * @param {FancytreeNode} [node=active_node]\n     * @param {object} [opts] Currently unused\n     *\n     * @since 2.32\n     */\n    applyCommand: function (cmd, node, opts_) {\n      var // clipboard,\n      refNode; // opts = $.extend(\n      // \t{ setActive: true, clipboard: CLIPBOARD },\n      // \topts_\n      // );\n\n      node = node || this.getActiveNode(); // clipboard = opts.clipboard;\n\n      switch (cmd) {\n        // Sorting and indentation:\n        case \"moveUp\":\n          refNode = node.getPrevSibling();\n\n          if (refNode) {\n            node.moveTo(refNode, \"before\");\n            node.setActive();\n          }\n\n          break;\n\n        case \"moveDown\":\n          refNode = node.getNextSibling();\n\n          if (refNode) {\n            node.moveTo(refNode, \"after\");\n            node.setActive();\n          }\n\n          break;\n\n        case \"indent\":\n          refNode = node.getPrevSibling();\n\n          if (refNode) {\n            node.moveTo(refNode, \"child\");\n            refNode.setExpanded();\n            node.setActive();\n          }\n\n          break;\n\n        case \"outdent\":\n          if (!node.isTopLevel()) {\n            node.moveTo(node.getParent(), \"after\");\n            node.setActive();\n          }\n\n          break;\n        // Remove:\n\n        case \"remove\":\n          refNode = node.getPrevSibling() || node.getParent();\n          node.remove();\n\n          if (refNode) {\n            refNode.setActive();\n          }\n\n          break;\n        // Add, edit (requires ext-edit):\n\n        case \"addChild\":\n          node.editCreateNode(\"child\", \"\");\n          break;\n\n        case \"addSibling\":\n          node.editCreateNode(\"after\", \"\");\n          break;\n\n        case \"rename\":\n          node.editStart();\n          break;\n        // Simple clipboard simulation:\n        // case \"cut\":\n        // \tclipboard = { mode: cmd, data: node };\n        // \tbreak;\n        // case \"copy\":\n        // \tclipboard = {\n        // \t\tmode: cmd,\n        // \t\tdata: node.toDict(function(d, n) {\n        // \t\t\tdelete d.key;\n        // \t\t}),\n        // \t};\n        // \tbreak;\n        // case \"clear\":\n        // \tclipboard = null;\n        // \tbreak;\n        // case \"paste\":\n        // \tif (clipboard.mode === \"cut\") {\n        // \t\t// refNode = node.getPrevSibling();\n        // \t\tclipboard.data.moveTo(node, \"child\");\n        // \t\tclipboard.data.setActive();\n        // \t} else if (clipboard.mode === \"copy\") {\n        // \t\tnode.addChildren(clipboard.data).setActive();\n        // \t}\n        // \tbreak;\n        // Navigation commands:\n\n        case \"down\":\n        case \"first\":\n        case \"last\":\n        case \"left\":\n        case \"parent\":\n        case \"right\":\n        case \"up\":\n          return node.navigate(cmd);\n\n        default:\n          $.error(\"Unhandled command: '\" + cmd + \"'\");\n      }\n    },\n\n    /** (experimental) Modify existing data model.\n     *\n     * @param {Array} patchList array of [key, NodePatch] arrays\n     * @returns {$.Promise} resolved, when all patches have been applied\n     * @see TreePatch\n     */\n    applyPatch: function (patchList) {\n      var dfd,\n          i,\n          p2,\n          key,\n          patch,\n          node,\n          patchCount = patchList.length,\n          deferredList = [];\n\n      for (i = 0; i < patchCount; i++) {\n        p2 = patchList[i];\n\n        _assert(p2.length === 2, \"patchList must be an array of length-2-arrays\");\n\n        key = p2[0];\n        patch = p2[1];\n        node = key === null ? this.rootNode : this.getNodeByKey(key);\n\n        if (node) {\n          dfd = new $.Deferred();\n          deferredList.push(dfd);\n          node.applyPatch(patch).always(_makeResolveFunc(dfd, node));\n        } else {\n          this.warn(\"could not find node with key '\" + key + \"'\");\n        }\n      } // Return a promise that is resolved, when ALL patches were applied\n\n\n      return $.when.apply($, deferredList).promise();\n    },\n\n    /* TODO: implement in dnd extension\n    cancelDrag: function() {\n    \t\tvar dd = $.ui.ddmanager.current;\n    \t\tif(dd){\n    \t\t\tdd.cancel();\n    \t\t}\n    \t},\n    */\n\n    /** Remove all nodes.\n     * @since 2.14\n     */\n    clear: function (source) {\n      this._callHook(\"treeClear\", this);\n    },\n\n    /** Return the number of nodes.\n     * @returns {integer}\n     */\n    count: function () {\n      return this.rootNode.countChildren();\n    },\n\n    /** Write to browser console if debugLevel >= 4 (prepending tree name)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    debug: function (msg) {\n      if (this.options.debugLevel >= 4) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"log\", arguments);\n      }\n    },\n\n    /** Destroy this widget, restore previous markup and cleanup resources.\n     *\n     * @since 2.34\n     */\n    destroy: function () {\n      this.widget.destroy();\n    },\n\n    /** Enable (or disable) the tree control.\n     *\n     * @param {boolean} [flag=true] pass false to disable\n     * @since 2.30\n     */\n    enable: function (flag) {\n      if (flag === false) {\n        this.widget.disable();\n      } else {\n        this.widget.enable();\n      }\n    },\n\n    /** Temporarily suppress rendering to improve performance on bulk-updates.\n     *\n     * @param {boolean} flag\n     * @returns {boolean} previous status\n     * @since 2.19\n     */\n    enableUpdate: function (flag) {\n      flag = flag !== false;\n\n      if (!!this._enableUpdate === !!flag) {\n        return flag;\n      }\n\n      this._enableUpdate = flag;\n\n      if (flag) {\n        this.debug(\"enableUpdate(true): redraw \"); //, this._dirtyRoots);\n\n        this._callHook(\"treeStructureChanged\", this, \"enableUpdate\");\n\n        this.render();\n      } else {\n        // \tthis._dirtyRoots = null;\n        this.debug(\"enableUpdate(false)...\");\n      }\n\n      return !flag; // return previous value\n    },\n\n    /** Write error to browser console if debugLevel >= 1 (prepending tree info)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    error: function (msg) {\n      if (this.options.debugLevel >= 1) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"error\", arguments);\n      }\n    },\n\n    /** Expand (or collapse) all parent nodes.\n     *\n     * This convenience method uses `tree.visit()` and `tree.setExpanded()`\n     * internally.\n     *\n     * @param {boolean} [flag=true] pass false to collapse\n     * @param {object} [opts] passed to setExpanded()\n     * @since 2.30\n     */\n    expandAll: function (flag, opts) {\n      var prev = this.enableUpdate(false);\n      flag = flag !== false;\n      this.visit(function (node) {\n        if (node.hasChildren() !== false && node.isExpanded() !== flag) {\n          node.setExpanded(flag, opts);\n        }\n      });\n      this.enableUpdate(prev);\n    },\n\n    /**Find all nodes that matches condition.\n     *\n     * @param {string | function(node)} match title string to search for, or a\n     *     callback function that returns `true` if a node is matched.\n     * @returns {FancytreeNode[]} array of nodes (may be empty)\n     * @see FancytreeNode#findAll\n     * @since 2.12\n     */\n    findAll: function (match) {\n      return this.rootNode.findAll(match);\n    },\n\n    /**Find first node that matches condition.\n     *\n     * @param {string | function(node)} match title string to search for, or a\n     *     callback function that returns `true` if a node is matched.\n     * @returns {FancytreeNode} matching node or null\n     * @see FancytreeNode#findFirst\n     * @since 2.12\n     */\n    findFirst: function (match) {\n      return this.rootNode.findFirst(match);\n    },\n\n    /** Find the next visible node that starts with `match`, starting at `startNode`\n     * and wrap-around at the end.\n     *\n     * @param {string|function} match\n     * @param {FancytreeNode} [startNode] defaults to first node\n     * @returns {FancytreeNode} matching node or null\n     */\n    findNextNode: function (match, startNode) {\n      //, visibleOnly) {\n      var res = null,\n          firstNode = this.getFirstChild();\n      match = typeof match === \"string\" ? _makeNodeTitleStartMatcher(match) : match;\n      startNode = startNode || firstNode;\n\n      function _checkNode(n) {\n        // console.log(\"_check \" + n)\n        if (match(n)) {\n          res = n;\n        }\n\n        if (res || n === startNode) {\n          return false;\n        }\n      }\n\n      this.visitRows(_checkNode, {\n        start: startNode,\n        includeSelf: false\n      }); // Wrap around search\n\n      if (!res && startNode !== firstNode) {\n        this.visitRows(_checkNode, {\n          start: firstNode,\n          includeSelf: true\n        });\n      }\n\n      return res;\n    },\n\n    /** Find a node relative to another node.\n     *\n     * @param {FancytreeNode} node\n     * @param {string|number} where 'down', 'first', 'last', 'left', 'parent', 'right', or 'up'.\n     *   (Alternatively the keyCode that would normally trigger this move,\n     *   e.g. `$.ui.keyCode.LEFT` = 'left'.\n     * @param {boolean} [includeHidden=false] Not yet implemented\n     * @returns {FancytreeNode|null}\n     * @since v2.31\n     */\n    findRelatedNode: function (node, where, includeHidden) {\n      var res = null,\n          KC = $.ui.keyCode;\n\n      switch (where) {\n        case \"parent\":\n        case KC.BACKSPACE:\n          if (node.parent && node.parent.parent) {\n            res = node.parent;\n          }\n\n          break;\n\n        case \"first\":\n        case KC.HOME:\n          // First visible node\n          this.visit(function (n) {\n            if (n.isVisible()) {\n              res = n;\n              return false;\n            }\n          });\n          break;\n\n        case \"last\":\n        case KC.END:\n          this.visit(function (n) {\n            // last visible node\n            if (n.isVisible()) {\n              res = n;\n            }\n          });\n          break;\n\n        case \"left\":\n        case KC.LEFT:\n          if (node.expanded) {\n            node.setExpanded(false);\n          } else if (node.parent && node.parent.parent) {\n            res = node.parent;\n          }\n\n          break;\n\n        case \"right\":\n        case KC.RIGHT:\n          if (!node.expanded && (node.children || node.lazy)) {\n            node.setExpanded();\n            res = node;\n          } else if (node.children && node.children.length) {\n            res = node.children[0];\n          }\n\n          break;\n\n        case \"up\":\n        case KC.UP:\n          this.visitRows(function (n) {\n            res = n;\n            return false;\n          }, {\n            start: node,\n            reverse: true,\n            includeSelf: false\n          });\n          break;\n\n        case \"down\":\n        case KC.DOWN:\n          this.visitRows(function (n) {\n            res = n;\n            return false;\n          }, {\n            start: node,\n            includeSelf: false\n          });\n          break;\n\n        default:\n          this.tree.warn(\"Unknown relation '\" + where + \"'.\");\n      }\n\n      return res;\n    },\n    // TODO: fromDict\n\n    /**\n     * Generate INPUT elements that can be submitted with html forms.\n     *\n     * In selectMode 3 only the topmost selected nodes are considered, unless\n     * `opts.stopOnParents: false` is passed.\n     *\n     * @example\n     * // Generate input elements for active and selected nodes\n     * tree.generateFormElements();\n     * // Generate input elements selected nodes, using a custom `name` attribute\n     * tree.generateFormElements(\"cust_sel\", false);\n     * // Generate input elements using a custom filter\n     * tree.generateFormElements(true, true, { filter: function(node) {\n     *     return node.isSelected() && node.data.yes;\n     * }});\n     *\n     * @param {boolean | string} [selected=true] Pass false to disable, pass a string to override the field name (default: 'ft_ID[]')\n     * @param {boolean | string} [active=true] Pass false to disable, pass a string to override the field name (default: 'ft_ID_active')\n     * @param {object} [opts] default { filter: null, stopOnParents: true }\n     */\n    generateFormElements: function (selected, active, opts) {\n      opts = opts || {};\n      var nodeList,\n          selectedName = typeof selected === \"string\" ? selected : \"ft_\" + this._id + \"[]\",\n          activeName = typeof active === \"string\" ? active : \"ft_\" + this._id + \"_active\",\n          id = \"fancytree_result_\" + this._id,\n          $result = $(\"#\" + id),\n          stopOnParents = this.options.selectMode === 3 && opts.stopOnParents !== false;\n\n      if ($result.length) {\n        $result.empty();\n      } else {\n        $result = $(\"<div>\", {\n          id: id\n        }).hide().insertAfter(this.$container);\n      }\n\n      if (active !== false && this.activeNode) {\n        $result.append($(\"<input>\", {\n          type: \"radio\",\n          name: activeName,\n          value: this.activeNode.key,\n          checked: true\n        }));\n      }\n\n      function _appender(node) {\n        $result.append($(\"<input>\", {\n          type: \"checkbox\",\n          name: selectedName,\n          value: node.key,\n          checked: true\n        }));\n      }\n\n      if (opts.filter) {\n        this.visit(function (node) {\n          var res = opts.filter(node);\n\n          if (res === \"skip\") {\n            return res;\n          }\n\n          if (res !== false) {\n            _appender(node);\n          }\n        });\n      } else if (selected !== false) {\n        nodeList = this.getSelectedNodes(stopOnParents);\n        $.each(nodeList, function (idx, node) {\n          _appender(node);\n        });\n      }\n    },\n\n    /**\n     * Return the currently active node or null.\n     * @returns {FancytreeNode}\n     */\n    getActiveNode: function () {\n      return this.activeNode;\n    },\n\n    /** Return the first top level node if any (not the invisible root node).\n     * @returns {FancytreeNode | null}\n     */\n    getFirstChild: function () {\n      return this.rootNode.getFirstChild();\n    },\n\n    /**\n     * Return node that has keyboard focus or null.\n     * @returns {FancytreeNode}\n     */\n    getFocusNode: function () {\n      return this.focusNode;\n    },\n\n    /**\n     * Return current option value.\n     * (Note: this is the preferred variant of `$().fancytree(\"option\", \"KEY\")`)\n     *\n     * @param {string} name option name (may contain '.')\n     * @returns {any}\n     */\n    getOption: function (optionName) {\n      return this.widget.option(optionName);\n    },\n\n    /**\n     * Return node with a given key or null if not found.\n     *\n     * @param {string} key\n     * @param {FancytreeNode} [searchRoot] only search below this node\n     * @returns {FancytreeNode | null}\n     */\n    getNodeByKey: function (key, searchRoot) {\n      // Search the DOM by element ID (assuming this is faster than traversing all nodes).\n      var el, match; // TODO: use tree.keyMap if available\n      // TODO: check opts.generateIds === true\n\n      if (!searchRoot) {\n        el = document.getElementById(this.options.idPrefix + key);\n\n        if (el) {\n          return el.ftnode ? el.ftnode : null;\n        }\n      } // Not found in the DOM, but still may be in an unrendered part of tree\n\n\n      searchRoot = searchRoot || this.rootNode;\n      match = null;\n      key = \"\" + key; // Convert to string (#1005)\n\n      searchRoot.visit(function (node) {\n        if (node.key === key) {\n          match = node;\n          return false; // Stop iteration\n        }\n      }, true);\n      return match;\n    },\n\n    /** Return the invisible system root node.\n     * @returns {FancytreeNode}\n     */\n    getRootNode: function () {\n      return this.rootNode;\n    },\n\n    /**\n     * Return an array of selected nodes.\n     *\n     * Note: you cannot send this result via Ajax directly. Instead the\n     * node object need to be converted to plain objects, for example\n     * by using `$.map()` and `node.toDict()`.\n     * @param {boolean} [stopOnParents=false] only return the topmost selected\n     *     node (useful with selectMode 3)\n     * @returns {FancytreeNode[]}\n     */\n    getSelectedNodes: function (stopOnParents) {\n      return this.rootNode.getSelectedNodes(stopOnParents);\n    },\n\n    /** Return true if the tree control has keyboard focus\n     * @returns {boolean}\n     */\n    hasFocus: function () {\n      // var ae = document.activeElement,\n      // \thasFocus = !!(\n      // \t\tae && $(ae).closest(\".fancytree-container\").length\n      // \t);\n      // if (hasFocus !== !!this._hasFocus) {\n      // \tthis.warn(\n      // \t\t\"hasFocus(): fix inconsistent container state, now: \" +\n      // \t\t\thasFocus\n      // \t);\n      // \tthis._hasFocus = hasFocus;\n      // \tthis.$container.toggleClass(\"fancytree-treefocus\", hasFocus);\n      // }\n      // return hasFocus;\n      return !!this._hasFocus;\n    },\n\n    /** Write to browser console if debugLevel >= 3 (prepending tree name)\n     * @param {*} msg string or object or array of such\n     */\n    info: function (msg) {\n      if (this.options.debugLevel >= 3) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"info\", arguments);\n      }\n    },\n\n    /** Return true if any node is currently beeing loaded, i.e. a Ajax request is pending.\n     * @returns {boolean}\n     * @since 2.32\n     */\n    isLoading: function () {\n      var res = false;\n      this.rootNode.visit(function (n) {\n        // also visit rootNode\n        if (n._isLoading || n._requestId) {\n          res = true;\n          return false;\n        }\n      }, true);\n      return res;\n    },\n\n    /*\n    TODO: isInitializing: function() {\n    \treturn ( this.phase==\"init\" || this.phase==\"postInit\" );\n    },\n    TODO: isReloading: function() {\n    \treturn ( this.phase==\"init\" || this.phase==\"postInit\" ) && this.options.persist && this.persistence.cookiesFound;\n    },\n    TODO: isUserEvent: function() {\n    \treturn ( this.phase==\"userEvent\" );\n    },\n    */\n\n    /**\n     * Make sure that a node with a given ID is loaded, by traversing - and\n     * loading - its parents. This method is meant for lazy hierarchies.\n     * A callback is executed for every node as we go.\n     * @example\n     * // Resolve using node.key:\n     * tree.loadKeyPath(\"/_3/_23/_26/_27\", function(node, status){\n     *   if(status === \"loaded\") {\n     *     console.log(\"loaded intermediate node \" + node);\n     *   }else if(status === \"ok\") {\n     *     node.activate();\n     *   }\n     * });\n     * // Use deferred promise:\n     * tree.loadKeyPath(\"/_3/_23/_26/_27\").progress(function(data){\n     *   if(data.status === \"loaded\") {\n     *     console.log(\"loaded intermediate node \" + data.node);\n     *   }else if(data.status === \"ok\") {\n     *     node.activate();\n     *   }\n     * }).done(function(){\n     *    ...\n     * });\n     * // Custom path segment resolver:\n     * tree.loadKeyPath(\"/321/431/21/2\", {\n     *   matchKey: function(node, key){\n     *     return node.data.refKey === key;\n     *   },\n     *   callback: function(node, status){\n     *     if(status === \"loaded\") {\n     *       console.log(\"loaded intermediate node \" + node);\n     *     }else if(status === \"ok\") {\n     *       node.activate();\n     *     }\n     *   }\n     * });\n     * @param {string | string[]} keyPathList one or more key paths (e.g. '/3/2_1/7')\n     * @param {function | object} optsOrCallback callback(node, status) is called for every visited node ('loading', 'loaded', 'ok', 'error').\n     *     Pass an object to define custom key matchers for the path segments: {callback: function, matchKey: function}.\n     * @returns {$.Promise}\n     */\n    loadKeyPath: function (keyPathList, optsOrCallback) {\n      var callback,\n          i,\n          path,\n          self = this,\n          dfd = new $.Deferred(),\n          parent = this.getRootNode(),\n          sep = this.options.keyPathSeparator,\n          pathSegList = [],\n          opts = $.extend({}, optsOrCallback); // Prepare options\n\n      if (typeof optsOrCallback === \"function\") {\n        callback = optsOrCallback;\n      } else if (optsOrCallback && optsOrCallback.callback) {\n        callback = optsOrCallback.callback;\n      }\n\n      opts.callback = function (ctx, node, status) {\n        if (callback) {\n          callback.call(ctx, node, status);\n        }\n\n        dfd.notifyWith(ctx, [{\n          node: node,\n          status: status\n        }]);\n      };\n\n      if (opts.matchKey == null) {\n        opts.matchKey = function (node, key) {\n          return node.key === key;\n        };\n      } // Convert array of path strings to array of segment arrays\n\n\n      if (!$.isArray(keyPathList)) {\n        keyPathList = [keyPathList];\n      }\n\n      for (i = 0; i < keyPathList.length; i++) {\n        path = keyPathList[i]; // strip leading slash\n\n        if (path.charAt(0) === sep) {\n          path = path.substr(1);\n        } // segListMap[path] = { parent: parent, segList: path.split(sep) };\n\n\n        pathSegList.push(path.split(sep)); // targetList.push({ parent: parent, segList: path.split(sep)/* , path: path*/});\n      } // The timeout forces async behavior always (even if nodes are all loaded)\n      // This way a potential progress() event will fire.\n\n\n      setTimeout(function () {\n        self._loadKeyPathImpl(dfd, opts, parent, pathSegList).done(function () {\n          dfd.resolve();\n        });\n      }, 0);\n      return dfd.promise();\n    },\n\n    /*\n     * Resolve a list of paths, relative to one parent node.\n     */\n    _loadKeyPathImpl: function (dfd, opts, parent, pathSegList) {\n      var deferredList,\n          i,\n          key,\n          node,\n          nodeKey,\n          remain,\n          remainMap,\n          tmpParent,\n          segList,\n          subDfd,\n          self = this;\n\n      function __findChild(parent, key) {\n        // console.log(\"__findChild\", key, parent);\n        var i,\n            l,\n            cl = parent.children;\n\n        if (cl) {\n          for (i = 0, l = cl.length; i < l; i++) {\n            if (opts.matchKey(cl[i], key)) {\n              return cl[i];\n            }\n          }\n        }\n\n        return null;\n      } // console.log(\"_loadKeyPathImpl, parent=\", parent, \", pathSegList=\", pathSegList);\n      // Pass 1:\n      // Handle all path segments for nodes that are already loaded.\n      // Collect distinct top-most lazy nodes in a map.\n      // Note that we can use node.key to de-dupe entries, even if a custom matcher would\n      // look for other node attributes.\n      // map[node.key] => {node: node, pathList: [list of remaining rest-paths]}\n\n\n      remainMap = {};\n\n      for (i = 0; i < pathSegList.length; i++) {\n        segList = pathSegList[i]; // target = targetList[i];\n        // Traverse and pop path segments (i.e. keys), until we hit a lazy, unloaded node\n\n        tmpParent = parent;\n\n        while (segList.length) {\n          key = segList.shift();\n          node = __findChild(tmpParent, key);\n\n          if (!node) {\n            this.warn(\"loadKeyPath: key not found: \" + key + \" (parent: \" + tmpParent + \")\");\n            opts.callback(this, key, \"error\");\n            break;\n          } else if (segList.length === 0) {\n            opts.callback(this, node, \"ok\");\n            break;\n          } else if (!node.lazy || node.hasChildren() !== undefined) {\n            opts.callback(this, node, \"loaded\");\n            tmpParent = node;\n          } else {\n            opts.callback(this, node, \"loaded\");\n            key = node.key; //target.segList.join(sep);\n\n            if (remainMap[key]) {\n              remainMap[key].pathSegList.push(segList);\n            } else {\n              remainMap[key] = {\n                parent: node,\n                pathSegList: [segList]\n              };\n            }\n\n            break;\n          }\n        }\n      } // console.log(\"_loadKeyPathImpl AFTER pass 1, remainMap=\", remainMap);\n      // Now load all lazy nodes and continue iteration for remaining paths\n\n\n      deferredList = []; // Avoid jshint warning 'Don't make functions within a loop.':\n\n      function __lazyload(dfd, parent, pathSegList) {\n        // console.log(\"__lazyload\", parent, \"pathSegList=\", pathSegList);\n        opts.callback(self, parent, \"loading\");\n        parent.load().done(function () {\n          self._loadKeyPathImpl.call(self, dfd, opts, parent, pathSegList).always(_makeResolveFunc(dfd, self));\n        }).fail(function (errMsg) {\n          self.warn(\"loadKeyPath: error loading lazy \" + parent);\n          opts.callback(self, node, \"error\");\n          dfd.rejectWith(self);\n        });\n      } // remainMap contains parent nodes, each with a list of relative sub-paths.\n      // We start loading all of them now, and pass the the list to each loader.\n\n\n      for (nodeKey in remainMap) {\n        if (remainMap.hasOwnProperty(nodeKey)) {\n          remain = remainMap[nodeKey]; // console.log(\"for(): remain=\", remain, \"remainMap=\", remainMap);\n          // key = remain.segList.shift();\n          // node = __findChild(remain.parent, key);\n          // if (node == null) {  // #576\n          // \t// Issue #576, refactored for v2.27:\n          // \t// The root cause was, that sometimes the wrong parent was used here\n          // \t// to find the next segment.\n          // \t// Falling back to getNodeByKey() was a hack that no longer works if a custom\n          // \t// matcher is used, because we cannot assume that a single segment-key is unique\n          // \t// throughout the tree.\n          // \tself.error(\"loadKeyPath: error loading child by key '\" + key + \"' (parent: \" + target.parent + \")\", target);\n          // \t// \tnode = self.getNodeByKey(key);\n          // \tcontinue;\n          // }\n\n          subDfd = new $.Deferred();\n          deferredList.push(subDfd);\n\n          __lazyload(subDfd, remain.parent, remain.pathSegList);\n        }\n      } // Return a promise that is resolved, when ALL paths were loaded\n\n\n      return $.when.apply($, deferredList).promise();\n    },\n\n    /** Re-fire beforeActivate, activate, and (optional) focus events.\n     * Calling this method in the `init` event, will activate the node that\n     * was marked 'active' in the source data, and optionally set the keyboard\n     * focus.\n     * @param [setFocus=false]\n     */\n    reactivate: function (setFocus) {\n      var res,\n          node = this.activeNode;\n\n      if (!node) {\n        return _getResolvedPromise();\n      }\n\n      this.activeNode = null; // Force re-activating\n\n      res = node.setActive(true, {\n        noFocus: true\n      });\n\n      if (setFocus) {\n        node.setFocus();\n      }\n\n      return res;\n    },\n\n    /** Reload tree from source and return a promise.\n     * @param [source] optional new source (defaults to initial source data)\n     * @returns {$.Promise}\n     */\n    reload: function (source) {\n      this._callHook(\"treeClear\", this);\n\n      return this._callHook(\"treeLoad\", this, source);\n    },\n\n    /**Render tree (i.e. create DOM elements for all top-level nodes).\n     * @param {boolean} [force=false] create DOM elemnts, even if parent is collapsed\n     * @param {boolean} [deep=false]\n     */\n    render: function (force, deep) {\n      return this.rootNode.render(force, deep);\n    },\n\n    /**(De)select all nodes.\n     * @param {boolean} [flag=true]\n     * @since 2.28\n     */\n    selectAll: function (flag) {\n      this.visit(function (node) {\n        node.setSelected(flag);\n      });\n    },\n    // TODO: selectKey: function(key, select)\n    // TODO: serializeArray: function(stopOnParents)\n\n    /**\n     * @param {boolean} [flag=true]\n     */\n    setFocus: function (flag) {\n      return this._callHook(\"treeSetFocus\", this, flag);\n    },\n\n    /**\n     * Set current option value.\n     * (Note: this is the preferred variant of `$().fancytree(\"option\", \"KEY\", VALUE)`)\n     * @param {string} name option name (may contain '.')\n     * @param {any} new value\n     */\n    setOption: function (optionName, value) {\n      return this.widget.option(optionName, value);\n    },\n\n    /**\n     * Call console.time() when in debug mode (verbose >= 4).\n     *\n     * @param {string} label\n     */\n    debugTime: function (label) {\n      if (this.options.debugLevel >= 4) {\n        window.console.time(this + \" - \" + label);\n      }\n    },\n\n    /**\n     * Call console.timeEnd() when in debug mode (verbose >= 4).\n     *\n     * @param {string} label\n     */\n    debugTimeEnd: function (label) {\n      if (this.options.debugLevel >= 4) {\n        window.console.timeEnd(this + \" - \" + label);\n      }\n    },\n\n    /**\n     * Return all nodes as nested list of {@link NodeData}.\n     *\n     * @param {boolean} [includeRoot=false] Returns the hidden system root node (and its children)\n     * @param {function} [callback] callback(dict, node) is called for every node, in order to allow modifications.\n     *     Return `false` to ignore this node or \"skip\" to include this node without its children.\n     * @returns {Array | object}\n     * @see FancytreeNode#toDict\n     */\n    toDict: function (includeRoot, callback) {\n      var res = this.rootNode.toDict(true, callback);\n      return includeRoot ? res : res.children;\n    },\n\n    /* Implicitly called for string conversions.\n     * @returns {string}\n     */\n    toString: function () {\n      return \"Fancytree@\" + this._id; // return \"<Fancytree(#\" + this._id + \")>\";\n    },\n\n    /* _trigger a widget event with additional node ctx.\n     * @see EventData\n     */\n    _triggerNodeEvent: function (type, node, originalEvent, extra) {\n      // this.debug(\"_trigger(\" + type + \"): '\" + ctx.node.title + \"'\", ctx);\n      var ctx = this._makeHookContext(node, originalEvent, extra),\n          res = this.widget._trigger(type, originalEvent, ctx);\n\n      if (res !== false && ctx.result !== undefined) {\n        return ctx.result;\n      }\n\n      return res;\n    },\n\n    /* _trigger a widget event with additional tree data. */\n    _triggerTreeEvent: function (type, originalEvent, extra) {\n      // this.debug(\"_trigger(\" + type + \")\", ctx);\n      var ctx = this._makeHookContext(this, originalEvent, extra),\n          res = this.widget._trigger(type, originalEvent, ctx);\n\n      if (res !== false && ctx.result !== undefined) {\n        return ctx.result;\n      }\n\n      return res;\n    },\n\n    /** Call fn(node) for all nodes in hierarchical order (depth-first).\n     *\n     * @param {function} fn the callback function.\n     *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n     * @returns {boolean} false, if the iterator was stopped.\n     */\n    visit: function (fn) {\n      return this.rootNode.visit(fn, false);\n    },\n\n    /** Call fn(node) for all nodes in vertical order, top down (or bottom up).<br>\n     * Stop iteration, if fn() returns false.<br>\n     * Return false if iteration was stopped.\n     *\n     * @param {function} fn the callback function.\n     *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n     * @param {object} [options]\n     *     Defaults:\n     *     {start: First top node, reverse: false, includeSelf: true, includeHidden: false}\n     * @returns {boolean} false if iteration was cancelled\n     * @since 2.28\n     */\n    visitRows: function (fn, opts) {\n      if (!this.rootNode.hasChildren()) {\n        return false;\n      }\n\n      if (opts && opts.reverse) {\n        delete opts.reverse;\n        return this._visitRowsUp(fn, opts);\n      }\n\n      opts = opts || {};\n      var i,\n          nextIdx,\n          parent,\n          res,\n          siblings,\n          siblingOfs = 0,\n          skipFirstNode = opts.includeSelf === false,\n          includeHidden = !!opts.includeHidden,\n          checkFilter = !includeHidden && this.enableFilter,\n          node = opts.start || this.rootNode.children[0];\n      parent = node.parent;\n\n      while (parent) {\n        // visit siblings\n        siblings = parent.children;\n        nextIdx = siblings.indexOf(node) + siblingOfs;\n\n        for (i = nextIdx; i < siblings.length; i++) {\n          node = siblings[i];\n\n          if (checkFilter && !node.match && !node.subMatchCount) {\n            continue;\n          }\n\n          if (!skipFirstNode && fn(node) === false) {\n            return false;\n          }\n\n          skipFirstNode = false; // Dive into node's child nodes\n\n          if (node.children && node.children.length && (includeHidden || node.expanded)) {\n            // Disable warning: Functions declared within loops referencing an outer\n            // scoped variable may lead to confusing semantics:\n\n            /*jshint -W083 */\n            res = node.visit(function (n) {\n              if (checkFilter && !n.match && !n.subMatchCount) {\n                return \"skip\";\n              }\n\n              if (fn(n) === false) {\n                return false;\n              }\n\n              if (!includeHidden && n.children && !n.expanded) {\n                return \"skip\";\n              }\n            }, false);\n            /*jshint +W083 */\n\n            if (res === false) {\n              return false;\n            }\n          }\n        } // Visit parent nodes (bottom up)\n\n\n        node = parent;\n        parent = parent.parent;\n        siblingOfs = 1; //\n      }\n\n      return true;\n    },\n\n    /* Call fn(node) for all nodes in vertical order, bottom up.\n     */\n    _visitRowsUp: function (fn, opts) {\n      var children,\n          idx,\n          parent,\n          includeHidden = !!opts.includeHidden,\n          node = opts.start || this.rootNode.children[0];\n\n      while (true) {\n        parent = node.parent;\n        children = parent.children;\n\n        if (children[0] === node) {\n          // If this is already the first sibling, goto parent\n          node = parent;\n\n          if (!node.parent) {\n            break; // first node of the tree\n          }\n\n          children = parent.children;\n        } else {\n          // Otherwise, goto prev. sibling\n          idx = children.indexOf(node);\n          node = children[idx - 1]; // If the prev. sibling has children, follow down to last descendant\n\n          while ( // See: https://github.com/eslint/eslint/issues/11302\n          // eslint-disable-next-line no-unmodified-loop-condition\n          (includeHidden || node.expanded) && node.children && node.children.length) {\n            children = node.children;\n            parent = node;\n            node = children[children.length - 1];\n          }\n        } // Skip invisible\n\n\n        if (!includeHidden && !node.isVisible()) {\n          continue;\n        }\n\n        if (fn(node) === false) {\n          return false;\n        }\n      }\n    },\n\n    /** Write warning to browser console if debugLevel >= 2 (prepending tree info)\n     *\n     * @param {*} msg string or object or array of such\n     */\n    warn: function (msg) {\n      if (this.options.debugLevel >= 2) {\n        Array.prototype.unshift.call(arguments, this.toString());\n        consoleApply(\"warn\", arguments);\n      }\n    }\n  };\n  /**\n   * These additional methods of the {@link Fancytree} class are 'hook functions'\n   * that can be used and overloaded by extensions.\n   *\n   * @see [writing extensions](https://github.com/mar10/fancytree/wiki/TutorialExtensions)\n   * @mixin Fancytree_Hooks\n   */\n\n  $.extend(Fancytree.prototype,\n  /** @lends Fancytree_Hooks# */\n  {\n    /** Default handling for mouse click events.\n     *\n     * @param {EventData} ctx\n     */\n    nodeClick: function (ctx) {\n      var activate,\n          expand,\n          // event = ctx.originalEvent,\n      targetType = ctx.targetType,\n          node = ctx.node; // this.debug(\"ftnode.onClick(\" + event.type + \"): ftnode:\" + this + \", button:\" + event.button + \", which: \" + event.which, ctx);\n      // TODO: use switch\n      // TODO: make sure clicks on embedded <input> doesn't steal focus (see table sample)\n\n      if (targetType === \"expander\") {\n        if (node.isLoading()) {\n          // #495: we probably got a click event while a lazy load is pending.\n          // The 'expanded' state is not yet set, so 'toggle' would expand\n          // and trigger lazyLoad again.\n          // It would be better to allow to collapse/expand the status node\n          // while loading (instead of ignoring), but that would require some\n          // more work.\n          node.debug(\"Got 2nd click while loading: ignored\");\n          return;\n        } // Clicking the expander icon always expands/collapses\n\n\n        this._callHook(\"nodeToggleExpanded\", ctx);\n      } else if (targetType === \"checkbox\") {\n        // Clicking the checkbox always (de)selects\n        this._callHook(\"nodeToggleSelected\", ctx);\n\n        if (ctx.options.focusOnSelect) {\n          // #358\n          this._callHook(\"nodeSetFocus\", ctx, true);\n        }\n      } else {\n        // Honor `clickFolderMode` for\n        expand = false;\n        activate = true;\n\n        if (node.folder) {\n          switch (ctx.options.clickFolderMode) {\n            case 2:\n              // expand only\n              expand = true;\n              activate = false;\n              break;\n\n            case 3:\n              // expand and activate\n              activate = true;\n              expand = true; //!node.isExpanded();\n\n              break;\n            // else 1 or 4: just activate\n          }\n        }\n\n        if (activate) {\n          this.nodeSetFocus(ctx);\n\n          this._callHook(\"nodeSetActive\", ctx, true);\n        }\n\n        if (expand) {\n          if (!activate) {// this._callHook(\"nodeSetFocus\", ctx);\n          } // this._callHook(\"nodeSetExpanded\", ctx, true);\n\n\n          this._callHook(\"nodeToggleExpanded\", ctx);\n        }\n      } // Make sure that clicks stop, otherwise <a href='#'> jumps to the top\n      // if(event.target.localName === \"a\" && event.target.className === \"fancytree-title\"){\n      // \tevent.preventDefault();\n      // }\n      // TODO: return promise?\n\n    },\n\n    /** Collapse all other  children of same parent.\n     *\n     * @param {EventData} ctx\n     * @param {object} callOpts\n     */\n    nodeCollapseSiblings: function (ctx, callOpts) {\n      // TODO: return promise?\n      var ac,\n          i,\n          l,\n          node = ctx.node;\n\n      if (node.parent) {\n        ac = node.parent.children;\n\n        for (i = 0, l = ac.length; i < l; i++) {\n          if (ac[i] !== node && ac[i].expanded) {\n            this._callHook(\"nodeSetExpanded\", ac[i], false, callOpts);\n          }\n        }\n      }\n    },\n\n    /** Default handling for mouse douleclick events.\n     * @param {EventData} ctx\n     */\n    nodeDblclick: function (ctx) {\n      // TODO: return promise?\n      if (ctx.targetType === \"title\" && ctx.options.clickFolderMode === 4) {\n        // this.nodeSetFocus(ctx);\n        // this._callHook(\"nodeSetActive\", ctx, true);\n        this._callHook(\"nodeToggleExpanded\", ctx);\n      } // TODO: prevent text selection on dblclicks\n\n\n      if (ctx.targetType === \"title\") {\n        ctx.originalEvent.preventDefault();\n      }\n    },\n\n    /** Default handling for mouse keydown events.\n     *\n     * NOTE: this may be called with node == null if tree (but no node) has focus.\n     * @param {EventData} ctx\n     */\n    nodeKeydown: function (ctx) {\n      // TODO: return promise?\n      var matchNode,\n          stamp,\n          _res,\n          focusNode,\n          event = ctx.originalEvent,\n          node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          which = event.which,\n          // #909: Use event.key, to get unicode characters.\n      // We can't use `/\\w/.test(key)`, because that would\n      // only detect plain ascii alpha-numerics. But we still need\n      // to ignore modifier-only, whitespace, cursor-keys, etc.\n      key = event.key || String.fromCharCode(which),\n          specialModifiers = !!(event.altKey || event.ctrlKey || event.metaKey),\n          isAlnum = !MODIFIERS[which] && !SPECIAL_KEYCODES[which] && !specialModifiers,\n          $target = $(event.target),\n          handled = true,\n          activate = !(event.ctrlKey || !opts.autoActivate); // (node || FT).debug(\"ftnode.nodeKeydown(\" + event.type + \"): ftnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\n      // FT.debug( \"eventToString(): \" + FT.eventToString(event) + \", key='\" + key + \"', isAlnum: \" + isAlnum );\n      // Set focus to active (or first node) if no other node has the focus yet\n\n\n      if (!node) {\n        focusNode = this.getActiveNode() || this.getFirstChild();\n\n        if (focusNode) {\n          focusNode.setFocus();\n          node = ctx.node = this.focusNode;\n          node.debug(\"Keydown force focus on active node\");\n        }\n      }\n\n      if (opts.quicksearch && isAlnum && !$target.is(\":input:enabled\")) {\n        // Allow to search for longer streaks if typed in quickly\n        stamp = Date.now();\n\n        if (stamp - tree.lastQuicksearchTime > 500) {\n          tree.lastQuicksearchTerm = \"\";\n        }\n\n        tree.lastQuicksearchTime = stamp;\n        tree.lastQuicksearchTerm += key; // tree.debug(\"quicksearch find\", tree.lastQuicksearchTerm);\n\n        matchNode = tree.findNextNode(tree.lastQuicksearchTerm, tree.getActiveNode());\n\n        if (matchNode) {\n          matchNode.setActive();\n        }\n\n        event.preventDefault();\n        return;\n      }\n\n      switch (FT.eventToString(event)) {\n        case \"+\":\n        case \"=\":\n          // 187: '+' @ Chrome, Safari\n          tree.nodeSetExpanded(ctx, true);\n          break;\n\n        case \"-\":\n          tree.nodeSetExpanded(ctx, false);\n          break;\n\n        case \"space\":\n          if (node.isPagingNode()) {\n            tree._triggerNodeEvent(\"clickPaging\", ctx, event);\n          } else if (FT.evalOption(\"checkbox\", node, node, opts, false)) {\n            // #768\n            tree.nodeToggleSelected(ctx);\n          } else {\n            tree.nodeSetActive(ctx, true);\n          }\n\n          break;\n\n        case \"return\":\n          tree.nodeSetActive(ctx, true);\n          break;\n\n        case \"home\":\n        case \"end\":\n        case \"backspace\":\n        case \"left\":\n        case \"right\":\n        case \"up\":\n        case \"down\":\n          _res = node.navigate(event.which, activate);\n          break;\n\n        default:\n          handled = false;\n      }\n\n      if (handled) {\n        event.preventDefault();\n      }\n    },\n    // /** Default handling for mouse keypress events. */\n    // nodeKeypress: function(ctx) {\n    //     var event = ctx.originalEvent;\n    // },\n    // /** Trigger lazyLoad event (async). */\n    // nodeLazyLoad: function(ctx) {\n    //     var node = ctx.node;\n    //     if(this._triggerNodeEvent())\n    // },\n\n    /** Load child nodes (async).\n     *\n     * @param {EventData} ctx\n     * @param {object[]|object|string|$.Promise|function} source\n     * @returns {$.Promise} The deferred will be resolved as soon as the (ajax)\n     *     data was rendered.\n     */\n    nodeLoadChildren: function (ctx, source) {\n      var ajax,\n          delay,\n          ajaxDfd = null,\n          resultDfd,\n          isAsync = true,\n          tree = ctx.tree,\n          node = ctx.node,\n          nodePrevParent = node.parent,\n          tag = \"nodeLoadChildren\",\n          requestId = Date.now(); // `source` is a callback: use the returned result instead:\n\n      if ($.isFunction(source)) {\n        source = source.call(tree, {\n          type: \"source\"\n        }, ctx);\n\n        _assert(!$.isFunction(source), \"source callback must not return another function\");\n      } // `source` is already a promise:\n\n\n      if ($.isFunction(source.then)) {\n        // _assert($.isFunction(source.always), \"Expected jQuery?\");\n        ajaxDfd = source;\n      } else if (source.url) {\n        // `source` is an Ajax options object\n        ajax = $.extend({}, ctx.options.ajax, source);\n\n        if (ajax.debugDelay) {\n          // Simulate a slow server\n          delay = ajax.debugDelay;\n          delete ajax.debugDelay; // remove debug option\n\n          if ($.isArray(delay)) {\n            // random delay range [min..max]\n            delay = delay[0] + Math.random() * (delay[1] - delay[0]);\n          }\n\n          node.warn(\"nodeLoadChildren waiting debugDelay \" + Math.round(delay) + \" ms ...\");\n          ajaxDfd = $.Deferred(function (ajaxDfd) {\n            setTimeout(function () {\n              $.ajax(ajax).done(function () {\n                ajaxDfd.resolveWith(this, arguments);\n              }).fail(function () {\n                ajaxDfd.rejectWith(this, arguments);\n              });\n            }, delay);\n          });\n        } else {\n          ajaxDfd = $.ajax(ajax);\n        }\n      } else if ($.isPlainObject(source) || $.isArray(source)) {\n        // `source` is already a constant dict or list, but we convert\n        // to a thenable for unified processing.\n        // 2020-01-03: refactored.\n        // `ajaxDfd = $.when(source)` would do the trick, but the returned\n        // promise will resolve async, which broke some tests and\n        // would probably also break current implementations out there.\n        // So we mock-up a thenable that resolves synchronously:\n        ajaxDfd = {\n          then: function (resolve, reject) {\n            resolve(source, null, null);\n          }\n        };\n        isAsync = false;\n      } else {\n        $.error(\"Invalid source type: \" + source);\n      } // Check for overlapping requests\n\n\n      if (node._requestId) {\n        node.warn(\"Recursive load request #\" + requestId + \" while #\" + node._requestId + \" is pending.\");\n        node._requestId = requestId; // \tnode.debug(\"Send load request #\" + requestId);\n      }\n\n      if (isAsync) {\n        tree.debugTime(tag);\n        tree.nodeSetStatus(ctx, \"loading\");\n      } // The async Ajax request has now started...\n      // Defer the deferred:\n      // we want to be able to reject invalid responses, even if\n      // the raw HTTP Ajax XHR resolved as Ok.\n      // We use the ajaxDfd.then() syntax here, which is compatible with\n      // jQuery and ECMA6.\n      // However resultDfd is a jQuery deferred, which is currently the\n      // expected result type of nodeLoadChildren()\n\n\n      resultDfd = new $.Deferred();\n      ajaxDfd.then(function (data, textStatus, jqXHR) {\n        // ajaxDfd was resolved, but we reject or resolve resultDfd\n        // depending on the response data\n        var errorObj, res;\n\n        if ((source.dataType === \"json\" || source.dataType === \"jsonp\") && typeof data === \"string\") {\n          $.error(\"Ajax request returned a string (did you get the JSON dataType wrong?).\");\n        }\n\n        if (node._requestId && node._requestId > requestId) {\n          // The expected request time stamp is later than `requestId`\n          // (which was kept as as closure variable to this handler function)\n          // node.warn(\"Ignored load response for obsolete request #\" + requestId + \" (expected #\" + node._requestId + \")\");\n          resultDfd.rejectWith(this, [RECURSIVE_REQUEST_ERROR]);\n          return; // } else {\n          // \tnode.debug(\"Response returned for load request #\" + requestId);\n        }\n\n        if (node.parent === null && nodePrevParent !== null) {\n          resultDfd.rejectWith(this, [INVALID_REQUEST_TARGET_ERROR]);\n          return;\n        } // Allow to adjust the received response data in the `postProcess` event.\n\n\n        if (ctx.options.postProcess) {\n          // The handler may either\n          //   - modify `ctx.response` in-place (and leave `ctx.result` undefined)\n          //     => res = undefined\n          //   - return a replacement in `ctx.result`\n          //     => res = <new data>\n          //   If res contains an `error` property, an error status is displayed\n          try {\n            res = tree._triggerNodeEvent(\"postProcess\", ctx, ctx.originalEvent, {\n              response: data,\n              error: null,\n              dataType: source.dataType\n            });\n\n            if (res.error) {\n              tree.warn(\"postProcess returned error:\", res);\n            }\n          } catch (e) {\n            res = {\n              error: e,\n              message: \"\" + e,\n              details: \"postProcess failed\"\n            };\n          }\n\n          if (res.error) {\n            // Either postProcess failed with an exception, or the returned\n            // result object has an 'error' property attached:\n            errorObj = $.isPlainObject(res.error) ? res.error : {\n              message: res.error\n            };\n            errorObj = tree._makeHookContext(node, null, errorObj);\n            resultDfd.rejectWith(this, [errorObj]);\n            return;\n          }\n\n          if ($.isArray(res) || $.isPlainObject(res) && $.isArray(res.children)) {\n            // Use `ctx.result` if valid\n            // (otherwise use existing data, which may have been modified in-place)\n            data = res;\n          }\n        } else if (data && data.hasOwnProperty(\"d\") && ctx.options.enableAspx) {\n          // Process ASPX WebMethod JSON object inside \"d\" property\n          // (only if no postProcess event was defined)\n          if (ctx.options.enableAspx === 42) {\n            tree.warn(\"The default for enableAspx will change to `false` in the fututure. \" + \"Pass `enableAspx: true` or implement postProcess to silence this warning.\");\n          }\n\n          data = typeof data.d === \"string\" ? $.parseJSON(data.d) : data.d;\n        }\n\n        resultDfd.resolveWith(this, [data]);\n      }, function (jqXHR, textStatus, errorThrown) {\n        // ajaxDfd was rejected, so we reject resultDfd as well\n        var errorObj = tree._makeHookContext(node, null, {\n          error: jqXHR,\n          args: Array.prototype.slice.call(arguments),\n          message: errorThrown,\n          details: jqXHR.status + \": \" + errorThrown\n        });\n\n        resultDfd.rejectWith(this, [errorObj]);\n      }); // The async Ajax request has now started.\n      // resultDfd will be resolved/rejected after the response arrived,\n      // was postProcessed, and checked.\n      // Now we implement the UI update and add the data to the tree.\n      // We also return this promise to the caller.\n\n      resultDfd.done(function (data) {\n        tree.nodeSetStatus(ctx, \"ok\");\n        var children, metaData, noDataRes;\n\n        if ($.isPlainObject(data)) {\n          // We got {foo: 'abc', children: [...]}\n          // Copy extra properties to tree.data.foo\n          _assert(node.isRootNode(), \"source may only be an object for root nodes (expecting an array of child objects otherwise)\");\n\n          _assert($.isArray(data.children), \"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')\");\n\n          metaData = data;\n          children = data.children;\n          delete metaData.children; // Copy some attributes to tree.data\n\n          $.each(TREE_ATTRS, function (i, attr) {\n            if (metaData[attr] !== undefined) {\n              tree[attr] = metaData[attr];\n              delete metaData[attr];\n            }\n          }); // Copy all other attributes to tree.data.NAME\n\n          $.extend(tree.data, metaData);\n        } else {\n          children = data;\n        }\n\n        _assert($.isArray(children), \"expected array of children\");\n\n        node._setChildren(children);\n\n        if (tree.options.nodata && children.length === 0) {\n          if ($.isFunction(tree.options.nodata)) {\n            noDataRes = tree.options.nodata.call(tree, {\n              type: \"nodata\"\n            }, ctx);\n          } else if (tree.options.nodata === true && node.isRootNode()) {\n            noDataRes = tree.options.strings.noData;\n          } else if (typeof tree.options.nodata === \"string\" && node.isRootNode()) {\n            noDataRes = tree.options.nodata;\n          }\n\n          if (noDataRes) {\n            node.setStatus(\"nodata\", noDataRes);\n          }\n        } // trigger fancytreeloadchildren\n\n\n        tree._triggerNodeEvent(\"loadChildren\", node);\n      }).fail(function (error) {\n        var ctxErr;\n\n        if (error === RECURSIVE_REQUEST_ERROR) {\n          node.warn(\"Ignored response for obsolete load request #\" + requestId + \" (expected #\" + node._requestId + \")\");\n          return;\n        } else if (error === INVALID_REQUEST_TARGET_ERROR) {\n          node.warn(\"Lazy parent node was removed while loading: discarding response.\");\n          return;\n        } else if (error.node && error.error && error.message) {\n          // error is already a context object\n          ctxErr = error;\n        } else {\n          ctxErr = tree._makeHookContext(node, null, {\n            error: error,\n            // it can be jqXHR or any custom error\n            args: Array.prototype.slice.call(arguments),\n            message: error ? error.message || error.toString() : \"\"\n          });\n\n          if (ctxErr.message === \"[object Object]\") {\n            ctxErr.message = \"\";\n          }\n        }\n\n        node.warn(\"Load children failed (\" + ctxErr.message + \")\", ctxErr);\n\n        if (tree._triggerNodeEvent(\"loadError\", ctxErr, null) !== false) {\n          tree.nodeSetStatus(ctx, \"error\", ctxErr.message, ctxErr.details);\n        }\n      }).always(function () {\n        node._requestId = null;\n\n        if (isAsync) {\n          tree.debugTimeEnd(tag);\n        }\n      });\n      return resultDfd.promise();\n    },\n\n    /** [Not Implemented]  */\n    nodeLoadKeyPath: function (ctx, keyPathList) {// TODO: implement and improve\n      // http://code.google.com/p/dynatree/issues/detail?id=222\n    },\n\n    /**\n     * Remove a single direct child of ctx.node.\n     * @param {EventData} ctx\n     * @param {FancytreeNode} childNode dircect child of ctx.node\n     */\n    nodeRemoveChild: function (ctx, childNode) {\n      var idx,\n          node = ctx.node,\n          // opts = ctx.options,\n      subCtx = $.extend({}, ctx, {\n        node: childNode\n      }),\n          children = node.children; // FT.debug(\"nodeRemoveChild()\", node.toString(), childNode.toString());\n\n      if (children.length === 1) {\n        _assert(childNode === children[0], \"invalid single child\");\n\n        return this.nodeRemoveChildren(ctx);\n      }\n\n      if (this.activeNode && (childNode === this.activeNode || this.activeNode.isDescendantOf(childNode))) {\n        this.activeNode.setActive(false); // TODO: don't fire events\n      }\n\n      if (this.focusNode && (childNode === this.focusNode || this.focusNode.isDescendantOf(childNode))) {\n        this.focusNode = null;\n      } // TODO: persist must take care to clear select and expand cookies\n\n\n      this.nodeRemoveMarkup(subCtx);\n      this.nodeRemoveChildren(subCtx);\n      idx = $.inArray(childNode, children);\n\n      _assert(idx >= 0, \"invalid child\"); // Notify listeners\n\n\n      node.triggerModifyChild(\"remove\", childNode); // Unlink to support GC\n\n      childNode.visit(function (n) {\n        n.parent = null;\n      }, true);\n\n      this._callHook(\"treeRegisterNode\", this, false, childNode); // remove from child list\n\n\n      children.splice(idx, 1);\n    },\n\n    /**Remove HTML markup for all descendents of ctx.node.\n     * @param {EventData} ctx\n     */\n    nodeRemoveChildMarkup: function (ctx) {\n      var node = ctx.node; // FT.debug(\"nodeRemoveChildMarkup()\", node.toString());\n      // TODO: Unlink attr.ftnode to support GC\n\n      if (node.ul) {\n        if (node.isRootNode()) {\n          $(node.ul).empty();\n        } else {\n          $(node.ul).remove();\n          node.ul = null;\n        }\n\n        node.visit(function (n) {\n          n.li = n.ul = null;\n        });\n      }\n    },\n\n    /**Remove all descendants of ctx.node.\n     * @param {EventData} ctx\n     */\n    nodeRemoveChildren: function (ctx) {\n      var //subCtx,\n      tree = ctx.tree,\n          node = ctx.node,\n          children = node.children; // opts = ctx.options;\n      // FT.debug(\"nodeRemoveChildren()\", node.toString());\n\n      if (!children) {\n        return;\n      }\n\n      if (this.activeNode && this.activeNode.isDescendantOf(node)) {\n        this.activeNode.setActive(false); // TODO: don't fire events\n      }\n\n      if (this.focusNode && this.focusNode.isDescendantOf(node)) {\n        this.focusNode = null;\n      } // TODO: persist must take care to clear select and expand cookies\n\n\n      this.nodeRemoveChildMarkup(ctx); // Unlink children to support GC\n      // TODO: also delete this.children (not possible using visit())\n      // subCtx = $.extend({}, ctx);\n\n      node.triggerModifyChild(\"remove\", null);\n      node.visit(function (n) {\n        n.parent = null;\n\n        tree._callHook(\"treeRegisterNode\", tree, false, n);\n      });\n\n      if (node.lazy) {\n        // 'undefined' would be interpreted as 'not yet loaded' for lazy nodes\n        node.children = [];\n      } else {\n        node.children = null;\n      }\n\n      if (!node.isRootNode()) {\n        node.expanded = false; // #449, #459\n      }\n\n      this.nodeRenderStatus(ctx);\n    },\n\n    /**Remove HTML markup for ctx.node and all its descendents.\n     * @param {EventData} ctx\n     */\n    nodeRemoveMarkup: function (ctx) {\n      var node = ctx.node; // FT.debug(\"nodeRemoveMarkup()\", node.toString());\n      // TODO: Unlink attr.ftnode to support GC\n\n      if (node.li) {\n        $(node.li).remove();\n        node.li = null;\n      }\n\n      this.nodeRemoveChildMarkup(ctx);\n    },\n\n    /**\n     * Create `<li><span>..</span> .. </li>` tags for this node.\n     *\n     * This method takes care that all HTML markup is created that is required\n     * to display this node in its current state.\n     *\n     * Call this method to create new nodes, or after the strucuture\n     * was changed (e.g. after moving this node or adding/removing children)\n     * nodeRenderTitle() and nodeRenderStatus() are implied.\n     *\n     * ```html\n     * <li id='KEY' ftnode=NODE>\n     *     <span class='fancytree-node fancytree-expanded fancytree-has-children fancytree-lastsib fancytree-exp-el fancytree-ico-e'>\n     *         <span class=\"fancytree-expander\"></span>\n     *         <span class=\"fancytree-checkbox\"></span> // only present in checkbox mode\n     *         <span class=\"fancytree-icon\"></span>\n     *         <a href=\"#\" class=\"fancytree-title\"> Node 1 </a>\n     *     </span>\n     *     <ul> // only present if node has children\n     *         <li id='KEY' ftnode=NODE> child1 ... </li>\n     *         <li id='KEY' ftnode=NODE> child2 ... </li>\n     *     </ul>\n     * </li>\n     * ```\n     *\n     * @param {EventData} ctx\n     * @param {boolean} [force=false] re-render, even if html markup was already created\n     * @param {boolean} [deep=false] also render all descendants, even if parent is collapsed\n     * @param {boolean} [collapsed=false] force root node to be collapsed, so we can apply animated expand later\n     */\n    nodeRender: function (ctx, force, deep, collapsed, _recursive) {\n      /* This method must take care of all cases where the current data mode\n       * (i.e. node hierarchy) does not match the current markup.\n       *\n       * - node was not yet rendered:\n       *   create markup\n       * - node was rendered: exit fast\n       * - children have been added\n       * - children have been removed\n       */\n      var childLI,\n          childNode1,\n          childNode2,\n          i,\n          l,\n          next,\n          subCtx,\n          node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          aria = opts.aria,\n          firstTime = false,\n          parent = node.parent,\n          isRootNode = !parent,\n          children = node.children,\n          successorLi = null; // FT.debug(\"nodeRender(\" + !!force + \", \" + !!deep + \")\", node.toString());\n\n      if (tree._enableUpdate === false) {\n        // tree.debug(\"no render\", tree._enableUpdate);\n        return;\n      }\n\n      if (!isRootNode && !parent.ul) {\n        // Calling node.collapse on a deep, unrendered node\n        return;\n      }\n\n      _assert(isRootNode || parent.ul, \"parent UL must exist\"); // Render the node\n\n\n      if (!isRootNode) {\n        // Discard markup on force-mode, or if it is not linked to parent <ul>\n        if (node.li && (force || node.li.parentNode !== node.parent.ul)) {\n          if (node.li.parentNode === node.parent.ul) {\n            // #486: store following node, so we can insert the new markup there later\n            successorLi = node.li.nextSibling;\n          } else {\n            // May happen, when a top-level node was dropped over another\n            this.debug(\"Unlinking \" + node + \" (must be child of \" + node.parent + \")\");\n          } //\t            this.debug(\"nodeRemoveMarkup...\");\n\n\n          this.nodeRemoveMarkup(ctx);\n        } // Create <li><span /> </li>\n        // node.debug(\"render...\");\n\n\n        if (node.li) {\n          // this.nodeRenderTitle(ctx);\n          this.nodeRenderStatus(ctx);\n        } else {\n          // node.debug(\"render... really\");\n          firstTime = true;\n          node.li = document.createElement(\"li\");\n          node.li.ftnode = node;\n\n          if (node.key && opts.generateIds) {\n            node.li.id = opts.idPrefix + node.key;\n          }\n\n          node.span = document.createElement(\"span\");\n          node.span.className = \"fancytree-node\";\n\n          if (aria && !node.tr) {\n            $(node.li).attr(\"role\", \"treeitem\");\n          }\n\n          node.li.appendChild(node.span); // Create inner HTML for the <span> (expander, checkbox, icon, and title)\n\n          this.nodeRenderTitle(ctx); // Allow tweaking and binding, after node was created for the first time\n\n          if (opts.createNode) {\n            opts.createNode.call(tree, {\n              type: \"createNode\"\n            }, ctx);\n          }\n        } // Allow tweaking after node state was rendered\n\n\n        if (opts.renderNode) {\n          opts.renderNode.call(tree, {\n            type: \"renderNode\"\n          }, ctx);\n        }\n      } // Visit child nodes\n\n\n      if (children) {\n        if (isRootNode || node.expanded || deep === true) {\n          // Create a UL to hold the children\n          if (!node.ul) {\n            node.ul = document.createElement(\"ul\");\n\n            if (collapsed === true && !_recursive || !node.expanded) {\n              // hide top UL, so we can use an animation to show it later\n              node.ul.style.display = \"none\";\n            }\n\n            if (aria) {\n              $(node.ul).attr(\"role\", \"group\");\n            }\n\n            if (node.li) {\n              // issue #67\n              node.li.appendChild(node.ul);\n            } else {\n              node.tree.$div.append(node.ul);\n            }\n          } // Add child markup\n\n\n          for (i = 0, l = children.length; i < l; i++) {\n            subCtx = $.extend({}, ctx, {\n              node: children[i]\n            });\n            this.nodeRender(subCtx, force, deep, false, true);\n          } // Remove <li> if nodes have moved to another parent\n\n\n          childLI = node.ul.firstChild;\n\n          while (childLI) {\n            childNode2 = childLI.ftnode;\n\n            if (childNode2 && childNode2.parent !== node) {\n              node.debug(\"_fixParent: remove missing \" + childNode2, childLI);\n              next = childLI.nextSibling;\n              childLI.parentNode.removeChild(childLI);\n              childLI = next;\n            } else {\n              childLI = childLI.nextSibling;\n            }\n          } // Make sure, that <li> order matches node.children order.\n\n\n          childLI = node.ul.firstChild;\n\n          for (i = 0, l = children.length - 1; i < l; i++) {\n            childNode1 = children[i];\n            childNode2 = childLI.ftnode;\n\n            if (childNode1 === childNode2) {\n              childLI = childLI.nextSibling;\n            } else {\n              // node.debug(\"_fixOrder: mismatch at index \" + i + \": \" + childNode1 + \" != \" + childNode2);\n              node.ul.insertBefore(childNode1.li, childNode2.li);\n            }\n          }\n        }\n      } else {\n        // No children: remove markup if any\n        if (node.ul) {\n          // alert(\"remove child markup for \" + node);\n          this.warn(\"remove child markup for \" + node);\n          this.nodeRemoveChildMarkup(ctx);\n        }\n      }\n\n      if (!isRootNode) {\n        // Update element classes according to node state\n        // this.nodeRenderStatus(ctx);\n        // Finally add the whole structure to the DOM, so the browser can render\n        if (firstTime) {\n          // #486: successorLi is set, if we re-rendered (i.e. discarded)\n          // existing markup, which  we want to insert at the same position.\n          // (null is equivalent to append)\n          // \t\tparent.ul.appendChild(node.li);\n          parent.ul.insertBefore(node.li, successorLi);\n        }\n      }\n    },\n\n    /** Create HTML inside the node's outer `<span>` (i.e. expander, checkbox,\n     * icon, and title).\n     *\n     * nodeRenderStatus() is implied.\n     * @param {EventData} ctx\n     * @param {string} [title] optinal new title\n     */\n    nodeRenderTitle: function (ctx, title) {\n      // set node connector images, links and text\n      var checkbox,\n          className,\n          icon,\n          nodeTitle,\n          role,\n          tabindex,\n          tooltip,\n          iconTooltip,\n          node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          aria = opts.aria,\n          level = node.getLevel(),\n          ares = [];\n\n      if (title !== undefined) {\n        node.title = title;\n      }\n\n      if (!node.span || tree._enableUpdate === false) {\n        // Silently bail out if node was not rendered yet, assuming\n        // node.render() will be called as the node becomes visible\n        return;\n      } // Connector (expanded, expandable or simple)\n\n\n      role = aria && node.hasChildren() !== false ? \" role='button'\" : \"\";\n\n      if (level < opts.minExpandLevel) {\n        if (!node.lazy) {\n          node.expanded = true;\n        }\n\n        if (level > 1) {\n          ares.push(\"<span \" + role + \" class='fancytree-expander fancytree-expander-fixed'></span>\");\n        } // .. else (i.e. for root level) skip expander/connector alltogether\n\n      } else {\n        ares.push(\"<span \" + role + \" class='fancytree-expander'></span>\");\n      } // Checkbox mode\n\n\n      checkbox = FT.evalOption(\"checkbox\", node, node, opts, false);\n\n      if (checkbox && !node.isStatusNode()) {\n        role = aria ? \" role='checkbox'\" : \"\";\n        className = \"fancytree-checkbox\";\n\n        if (checkbox === \"radio\" || node.parent && node.parent.radiogroup) {\n          className += \" fancytree-radio\";\n        }\n\n        ares.push(\"<span \" + role + \" class='\" + className + \"'></span>\");\n      } // Folder or doctype icon\n\n\n      if (node.data.iconClass !== undefined) {\n        // 2015-11-16\n        // Handle / warn about backward compatibility\n        if (node.icon) {\n          $.error(\"'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead\");\n        } else {\n          node.warn(\"'iconClass' node option is deprecated since v2.14.0: use 'icon' instead\");\n          node.icon = node.data.iconClass;\n        }\n      } // If opts.icon is a callback and returns something other than undefined, use that\n      // else if node.icon is a boolean or string, use that\n      // else if opts.icon is a boolean or string, use that\n      // else show standard icon (which may be different for folders or documents)\n\n\n      icon = FT.evalOption(\"icon\", node, node, opts, true); // if( typeof icon !== \"boolean\" ) {\n      // \t// icon is defined, but not true/false: must be a string\n      // \ticon = \"\" + icon;\n      // }\n\n      if (icon !== false) {\n        role = aria ? \" role='presentation'\" : \"\";\n        iconTooltip = FT.evalOption(\"iconTooltip\", node, node, opts, null);\n        iconTooltip = iconTooltip ? \" title='\" + _escapeTooltip(iconTooltip) + \"'\" : \"\";\n\n        if (typeof icon === \"string\") {\n          if (TEST_IMG.test(icon)) {\n            // node.icon is an image url. Prepend imagePath\n            icon = icon.charAt(0) === \"/\" ? icon : (opts.imagePath || \"\") + icon;\n            ares.push(\"<img src='\" + icon + \"' class='fancytree-icon'\" + iconTooltip + \" alt='' />\");\n          } else {\n            ares.push(\"<span \" + role + \" class='fancytree-custom-icon \" + icon + \"'\" + iconTooltip + \"></span>\");\n          }\n        } else if (icon.text) {\n          ares.push(\"<span \" + role + \" class='fancytree-custom-icon \" + (icon.addClass || \"\") + \"'\" + iconTooltip + \">\" + FT.escapeHtml(icon.text) + \"</span>\");\n        } else if (icon.html) {\n          ares.push(\"<span \" + role + \" class='fancytree-custom-icon \" + (icon.addClass || \"\") + \"'\" + iconTooltip + \">\" + icon.html + \"</span>\");\n        } else {\n          // standard icon: theme css will take care of this\n          ares.push(\"<span \" + role + \" class='fancytree-icon'\" + iconTooltip + \"></span>\");\n        }\n      } // Node title\n\n\n      nodeTitle = \"\";\n\n      if (opts.renderTitle) {\n        nodeTitle = opts.renderTitle.call(tree, {\n          type: \"renderTitle\"\n        }, ctx) || \"\";\n      }\n\n      if (!nodeTitle) {\n        tooltip = FT.evalOption(\"tooltip\", node, node, opts, null);\n\n        if (tooltip === true) {\n          tooltip = node.title;\n        } // if( node.tooltip ) {\n        // \ttooltip = node.tooltip;\n        // } else if ( opts.tooltip ) {\n        // \ttooltip = opts.tooltip === true ? node.title : opts.tooltip.call(tree, node);\n        // }\n\n\n        tooltip = tooltip ? \" title='\" + _escapeTooltip(tooltip) + \"'\" : \"\";\n        tabindex = opts.titlesTabbable ? \" tabindex='0'\" : \"\";\n        nodeTitle = \"<span class='fancytree-title'\" + tooltip + tabindex + \">\" + (opts.escapeTitles ? FT.escapeHtml(node.title) : node.title) + \"</span>\";\n      }\n\n      ares.push(nodeTitle); // Note: this will trigger focusout, if node had the focus\n      //$(node.span).html(ares.join(\"\")); // it will cleanup the jQuery data currently associated with SPAN (if any), but it executes more slowly\n\n      node.span.innerHTML = ares.join(\"\"); // Update CSS classes\n\n      this.nodeRenderStatus(ctx);\n\n      if (opts.enhanceTitle) {\n        ctx.$title = $(\">span.fancytree-title\", node.span);\n        nodeTitle = opts.enhanceTitle.call(tree, {\n          type: \"enhanceTitle\"\n        }, ctx) || \"\";\n      }\n    },\n\n    /** Update element classes according to node state.\n     * @param {EventData} ctx\n     */\n    nodeRenderStatus: function (ctx) {\n      // Set classes for current status\n      var $ariaElem,\n          node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          // \tnodeContainer = node[tree.nodeContainerAttrName],\n      hasChildren = node.hasChildren(),\n          isLastSib = node.isLastSibling(),\n          aria = opts.aria,\n          cn = opts._classNames,\n          cnList = [],\n          statusElem = node[tree.statusClassPropName];\n\n      if (!statusElem || tree._enableUpdate === false) {\n        // if this function is called for an unrendered node, ignore it (will be updated on nect render anyway)\n        return;\n      }\n\n      if (aria) {\n        $ariaElem = $(node.tr || node.li);\n      } // Build a list of class names that we will add to the node <span>\n\n\n      cnList.push(cn.node);\n\n      if (tree.activeNode === node) {\n        cnList.push(cn.active); // \t\t$(\">span.fancytree-title\", statusElem).attr(\"tabindex\", \"0\");\n        // \t\ttree.$container.removeAttr(\"tabindex\");\n        // }else{\n        // \t\t$(\">span.fancytree-title\", statusElem).removeAttr(\"tabindex\");\n        // \t\ttree.$container.attr(\"tabindex\", \"0\");\n      }\n\n      if (tree.focusNode === node) {\n        cnList.push(cn.focused);\n      }\n\n      if (node.expanded) {\n        cnList.push(cn.expanded);\n      }\n\n      if (aria) {\n        if (hasChildren === false) {\n          $ariaElem.removeAttr(\"aria-expanded\");\n        } else {\n          $ariaElem.attr(\"aria-expanded\", Boolean(node.expanded));\n        }\n      }\n\n      if (node.folder) {\n        cnList.push(cn.folder);\n      }\n\n      if (hasChildren !== false) {\n        cnList.push(cn.hasChildren);\n      } // TODO: required?\n\n\n      if (isLastSib) {\n        cnList.push(cn.lastsib);\n      }\n\n      if (node.lazy && node.children == null) {\n        cnList.push(cn.lazy);\n      }\n\n      if (node.partload) {\n        cnList.push(cn.partload);\n      }\n\n      if (node.partsel) {\n        cnList.push(cn.partsel);\n      }\n\n      if (FT.evalOption(\"unselectable\", node, node, opts, false)) {\n        cnList.push(cn.unselectable);\n      }\n\n      if (node._isLoading) {\n        cnList.push(cn.loading);\n      }\n\n      if (node._error) {\n        cnList.push(cn.error);\n      }\n\n      if (node.statusNodeType) {\n        cnList.push(cn.statusNodePrefix + node.statusNodeType);\n      }\n\n      if (node.selected) {\n        cnList.push(cn.selected);\n\n        if (aria) {\n          $ariaElem.attr(\"aria-selected\", true);\n        }\n      } else if (aria) {\n        $ariaElem.attr(\"aria-selected\", false);\n      }\n\n      if (node.extraClasses) {\n        cnList.push(node.extraClasses);\n      } // IE6 doesn't correctly evaluate multiple class names,\n      // so we create combined class names that can be used in the CSS\n\n\n      if (hasChildren === false) {\n        cnList.push(cn.combinedExpanderPrefix + \"n\" + (isLastSib ? \"l\" : \"\"));\n      } else {\n        cnList.push(cn.combinedExpanderPrefix + (node.expanded ? \"e\" : \"c\") + (node.lazy && node.children == null ? \"d\" : \"\") + (isLastSib ? \"l\" : \"\"));\n      }\n\n      cnList.push(cn.combinedIconPrefix + (node.expanded ? \"e\" : \"c\") + (node.folder ? \"f\" : \"\")); // node.span.className = cnList.join(\" \");\n\n      statusElem.className = cnList.join(\" \"); // TODO: we should not set this in the <span> tag also, if we set it here:\n      // Maybe most (all) of the classes should be set in LI instead of SPAN?\n\n      if (node.li) {\n        // #719: we have to consider that there may be already other classes:\n        $(node.li).toggleClass(cn.lastsib, isLastSib);\n      }\n    },\n\n    /** Activate node.\n     * flag defaults to true.\n     * If flag is true, the node is activated (must be a synchronous operation)\n     * If flag is false, the node is deactivated (must be a synchronous operation)\n     * @param {EventData} ctx\n     * @param {boolean} [flag=true]\n     * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false}\n     * @returns {$.Promise}\n     */\n    nodeSetActive: function (ctx, flag, callOpts) {\n      // Handle user click / [space] / [enter], according to clickFolderMode.\n      callOpts = callOpts || {};\n      var subCtx,\n          node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          noEvents = callOpts.noEvents === true,\n          noFocus = callOpts.noFocus === true,\n          scroll = callOpts.scrollIntoView !== false,\n          isActive = node === tree.activeNode; // flag defaults to true\n\n      flag = flag !== false; // node.debug(\"nodeSetActive\", flag);\n\n      if (isActive === flag) {\n        // Nothing to do\n        return _getResolvedPromise(node);\n      } else if (flag && !noEvents && this._triggerNodeEvent(\"beforeActivate\", node, ctx.originalEvent) === false) {\n        // Callback returned false\n        return _getRejectedPromise(node, [\"rejected\"]);\n      }\n\n      if (flag) {\n        if (tree.activeNode) {\n          _assert(tree.activeNode !== node, \"node was active (inconsistency)\");\n\n          subCtx = $.extend({}, ctx, {\n            node: tree.activeNode\n          });\n          tree.nodeSetActive(subCtx, false);\n\n          _assert(tree.activeNode === null, \"deactivate was out of sync?\");\n        }\n\n        if (opts.activeVisible) {\n          // If no focus is set (noFocus: true) and there is no focused node, this node is made visible.\n          // scroll = noFocus && tree.focusNode == null;\n          // #863: scroll by default (unless `scrollIntoView: false` was passed)\n          node.makeVisible({\n            scrollIntoView: scroll\n          });\n        }\n\n        tree.activeNode = node;\n        tree.nodeRenderStatus(ctx);\n\n        if (!noFocus) {\n          tree.nodeSetFocus(ctx);\n        }\n\n        if (!noEvents) {\n          tree._triggerNodeEvent(\"activate\", node, ctx.originalEvent);\n        }\n      } else {\n        _assert(tree.activeNode === node, \"node was not active (inconsistency)\");\n\n        tree.activeNode = null;\n        this.nodeRenderStatus(ctx);\n\n        if (!noEvents) {\n          ctx.tree._triggerNodeEvent(\"deactivate\", node, ctx.originalEvent);\n        }\n      }\n\n      return _getResolvedPromise(node);\n    },\n\n    /** Expand or collapse node, return Deferred.promise.\n     *\n     * @param {EventData} ctx\n     * @param {boolean} [flag=true]\n     * @param {object} [opts] additional options. Defaults to `{noAnimation: false, noEvents: false}`\n     * @returns {$.Promise} The deferred will be resolved as soon as the (lazy)\n     *     data was retrieved, rendered, and the expand animation finished.\n     */\n    nodeSetExpanded: function (ctx, flag, callOpts) {\n      callOpts = callOpts || {};\n\n      var _afterLoad,\n          dfd,\n          i,\n          l,\n          parents,\n          prevAC,\n          node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          noAnimation = callOpts.noAnimation === true,\n          noEvents = callOpts.noEvents === true; // flag defaults to true\n\n\n      flag = flag !== false; // node.debug(\"nodeSetExpanded(\" + flag + \")\");\n\n      if ($(node.li).hasClass(opts._classNames.animating)) {\n        node.warn(\"setExpanded(\" + flag + \") while animating: ignored.\");\n        return _getRejectedPromise(node, [\"recursion\"]);\n      }\n\n      if (node.expanded && flag || !node.expanded && !flag) {\n        // Nothing to do\n        // node.debug(\"nodeSetExpanded(\" + flag + \"): nothing to do\");\n        return _getResolvedPromise(node);\n      } else if (flag && !node.lazy && !node.hasChildren()) {\n        // Prevent expanding of empty nodes\n        // return _getRejectedPromise(node, [\"empty\"]);\n        return _getResolvedPromise(node);\n      } else if (!flag && node.getLevel() < opts.minExpandLevel) {\n        // Prevent collapsing locked levels\n        return _getRejectedPromise(node, [\"locked\"]);\n      } else if (!noEvents && this._triggerNodeEvent(\"beforeExpand\", node, ctx.originalEvent) === false) {\n        // Callback returned false\n        return _getRejectedPromise(node, [\"rejected\"]);\n      } // If this node inside a collpased node, no animation and scrolling is needed\n\n\n      if (!noAnimation && !node.isVisible()) {\n        noAnimation = callOpts.noAnimation = true;\n      }\n\n      dfd = new $.Deferred(); // Auto-collapse mode: collapse all siblings\n\n      if (flag && !node.expanded && opts.autoCollapse) {\n        parents = node.getParentList(false, true);\n        prevAC = opts.autoCollapse;\n\n        try {\n          opts.autoCollapse = false;\n\n          for (i = 0, l = parents.length; i < l; i++) {\n            // TODO: should return promise?\n            this._callHook(\"nodeCollapseSiblings\", parents[i], callOpts);\n          }\n        } finally {\n          opts.autoCollapse = prevAC;\n        }\n      } // Trigger expand/collapse after expanding\n\n\n      dfd.done(function () {\n        var lastChild = node.getLastChild();\n\n        if (flag && opts.autoScroll && !noAnimation && lastChild && tree._enableUpdate) {\n          // Scroll down to last child, but keep current node visible\n          lastChild.scrollIntoView(true, {\n            topNode: node\n          }).always(function () {\n            if (!noEvents) {\n              ctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n            }\n          });\n        } else {\n          if (!noEvents) {\n            ctx.tree._triggerNodeEvent(flag ? \"expand\" : \"collapse\", ctx);\n          }\n        }\n      }); // vvv Code below is executed after loading finished:\n\n      _afterLoad = function (callback) {\n        var cn = opts._classNames,\n            isVisible,\n            isExpanded,\n            effect = opts.toggleEffect;\n        node.expanded = flag;\n\n        tree._callHook(\"treeStructureChanged\", ctx, flag ? \"expand\" : \"collapse\"); // Create required markup, but make sure the top UL is hidden, so we\n        // can animate later\n\n\n        tree._callHook(\"nodeRender\", ctx, false, false, true); // Hide children, if node is collapsed\n\n\n        if (node.ul) {\n          isVisible = node.ul.style.display !== \"none\";\n          isExpanded = !!node.expanded;\n\n          if (isVisible === isExpanded) {\n            node.warn(\"nodeSetExpanded: UL.style.display already set\");\n          } else if (!effect || noAnimation) {\n            node.ul.style.display = node.expanded || !parent ? \"\" : \"none\";\n          } else {\n            // The UI toggle() effect works with the ext-wide extension,\n            // while jQuery.animate() has problems when the title span\n            // has position: absolute.\n            // Since jQuery UI 1.12, the blind effect requires the parent\n            // element to have 'position: relative'.\n            // See #716, #717\n            $(node.li).addClass(cn.animating); // #717\n\n            if ($.isFunction($(node.ul)[effect.effect])) {\n              // tree.debug( \"use jquery.\" + effect.effect + \" method\" );\n              $(node.ul)[effect.effect]({\n                duration: effect.duration,\n                always: function () {\n                  // node.debug(\"fancytree-animating end: \" + node.li.className);\n                  $(this).removeClass(cn.animating); // #716\n\n                  $(node.li).removeClass(cn.animating); // #717\n\n                  callback();\n                }\n              });\n            } else {\n              // The UI toggle() effect works with the ext-wide extension,\n              // while jQuery.animate() has problems when the title span\n              // has positon: absolute.\n              // Since jQuery UI 1.12, the blind effect requires the parent\n              // element to have 'position: relative'.\n              // See #716, #717\n              // tree.debug(\"use specified effect (\" + effect.effect + \") with the jqueryui.toggle method\");\n              // try to stop an animation that might be already in progress\n              $(node.ul).stop(true, true); //< does not work after resetLazy has been called for a node whose animation wasn't complete and effect was \"blind\"\n              // dirty fix to remove a defunct animation (effect: \"blind\") after resetLazy has been called\n\n              $(node.ul).parent().find(\".ui-effects-placeholder\").remove();\n              $(node.ul).toggle(effect.effect, effect.options, effect.duration, function () {\n                // node.debug(\"fancytree-animating end: \" + node.li.className);\n                $(this).removeClass(cn.animating); // #716\n\n                $(node.li).removeClass(cn.animating); // #717\n\n                callback();\n              });\n            }\n\n            return;\n          }\n        }\n\n        callback();\n      }; // ^^^ Code above is executed after loading finshed.\n      // Load lazy nodes, if any. Then continue with _afterLoad()\n\n\n      if (flag && node.lazy && node.hasChildren() === undefined) {\n        // node.debug(\"nodeSetExpanded: load start...\");\n        node.load().done(function () {\n          // node.debug(\"nodeSetExpanded: load done\");\n          if (dfd.notifyWith) {\n            // requires jQuery 1.6+\n            dfd.notifyWith(node, [\"loaded\"]);\n          }\n\n          _afterLoad(function () {\n            dfd.resolveWith(node);\n          });\n        }).fail(function (errMsg) {\n          _afterLoad(function () {\n            dfd.rejectWith(node, [\"load failed (\" + errMsg + \")\"]);\n          });\n        });\n        /*\n        var source = tree._triggerNodeEvent(\"lazyLoad\", node, ctx.originalEvent);\n        _assert(typeof source !== \"boolean\", \"lazyLoad event must return source in data.result\");\n        node.debug(\"nodeSetExpanded: load start...\");\n        this._callHook(\"nodeLoadChildren\", ctx, source).done(function(){\n        \tnode.debug(\"nodeSetExpanded: load done\");\n        \tif(dfd.notifyWith){ // requires jQuery 1.6+\n        \t\tdfd.notifyWith(node, [\"loaded\"]);\n        \t}\n        \t_afterLoad.call(tree);\n        }).fail(function(errMsg){\n        \tdfd.rejectWith(node, [\"load failed (\" + errMsg + \")\"]);\n        });\n        */\n      } else {\n        _afterLoad(function () {\n          dfd.resolveWith(node);\n        });\n      } // node.debug(\"nodeSetExpanded: returns\");\n\n\n      return dfd.promise();\n    },\n\n    /** Focus or blur this node.\n     * @param {EventData} ctx\n     * @param {boolean} [flag=true]\n     */\n    nodeSetFocus: function (ctx, flag) {\n      // ctx.node.debug(\"nodeSetFocus(\" + flag + \")\");\n      var ctx2,\n          tree = ctx.tree,\n          node = ctx.node,\n          opts = tree.options,\n          // et = ctx.originalEvent && ctx.originalEvent.type,\n      isInput = ctx.originalEvent ? $(ctx.originalEvent.target).is(\":input\") : false;\n      flag = flag !== false; // (node || tree).debug(\"nodeSetFocus(\" + flag + \"), event: \" + et + \", isInput: \"+ isInput);\n      // Blur previous node if any\n\n      if (tree.focusNode) {\n        if (tree.focusNode === node && flag) {\n          // node.debug(\"nodeSetFocus(\" + flag + \"): nothing to do\");\n          return;\n        }\n\n        ctx2 = $.extend({}, ctx, {\n          node: tree.focusNode\n        });\n        tree.focusNode = null;\n\n        this._triggerNodeEvent(\"blur\", ctx2);\n\n        this._callHook(\"nodeRenderStatus\", ctx2);\n      } // Set focus to container and node\n\n\n      if (flag) {\n        if (!this.hasFocus()) {\n          node.debug(\"nodeSetFocus: forcing container focus\");\n\n          this._callHook(\"treeSetFocus\", ctx, true, {\n            calledByNode: true\n          });\n        }\n\n        node.makeVisible({\n          scrollIntoView: false\n        });\n        tree.focusNode = node;\n\n        if (opts.titlesTabbable) {\n          if (!isInput) {\n            // #621\n            $(node.span).find(\".fancytree-title\").focus();\n          }\n        }\n\n        if (opts.aria) {\n          // Set active descendant to node's span ID (create one, if needed)\n          $(tree.$container).attr(\"aria-activedescendant\", $(node.tr || node.li).uniqueId().attr(\"id\")); // \"ftal_\" + opts.idPrefix + node.key);\n        } // $(node.span).find(\".fancytree-title\").focus();\n\n\n        this._triggerNodeEvent(\"focus\", ctx); // determine if we have focus on or inside tree container\n\n\n        var hasFancytreeFocus = document.activeElement === tree.$container.get(0) || $(document.activeElement, tree.$container).length >= 1;\n\n        if (!hasFancytreeFocus) {\n          // We cannot set KB focus to a node, so use the tree container\n          // #563, #570: IE scrolls on every call to .focus(), if the container\n          // is partially outside the viewport. So do it only, when absolutely\n          // necessary.\n          $(tree.$container).focus();\n        } // if( opts.autoActivate ){\n        // \ttree.nodeSetActive(ctx, true);\n        // }\n\n\n        if (opts.autoScroll) {\n          node.scrollIntoView();\n        }\n\n        this._callHook(\"nodeRenderStatus\", ctx);\n      }\n    },\n\n    /** (De)Select node, return new status (sync).\n     *\n     * @param {EventData} ctx\n     * @param {boolean} [flag=true]\n     * @param {object} [opts] additional options. Defaults to {noEvents: false,\n     *     propagateDown: null, propagateUp: null,\n     *     callback: null,\n     *     }\n     * @returns {boolean} previous status\n     */\n    nodeSetSelected: function (ctx, flag, callOpts) {\n      callOpts = callOpts || {};\n      var node = ctx.node,\n          tree = ctx.tree,\n          opts = ctx.options,\n          noEvents = callOpts.noEvents === true,\n          parent = node.parent; // flag defaults to true\n\n      flag = flag !== false; // node.debug(\"nodeSetSelected(\" + flag + \")\", ctx);\n      // Cannot (de)select unselectable nodes directly (only by propagation or\n      // by setting the `.selected` property)\n\n      if (FT.evalOption(\"unselectable\", node, node, opts, false)) {\n        return;\n      } // Remember the user's intent, in case down -> up propagation prevents\n      // applying it to node.selected\n\n\n      node._lastSelectIntent = flag; // Confusing use of '!'\n      // Nothing to do?\n\n      if (!!node.selected === flag) {\n        if (opts.selectMode === 3 && node.partsel && !flag) {// If propagation prevented selecting this node last time, we still\n          // want to allow to apply setSelected(false) now\n        } else {\n          return flag;\n        }\n      }\n\n      if (!noEvents && this._triggerNodeEvent(\"beforeSelect\", node, ctx.originalEvent) === false) {\n        return !!node.selected;\n      }\n\n      if (flag && opts.selectMode === 1) {\n        // single selection mode (we don't uncheck all tree nodes, for performance reasons)\n        if (tree.lastSelectedNode) {\n          tree.lastSelectedNode.setSelected(false);\n        }\n\n        node.selected = flag;\n      } else if (opts.selectMode === 3 && parent && !parent.radiogroup && !node.radiogroup) {\n        // multi-hierarchical selection mode\n        node.selected = flag;\n        node.fixSelection3AfterClick(callOpts);\n      } else if (parent && parent.radiogroup) {\n        node.visitSiblings(function (n) {\n          n._changeSelectStatusAttrs(flag && n === node);\n        }, true);\n      } else {\n        // default: selectMode: 2, multi selection mode\n        node.selected = flag;\n      }\n\n      this.nodeRenderStatus(ctx);\n      tree.lastSelectedNode = flag ? node : null;\n\n      if (!noEvents) {\n        tree._triggerNodeEvent(\"select\", ctx);\n      }\n    },\n\n    /** Show node status (ok, loading, error, nodata) using styles and a dummy child node.\n     *\n     * @param {EventData} ctx\n     * @param status\n     * @param message\n     * @param details\n     * @since 2.3\n     */\n    nodeSetStatus: function (ctx, status, message, details) {\n      var node = ctx.node,\n          tree = ctx.tree;\n\n      function _clearStatusNode() {\n        // Remove dedicated dummy node, if any\n        var firstChild = node.children ? node.children[0] : null;\n\n        if (firstChild && firstChild.isStatusNode()) {\n          try {\n            // I've seen exceptions here with loadKeyPath...\n            if (node.ul) {\n              node.ul.removeChild(firstChild.li);\n              firstChild.li = null; // avoid leaks (DT issue 215)\n            }\n          } catch (e) {}\n\n          if (node.children.length === 1) {\n            node.children = [];\n          } else {\n            node.children.shift();\n          }\n\n          tree._callHook(\"treeStructureChanged\", ctx, \"clearStatusNode\");\n        }\n      }\n\n      function _setStatusNode(data, type) {\n        // Create/modify the dedicated dummy node for 'loading...' or\n        // 'error!' status. (only called for direct child of the invisible\n        // system root)\n        var firstChild = node.children ? node.children[0] : null;\n\n        if (firstChild && firstChild.isStatusNode()) {\n          $.extend(firstChild, data);\n          firstChild.statusNodeType = type;\n\n          tree._callHook(\"nodeRenderTitle\", firstChild);\n        } else {\n          node._setChildren([data]);\n\n          tree._callHook(\"treeStructureChanged\", ctx, \"setStatusNode\");\n\n          node.children[0].statusNodeType = type;\n          tree.render();\n        }\n\n        return node.children[0];\n      }\n\n      switch (status) {\n        case \"ok\":\n          _clearStatusNode();\n\n          node._isLoading = false;\n          node._error = null;\n          node.renderStatus();\n          break;\n\n        case \"loading\":\n          if (!node.parent) {\n            _setStatusNode({\n              title: tree.options.strings.loading + (message ? \" (\" + message + \")\" : \"\"),\n              // icon: true,  // needed for 'loding' icon\n              checkbox: false,\n              tooltip: details\n            }, status);\n          }\n\n          node._isLoading = true;\n          node._error = null;\n          node.renderStatus();\n          break;\n\n        case \"error\":\n          _setStatusNode({\n            title: tree.options.strings.loadError + (message ? \" (\" + message + \")\" : \"\"),\n            // icon: false,\n            checkbox: false,\n            tooltip: details\n          }, status);\n\n          node._isLoading = false;\n          node._error = {\n            message: message,\n            details: details\n          };\n          node.renderStatus();\n          break;\n\n        case \"nodata\":\n          _setStatusNode({\n            title: message || tree.options.strings.noData,\n            // icon: false,\n            checkbox: false,\n            tooltip: details\n          }, status);\n\n          node._isLoading = false;\n          node._error = null;\n          node.renderStatus();\n          break;\n\n        default:\n          $.error(\"invalid node status \" + status);\n      }\n    },\n\n    /**\n     *\n     * @param {EventData} ctx\n     */\n    nodeToggleExpanded: function (ctx) {\n      return this.nodeSetExpanded(ctx, !ctx.node.expanded);\n    },\n\n    /**\n     * @param {EventData} ctx\n     */\n    nodeToggleSelected: function (ctx) {\n      var node = ctx.node,\n          flag = !node.selected; // In selectMode: 3 this node may be unselected+partsel, even if\n      // setSelected(true) was called before, due to `unselectable` children.\n      // In this case, we now toggle as `setSelected(false)`\n\n      if (node.partsel && !node.selected && node._lastSelectIntent === true) {\n        flag = false;\n        node.selected = true; // so it is not considered 'nothing to do'\n      }\n\n      node._lastSelectIntent = flag;\n      return this.nodeSetSelected(ctx, flag);\n    },\n\n    /** Remove all nodes.\n     * @param {EventData} ctx\n     */\n    treeClear: function (ctx) {\n      var tree = ctx.tree;\n      tree.activeNode = null;\n      tree.focusNode = null;\n      tree.$div.find(\">ul.fancytree-container\").empty(); // TODO: call destructors and remove reference loops\n\n      tree.rootNode.children = null;\n\n      tree._callHook(\"treeStructureChanged\", ctx, \"clear\");\n    },\n\n    /** Widget was created (called only once, even it re-initialized).\n     * @param {EventData} ctx\n     */\n    treeCreate: function (ctx) {},\n\n    /** Widget was destroyed.\n     * @param {EventData} ctx\n     */\n    treeDestroy: function (ctx) {\n      this.$div.find(\">ul.fancytree-container\").remove();\n\n      if (this.$source) {\n        this.$source.removeClass(\"fancytree-helper-hidden\");\n      }\n    },\n\n    /** Widget was (re-)initialized.\n     * @param {EventData} ctx\n     */\n    treeInit: function (ctx) {\n      var tree = ctx.tree,\n          opts = tree.options; //this.debug(\"Fancytree.treeInit()\");\n      // Add container to the TAB chain\n      // See http://www.w3.org/TR/wai-aria-practices/#focus_activedescendant\n      // #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n\n      tree.$container.attr(\"tabindex\", opts.tabindex); // Copy some attributes to tree.data\n\n      $.each(TREE_ATTRS, function (i, attr) {\n        if (opts[attr] !== undefined) {\n          tree.info(\"Move option \" + attr + \" to tree\");\n          tree[attr] = opts[attr];\n          delete opts[attr];\n        }\n      });\n\n      if (opts.checkboxAutoHide) {\n        tree.$container.addClass(\"fancytree-checkbox-auto-hide\");\n      }\n\n      if (opts.rtl) {\n        tree.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n      } else {\n        tree.$container.removeAttr(\"DIR\").removeClass(\"fancytree-rtl\");\n      }\n\n      if (opts.aria) {\n        tree.$container.attr(\"role\", \"tree\");\n\n        if (opts.selectMode !== 1) {\n          tree.$container.attr(\"aria-multiselectable\", true);\n        }\n      }\n\n      this.treeLoad(ctx);\n    },\n\n    /** Parse Fancytree from source, as configured in the options.\n     * @param {EventData} ctx\n     * @param {object} [source] optional new source (use last data otherwise)\n     */\n    treeLoad: function (ctx, source) {\n      var metaData,\n          type,\n          $ul,\n          tree = ctx.tree,\n          $container = ctx.widget.element,\n          dfd,\n          // calling context for root node\n      rootCtx = $.extend({}, ctx, {\n        node: this.rootNode\n      });\n\n      if (tree.rootNode.children) {\n        this.treeClear(ctx);\n      }\n\n      source = source || this.options.source;\n\n      if (!source) {\n        type = $container.data(\"type\") || \"html\";\n\n        switch (type) {\n          case \"html\":\n            // There should be an embedded `<ul>` with initial nodes,\n            // but another `<ul class='fancytree-container'>` is appended\n            // to the tree's <div> on startup anyway.\n            $ul = $container.find(\">ul\").not(\".fancytree-container\").first();\n\n            if ($ul.length) {\n              $ul.addClass(\"ui-fancytree-source fancytree-helper-hidden\");\n              source = $.ui.fancytree.parseHtml($ul); // allow to init tree.data.foo from <ul data-foo=''>\n\n              this.data = $.extend(this.data, _getElementDataAsDict($ul));\n            } else {\n              FT.warn(\"No `source` option was passed and container does not contain `<ul>`: assuming `source: []`.\");\n              source = [];\n            }\n\n            break;\n\n          case \"json\":\n            source = $.parseJSON($container.text()); // $container already contains the <ul>, but we remove the plain (json) text\n            // $container.empty();\n\n            $container.contents().filter(function () {\n              return this.nodeType === 3;\n            }).remove();\n\n            if ($.isPlainObject(source)) {\n              // We got {foo: 'abc', children: [...]}\n              _assert($.isArray(source.children), \"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')\");\n\n              metaData = source;\n              source = source.children;\n              delete metaData.children; // Copy some attributes to tree.data\n\n              $.each(TREE_ATTRS, function (i, attr) {\n                if (metaData[attr] !== undefined) {\n                  tree[attr] = metaData[attr];\n                  delete metaData[attr];\n                }\n              }); // Copy extra properties to tree.data.foo\n\n              $.extend(tree.data, metaData);\n            }\n\n            break;\n\n          default:\n            $.error(\"Invalid data-type: \" + type);\n        }\n      } else if (typeof source === \"string\") {\n        // TODO: source is an element ID\n        $.error(\"Not implemented\");\n      } // preInit is fired when the widget markup is created, but nodes\n      // not yet loaded\n\n\n      tree._triggerTreeEvent(\"preInit\", null); // Trigger fancytreeinit after nodes have been loaded\n\n\n      dfd = this.nodeLoadChildren(rootCtx, source).done(function () {\n        tree._callHook(\"treeStructureChanged\", ctx, \"loadChildren\");\n\n        tree.render();\n\n        if (ctx.options.selectMode === 3) {\n          tree.rootNode.fixSelection3FromEndNodes();\n        }\n\n        if (tree.activeNode && tree.options.activeVisible) {\n          tree.activeNode.makeVisible();\n        }\n\n        tree._triggerTreeEvent(\"init\", null, {\n          status: true\n        });\n      }).fail(function () {\n        tree.render();\n\n        tree._triggerTreeEvent(\"init\", null, {\n          status: false\n        });\n      });\n      return dfd;\n    },\n\n    /** Node was inserted into or removed from the tree.\n     * @param {EventData} ctx\n     * @param {boolean} add\n     * @param {FancytreeNode} node\n     */\n    treeRegisterNode: function (ctx, add, node) {\n      ctx.tree._callHook(\"treeStructureChanged\", ctx, add ? \"addNode\" : \"removeNode\");\n    },\n\n    /** Widget got focus.\n     * @param {EventData} ctx\n     * @param {boolean} [flag=true]\n     */\n    treeSetFocus: function (ctx, flag, callOpts) {\n      var targetNode;\n      flag = flag !== false; // this.debug(\"treeSetFocus(\" + flag + \"), callOpts: \", callOpts, this.hasFocus());\n      // this.debug(\"    focusNode: \" + this.focusNode);\n      // this.debug(\"    activeNode: \" + this.activeNode);\n\n      if (flag !== this.hasFocus()) {\n        this._hasFocus = flag;\n\n        if (!flag && this.focusNode) {\n          // Node also looses focus if widget blurs\n          this.focusNode.setFocus(false);\n        } else if (flag && (!callOpts || !callOpts.calledByNode)) {\n          $(this.$container).focus();\n        }\n\n        this.$container.toggleClass(\"fancytree-treefocus\", flag);\n\n        this._triggerTreeEvent(flag ? \"focusTree\" : \"blurTree\");\n\n        if (flag && !this.activeNode) {\n          // #712: Use last mousedowned node ('click' event fires after focusin)\n          targetNode = this._lastMousedownNode || this.getFirstChild();\n\n          if (targetNode) {\n            targetNode.setFocus();\n          }\n        }\n      }\n    },\n\n    /** Widget option was set using `$().fancytree(\"option\", \"KEY\", VALUE)`.\n     *\n     * Note: `key` may reference a nested option, e.g. 'dnd5.scroll'.\n     * In this case `value`contains the complete, modified `dnd5` option hash.\n     * We can check for changed values like\n     *     if( value.scroll !== tree.options.dnd5.scroll ) {...}\n     *\n     * @param {EventData} ctx\n     * @param {string} key option name\n     * @param {any} value option value\n     */\n    treeSetOption: function (ctx, key, value) {\n      var tree = ctx.tree,\n          callDefault = true,\n          callCreate = false,\n          callRender = false;\n\n      switch (key) {\n        case \"aria\":\n        case \"checkbox\":\n        case \"icon\":\n        case \"minExpandLevel\":\n        case \"tabindex\":\n          // tree._callHook(\"treeCreate\", tree);\n          callCreate = true;\n          callRender = true;\n          break;\n\n        case \"checkboxAutoHide\":\n          tree.$container.toggleClass(\"fancytree-checkbox-auto-hide\", !!value);\n          break;\n\n        case \"escapeTitles\":\n        case \"tooltip\":\n          callRender = true;\n          break;\n\n        case \"rtl\":\n          if (value === false) {\n            tree.$container.removeAttr(\"DIR\").removeClass(\"fancytree-rtl\");\n          } else {\n            tree.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n          }\n\n          callRender = true;\n          break;\n\n        case \"source\":\n          callDefault = false;\n\n          tree._callHook(\"treeLoad\", tree, value);\n\n          callRender = true;\n          break;\n      }\n\n      tree.debug(\"set option \" + key + \"=\" + value + \" <\" + typeof value + \">\");\n\n      if (callDefault) {\n        if (this.widget._super) {\n          // jQuery UI 1.9+\n          this.widget._super.call(this.widget, key, value);\n        } else {\n          // jQuery UI <= 1.8, we have to manually invoke the _setOption method from the base widget\n          $.Widget.prototype._setOption.call(this.widget, key, value);\n        }\n      }\n\n      if (callCreate) {\n        tree._callHook(\"treeCreate\", tree);\n      }\n\n      if (callRender) {\n        tree.render(true, false); // force, not-deep\n      }\n    },\n\n    /** A Node was added, removed, moved, or it's visibility changed.\n     * @param {EventData} ctx\n     */\n    treeStructureChanged: function (ctx, type) {}\n  });\n  /*******************************************************************************\n   * jQuery UI widget boilerplate\n   */\n\n  /**\n   * The plugin (derrived from [jQuery.Widget](http://api.jqueryui.com/jQuery.widget/)).\n   *\n   * **Note:**\n   * These methods implement the standard jQuery UI widget API.\n   * It is recommended to use methods of the {Fancytree} instance instead\n   *\n   * @example\n   * // DEPRECATED: Access jQuery UI widget methods and members:\n   * var tree = $(\"#tree\").fancytree(\"getTree\", \"#myTree\");\n   * var node = $.ui.fancytree.getTree(\"#tree\").getActiveNode();\n   *\n   * // RECOMMENDED: Use the Fancytree object API\n   * var tree = $.ui.fancytree.getTree(\"#myTree\");\n   * var node = tree.getActiveNode();\n   *\n   * // or you may already have stored the tree instance upon creation:\n   * import {createTree, version} from 'jquery.fancytree'\n   * const tree = createTree('#tree', { ... });\n   * var node = tree.getActiveNode();\n   *\n   * @see {Fancytree_Static#getTree}\n   * @deprecated Use methods of the {Fancytree} instance instead\n   * @mixin Fancytree_Widget\n   */\n\n  $.widget(\"ui.fancytree\",\n  /** @lends Fancytree_Widget# */\n  {\n    /**These options will be used as defaults\n     * @type {FancytreeOptions}\n     */\n    options: {\n      activeVisible: true,\n      ajax: {\n        type: \"GET\",\n        cache: false,\n        // false: Append random '_' argument to the request url to prevent caching.\n        // timeout: 0, // >0: Make sure we get an ajax error if server is unreachable\n        dataType: \"json\" // Expect json format and pass json object to callbacks.\n\n      },\n      aria: true,\n      autoActivate: true,\n      autoCollapse: false,\n      autoScroll: false,\n      checkbox: false,\n      clickFolderMode: 4,\n      copyFunctionsToData: false,\n      debugLevel: null,\n      // 0..4 (null: use global setting $.ui.fancytree.debugLevel)\n      disabled: false,\n      // TODO: required anymore?\n      enableAspx: 42,\n      // TODO: this is truethy, but distinguishable from true: default will change to false in the future\n      escapeTitles: false,\n      extensions: [],\n      focusOnSelect: false,\n      generateIds: false,\n      icon: true,\n      idPrefix: \"ft_\",\n      keyboard: true,\n      keyPathSeparator: \"/\",\n      minExpandLevel: 1,\n      nodata: true,\n      // (bool, string, or callback) display message, when no data available\n      quicksearch: false,\n      rtl: false,\n      scrollOfs: {\n        top: 0,\n        bottom: 0\n      },\n      scrollParent: null,\n      selectMode: 2,\n      strings: {\n        loading: \"Loading...\",\n        // &#8230; would be escaped when escapeTitles is true\n        loadError: \"Load error!\",\n        moreData: \"More...\",\n        noData: \"No data.\"\n      },\n      tabindex: \"0\",\n      titlesTabbable: false,\n      toggleEffect: {\n        effect: \"slideToggle\",\n        duration: 200\n      },\n      //< \"toggle\" or \"slideToggle\" to use jQuery instead of jQueryUI for toggleEffect animation\n      tooltip: false,\n      treeId: null,\n      _classNames: {\n        active: \"fancytree-active\",\n        animating: \"fancytree-animating\",\n        combinedExpanderPrefix: \"fancytree-exp-\",\n        combinedIconPrefix: \"fancytree-ico-\",\n        error: \"fancytree-error\",\n        expanded: \"fancytree-expanded\",\n        focused: \"fancytree-focused\",\n        folder: \"fancytree-folder\",\n        hasChildren: \"fancytree-has-children\",\n        lastsib: \"fancytree-lastsib\",\n        lazy: \"fancytree-lazy\",\n        loading: \"fancytree-loading\",\n        node: \"fancytree-node\",\n        partload: \"fancytree-partload\",\n        partsel: \"fancytree-partsel\",\n        radio: \"fancytree-radio\",\n        selected: \"fancytree-selected\",\n        statusNodePrefix: \"fancytree-statusnode-\",\n        unselectable: \"fancytree-unselectable\"\n      },\n      // events\n      lazyLoad: null,\n      postProcess: null\n    },\n    _deprecationWarning: function (name) {\n      var tree = this.tree;\n\n      if (tree && tree.options.debugLevel >= 3) {\n        tree.warn(\"$().fancytree('\" + name + \"') is deprecated (see https://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Widget.html\");\n      }\n    },\n\n    /* Set up the widget, Called on first $().fancytree() */\n    _create: function () {\n      this.tree = new Fancytree(this);\n      this.$source = this.source || this.element.data(\"type\") === \"json\" ? this.element : this.element.find(\">ul\").first(); // Subclass Fancytree instance with all enabled extensions\n\n      var extension,\n          extName,\n          i,\n          opts = this.options,\n          extensions = opts.extensions,\n          base = this.tree;\n\n      for (i = 0; i < extensions.length; i++) {\n        extName = extensions[i];\n        extension = $.ui.fancytree._extensions[extName];\n\n        if (!extension) {\n          $.error(\"Could not apply extension '\" + extName + \"' (it is not registered, did you forget to include it?)\");\n        } // Add extension options as tree.options.EXTENSION\n        // \t_assert(!this.tree.options[extName], \"Extension name must not exist as option name: \" + extName);\n        // console.info(\"extend \" + extName, extension.options, this.tree.options[extName])\n        // issue #876: we want to replace custom array-options, not merge them\n\n\n        this.tree.options[extName] = _simpleDeepMerge({}, extension.options, this.tree.options[extName]); // this.tree.options[extName] = $.extend(true, {}, extension.options, this.tree.options[extName]);\n        // console.info(\"extend \" + extName + \" =>\", this.tree.options[extName])\n        // console.info(\"extend \" + extName + \" org default =>\", extension.options)\n        // Add a namespace tree.ext.EXTENSION, to hold instance data\n\n        _assert(this.tree.ext[extName] === undefined, \"Extension name must not exist as Fancytree.ext attribute: '\" + extName + \"'\"); // this.tree[extName] = extension;\n\n\n        this.tree.ext[extName] = {}; // Subclass Fancytree methods using proxies.\n\n        _subclassObject(this.tree, base, extension, extName); // current extension becomes base for the next extension\n\n\n        base = extension;\n      } //\n\n\n      if (opts.icons !== undefined) {\n        // 2015-11-16\n        if (opts.icon === true) {\n          this.tree.warn(\"'icons' tree option is deprecated since v2.14.0: use 'icon' instead\");\n          opts.icon = opts.icons;\n        } else {\n          $.error(\"'icons' tree option is deprecated since v2.14.0: use 'icon' only instead\");\n        }\n      }\n\n      if (opts.iconClass !== undefined) {\n        // 2015-11-16\n        if (opts.icon) {\n          $.error(\"'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead\");\n        } else {\n          this.tree.warn(\"'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead\");\n          opts.icon = opts.iconClass;\n        }\n      }\n\n      if (opts.tabbable !== undefined) {\n        // 2016-04-04\n        opts.tabindex = opts.tabbable ? \"0\" : \"-1\";\n        this.tree.warn(\"'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='\" + opts.tabindex + \"' instead\");\n      } //\n\n\n      this.tree._callHook(\"treeCreate\", this.tree); // Note: 'fancytreecreate' event is fired by widget base class\n      //        this.tree._triggerTreeEvent(\"create\");\n\n    },\n\n    /* Called on every $().fancytree() */\n    _init: function () {\n      this.tree._callHook(\"treeInit\", this.tree); // TODO: currently we call bind after treeInit, because treeInit\n      // might change tree.$container.\n      // It would be better, to move event binding into hooks altogether\n\n\n      this._bind();\n    },\n\n    /* Use the _setOption method to respond to changes to options. */\n    _setOption: function (key, value) {\n      return this.tree._callHook(\"treeSetOption\", this.tree, key, value);\n    },\n\n    /** Use the destroy method to clean up any modifications your widget has made to the DOM */\n    _destroy: function () {\n      this._unbind();\n\n      this.tree._callHook(\"treeDestroy\", this.tree); // In jQuery UI 1.8, you must invoke the destroy method from the base widget\n      // $.Widget.prototype.destroy.call(this);\n      // TODO: delete tree and nodes to make garbage collect easier?\n      // TODO: In jQuery UI 1.9 and above, you would define _destroy instead of destroy and not call the base method\n\n    },\n    // -------------------------------------------------------------------------\n\n    /* Remove all event handlers for our namespace */\n    _unbind: function () {\n      var ns = this.tree._ns;\n      this.element.off(ns);\n      this.tree.$container.off(ns);\n      $(document).off(ns);\n    },\n\n    /* Add mouse and kyboard handlers to the container */\n    _bind: function () {\n      var self = this,\n          opts = this.options,\n          tree = this.tree,\n          ns = tree._ns; // selstartEvent = ( $.support.selectstart ? \"selectstart\" : \"mousedown\" )\n      // Remove all previuous handlers for this tree\n\n      this._unbind(); //alert(\"keydown\" + ns + \"foc=\" + tree.hasFocus() + tree.$container);\n      // tree.debug(\"bind events; container: \", tree.$container);\n\n\n      tree.$container.on(\"focusin\" + ns + \" focusout\" + ns, function (event) {\n        var node = FT.getNode(event),\n            flag = event.type === \"focusin\";\n\n        if (!flag && node && $(event.target).is(\"a\")) {\n          // #764\n          node.debug(\"Ignored focusout on embedded <a> element.\");\n          return;\n        } // tree.treeOnFocusInOut.call(tree, event);\n        // tree.debug(\"Tree container got event \" + event.type, node, event, FT.getEventTarget(event));\n\n\n        if (flag) {\n          if (tree._getExpiringValue(\"focusin\")) {\n            // #789: IE 11 may send duplicate focusin events\n            tree.debug(\"Ignored double focusin.\");\n            return;\n          }\n\n          tree._setExpiringValue(\"focusin\", true, 50);\n\n          if (!node) {\n            // #789: IE 11 may send focusin before mousdown(?)\n            node = tree._getExpiringValue(\"mouseDownNode\");\n\n            if (node) {\n              tree.debug(\"Reconstruct mouse target for focusin from recent event.\");\n            }\n          }\n        }\n\n        if (node) {\n          // For example clicking into an <input> that is part of a node\n          tree._callHook(\"nodeSetFocus\", tree._makeHookContext(node, event), flag);\n        } else {\n          if (tree.tbody && $(event.target).parents(\"table.fancytree-container > thead\").length) {\n            // #767: ignore events in the table's header\n            tree.debug(\"Ignore focus event outside table body.\", event);\n          } else {\n            tree._callHook(\"treeSetFocus\", tree, flag);\n          }\n        }\n      }).on(\"selectstart\" + ns, \"span.fancytree-title\", function (event) {\n        // prevent mouse-drags to select text ranges\n        // tree.debug(\"<span title> got event \" + event.type);\n        event.preventDefault();\n      }).on(\"keydown\" + ns, function (event) {\n        // TODO: also bind keyup and keypress\n        // tree.debug(\"got event \" + event.type + \", hasFocus:\" + tree.hasFocus());\n        // if(opts.disabled || opts.keyboard === false || !tree.hasFocus() ){\n        if (opts.disabled || opts.keyboard === false) {\n          return true;\n        }\n\n        var res,\n            node = tree.focusNode,\n            // node may be null\n        ctx = tree._makeHookContext(node || tree, event),\n            prevPhase = tree.phase;\n\n        try {\n          tree.phase = \"userEvent\"; // If a 'fancytreekeydown' handler returns false, skip the default\n          // handling (implemented by tree.nodeKeydown()).\n\n          if (node) {\n            res = tree._triggerNodeEvent(\"keydown\", node, event);\n          } else {\n            res = tree._triggerTreeEvent(\"keydown\", event);\n          }\n\n          if (res === \"preventNav\") {\n            res = true; // prevent keyboard navigation, but don't prevent default handling of embedded input controls\n          } else if (res !== false) {\n            res = tree._callHook(\"nodeKeydown\", ctx);\n          }\n\n          return res;\n        } finally {\n          tree.phase = prevPhase;\n        }\n      }).on(\"mousedown\" + ns, function (event) {\n        var et = FT.getEventTarget(event); // self.tree.debug(\"event(\" + event.type + \"): node: \", et.node);\n        // #712: Store the clicked node, so we can use it when we get a focusin event\n        //       ('click' event fires after focusin)\n        // tree.debug(\"event(\" + event.type + \"): node: \", et.node);\n\n        tree._lastMousedownNode = et ? et.node : null; // #789: Store the node also for a short period, so we can use it\n        // in a *resulting* focusin event\n\n        tree._setExpiringValue(\"mouseDownNode\", tree._lastMousedownNode);\n      }).on(\"click\" + ns + \" dblclick\" + ns, function (event) {\n        if (opts.disabled) {\n          return true;\n        }\n\n        var ctx,\n            et = FT.getEventTarget(event),\n            node = et.node,\n            tree = self.tree,\n            prevPhase = tree.phase; // self.tree.debug(\"event(\" + event.type + \"): node: \", node);\n\n        if (!node) {\n          return true; // Allow bubbling of other events\n        }\n\n        ctx = tree._makeHookContext(node, event); // self.tree.debug(\"event(\" + event.type + \"): node: \", node);\n\n        try {\n          tree.phase = \"userEvent\";\n\n          switch (event.type) {\n            case \"click\":\n              ctx.targetType = et.type;\n\n              if (node.isPagingNode()) {\n                return tree._triggerNodeEvent(\"clickPaging\", ctx, event) === true;\n              }\n\n              return tree._triggerNodeEvent(\"click\", ctx, event) === false ? false : tree._callHook(\"nodeClick\", ctx);\n\n            case \"dblclick\":\n              ctx.targetType = et.type;\n              return tree._triggerNodeEvent(\"dblclick\", ctx, event) === false ? false : tree._callHook(\"nodeDblclick\", ctx);\n          }\n        } finally {\n          tree.phase = prevPhase;\n        }\n      });\n    },\n\n    /** Return the active node or null.\n     * @returns {FancytreeNode}\n     * @deprecated Use methods of the Fancytree instance instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n     */\n    getActiveNode: function () {\n      this._deprecationWarning(\"getActiveNode\");\n\n      return this.tree.activeNode;\n    },\n\n    /** Return the matching node or null.\n     * @param {string} key\n     * @returns {FancytreeNode}\n     * @deprecated Use methods of the Fancytree instance instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n     */\n    getNodeByKey: function (key) {\n      this._deprecationWarning(\"getNodeByKey\");\n\n      return this.tree.getNodeByKey(key);\n    },\n\n    /** Return the invisible system root node.\n     * @returns {FancytreeNode}\n     * @deprecated Use methods of the Fancytree instance instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n     */\n    getRootNode: function () {\n      this._deprecationWarning(\"getRootNode\");\n\n      return this.tree.rootNode;\n    },\n\n    /** Return the current tree instance.\n     * @returns {Fancytree}\n     * @deprecated Use `$.ui.fancytree.getTree()` instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n     */\n    getTree: function () {\n      this._deprecationWarning(\"getTree\");\n\n      return this.tree;\n    }\n  }); // $.ui.fancytree was created by the widget factory. Create a local shortcut:\n\n  FT = $.ui.fancytree;\n  /**\n   * Static members in the `$.ui.fancytree` namespace.\n   * This properties and methods can be accessed without instantiating a concrete\n   * Fancytree instance.\n   *\n   * @example\n   * // Access static members:\n   * var node = $.ui.fancytree.getNode(element);\n   * alert($.ui.fancytree.version);\n   *\n   * @mixin Fancytree_Static\n   */\n\n  $.extend($.ui.fancytree,\n  /** @lends Fancytree_Static# */\n  {\n    /** Version number `\"MAJOR.MINOR.PATCH\"`\n     * @type {string} */\n    version: \"2.37.0\",\n    // Set to semver by 'grunt release'\n\n    /** @type {string}\n     * @description `\"production\" for release builds` */\n    buildType: \"production\",\n    // Set to 'production' by 'grunt build'\n\n    /** @type {int}\n     * @description 0: silent .. 5: verbose (default: 3 for release builds). */\n    debugLevel: 3,\n    // Set to 3 by 'grunt build'\n    // Used by $.ui.fancytree.debug() and as default for tree.options.debugLevel\n    _nextId: 1,\n    _nextNodeKey: 1,\n    _extensions: {},\n    // focusTree: null,\n\n    /** Expose class object as `$.ui.fancytree._FancytreeClass`.\n     * Useful to extend `$.ui.fancytree._FancytreeClass.prototype`.\n     * @type {Fancytree}\n     */\n    _FancytreeClass: Fancytree,\n\n    /** Expose class object as $.ui.fancytree._FancytreeNodeClass\n     * Useful to extend `$.ui.fancytree._FancytreeNodeClass.prototype`.\n     * @type {FancytreeNode}\n     */\n    _FancytreeNodeClass: FancytreeNode,\n\n    /* Feature checks to provide backwards compatibility */\n    jquerySupports: {\n      // http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\n      positionMyOfs: isVersionAtLeast($.ui.version, 1, 9)\n    },\n\n    /** Throw an error if condition fails (debug method).\n     * @param {boolean} cond\n     * @param {string} msg\n     */\n    assert: function (cond, msg) {\n      return _assert(cond, msg);\n    },\n\n    /** Create a new Fancytree instance on a target element.\n     *\n     * @param {Element | jQueryObject | string} el Target DOM element or selector\n     * @param {FancytreeOptions} [opts] Fancytree options\n     * @returns {Fancytree} new tree instance\n     * @example\n     * var tree = $.ui.fancytree.createTree(\"#tree\", {\n     *     source: {url: \"my/webservice\"}\n     * }); // Create tree for this matching element\n     *\n     * @since 2.25\n     */\n    createTree: function (el, opts) {\n      var $tree = $(el).fancytree(opts);\n      return FT.getTree($tree);\n    },\n\n    /** Return a function that executes *fn* at most every *timeout* ms.\n     * @param {integer} timeout\n     * @param {function} fn\n     * @param {boolean} [invokeAsap=false]\n     * @param {any} [ctx]\n     */\n    debounce: function (timeout, fn, invokeAsap, ctx) {\n      var timer;\n\n      if (arguments.length === 3 && typeof invokeAsap !== \"boolean\") {\n        ctx = invokeAsap;\n        invokeAsap = false;\n      }\n\n      return function () {\n        var args = arguments;\n        ctx = ctx || this; // eslint-disable-next-line no-unused-expressions\n\n        invokeAsap && !timer && fn.apply(ctx, args);\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          // eslint-disable-next-line no-unused-expressions\n          invokeAsap || fn.apply(ctx, args);\n          timer = null;\n        }, timeout);\n      };\n    },\n\n    /** Write message to console if debugLevel >= 4\n     * @param {string} msg\n     */\n    debug: function (msg) {\n      if ($.ui.fancytree.debugLevel >= 4) {\n        consoleApply(\"log\", arguments);\n      }\n    },\n\n    /** Write error message to console if debugLevel >= 1.\n     * @param {string} msg\n     */\n    error: function (msg) {\n      if ($.ui.fancytree.debugLevel >= 1) {\n        consoleApply(\"error\", arguments);\n      }\n    },\n\n    /** Convert `<`, `>`, `&`, `\"`, `'`, and `/` to the equivalent entities.\n     *\n     * @param {string} s\n     * @returns {string}\n     */\n    escapeHtml: function (s) {\n      return (\"\" + s).replace(REX_HTML, function (s) {\n        return ENTITY_MAP[s];\n      });\n    },\n\n    /** Make jQuery.position() arguments backwards compatible, i.e. if\n     * jQuery UI version <= 1.8, convert\n     *   { my: \"left+3 center\", at: \"left bottom\", of: $target }\n     * to\n     *   { my: \"left center\", at: \"left bottom\", of: $target, offset: \"3  0\" }\n     *\n     * See http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\n     * and http://jsfiddle.net/mar10/6xtu9a4e/\n     *\n     * @param {object} opts\n     * @returns {object} the (potentially modified) original opts hash object\n     */\n    fixPositionOptions: function (opts) {\n      if (opts.offset || (\"\" + opts.my + opts.at).indexOf(\"%\") >= 0) {\n        $.error(\"expected new position syntax (but '%' is not supported)\");\n      }\n\n      if (!$.ui.fancytree.jquerySupports.positionMyOfs) {\n        var // parse 'left+3 center' into ['left+3 center', 'left', '+3', 'center', undefined]\n        myParts = /(\\w+)([+-]?\\d+)?\\s+(\\w+)([+-]?\\d+)?/.exec(opts.my),\n            atParts = /(\\w+)([+-]?\\d+)?\\s+(\\w+)([+-]?\\d+)?/.exec(opts.at),\n            // convert to numbers\n        dx = (myParts[2] ? +myParts[2] : 0) + (atParts[2] ? +atParts[2] : 0),\n            dy = (myParts[4] ? +myParts[4] : 0) + (atParts[4] ? +atParts[4] : 0);\n        opts = $.extend({}, opts, {\n          // make a copy and overwrite\n          my: myParts[1] + \" \" + myParts[3],\n          at: atParts[1] + \" \" + atParts[3]\n        });\n\n        if (dx || dy) {\n          opts.offset = \"\" + dx + \" \" + dy;\n        }\n      }\n\n      return opts;\n    },\n\n    /** Return a {node: FancytreeNode, type: TYPE} object for a mouse event.\n     *\n     * @param {Event} event Mouse event, e.g. click, ...\n     * @returns {object} Return a {node: FancytreeNode, type: TYPE} object\n     *     TYPE: 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon' | undefined\n     */\n    getEventTarget: function (event) {\n      var $target,\n          tree,\n          tcn = event && event.target ? event.target.className : \"\",\n          res = {\n        node: this.getNode(event.target),\n        type: undefined\n      }; // We use a fast version of $(res.node).hasClass()\n      // See http://jsperf.com/test-for-classname/2\n\n      if (/\\bfancytree-title\\b/.test(tcn)) {\n        res.type = \"title\";\n      } else if (/\\bfancytree-expander\\b/.test(tcn)) {\n        res.type = res.node.hasChildren() === false ? \"prefix\" : \"expander\"; // }else if( /\\bfancytree-checkbox\\b/.test(tcn) || /\\bfancytree-radio\\b/.test(tcn) ){\n      } else if (/\\bfancytree-checkbox\\b/.test(tcn)) {\n        res.type = \"checkbox\";\n      } else if (/\\bfancytree(-custom)?-icon\\b/.test(tcn)) {\n        res.type = \"icon\";\n      } else if (/\\bfancytree-node\\b/.test(tcn)) {\n        // Somewhere near the title\n        res.type = \"title\";\n      } else if (event && event.target) {\n        $target = $(event.target);\n\n        if ($target.is(\"ul[role=group]\")) {\n          // #nnn: Clicking right to a node may hit the surrounding UL\n          tree = res.node && res.node.tree;\n          (tree || FT).debug(\"Ignoring click on outer UL.\");\n          res.node = null;\n        } else if ($target.closest(\".fancytree-title\").length) {\n          // #228: clicking an embedded element inside a title\n          res.type = \"title\";\n        } else if ($target.closest(\".fancytree-checkbox\").length) {\n          // E.g. <svg> inside checkbox span\n          res.type = \"checkbox\";\n        } else if ($target.closest(\".fancytree-expander\").length) {\n          res.type = \"expander\";\n        }\n      }\n\n      return res;\n    },\n\n    /** Return a string describing the affected node region for a mouse event.\n     *\n     * @param {Event} event Mouse event, e.g. click, mousemove, ...\n     * @returns {string} 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon' | undefined\n     */\n    getEventTargetType: function (event) {\n      return this.getEventTarget(event).type;\n    },\n\n    /** Return a FancytreeNode instance from element, event, or jQuery object.\n     *\n     * @param {Element | jQueryObject | Event} el\n     * @returns {FancytreeNode} matching node or null\n     */\n    getNode: function (el) {\n      if (el instanceof FancytreeNode) {\n        return el; // el already was a FancytreeNode\n      } else if (el instanceof $) {\n        el = el[0]; // el was a jQuery object: use the DOM element\n      } else if (el.originalEvent !== undefined) {\n        el = el.target; // el was an Event\n      }\n\n      while (el) {\n        if (el.ftnode) {\n          return el.ftnode;\n        }\n\n        el = el.parentNode;\n      }\n\n      return null;\n    },\n\n    /** Return a Fancytree instance, from element, index, event, or jQueryObject.\n     *\n     * @param {Element | jQueryObject | Event | integer | string} [el]\n     * @returns {Fancytree} matching tree or null\n     * @example\n     * $.ui.fancytree.getTree();  // Get first Fancytree instance on page\n     * $.ui.fancytree.getTree(1);  // Get second Fancytree instance on page\n     * $.ui.fancytree.getTree(event);  // Get tree for this mouse- or keyboard event\n     * $.ui.fancytree.getTree(\"foo\");  // Get tree for this `opts.treeId`\n     * $.ui.fancytree.getTree(\"#tree\");  // Get tree for this matching element\n     *\n     * @since 2.13\n     */\n    getTree: function (el) {\n      var widget,\n          orgEl = el;\n\n      if (el instanceof Fancytree) {\n        return el; // el already was a Fancytree\n      }\n\n      if (el === undefined) {\n        el = 0; // get first tree\n      }\n\n      if (typeof el === \"number\") {\n        el = $(\".fancytree-container\").eq(el); // el was an integer: return nth instance\n      } else if (typeof el === \"string\") {\n        // `el` may be a treeId or a selector:\n        el = $(\"#ft-id-\" + orgEl).eq(0);\n\n        if (!el.length) {\n          el = $(orgEl).eq(0); // el was a selector: use first match\n        }\n      } else if (el instanceof Element || el instanceof HTMLDocument) {\n        el = $(el);\n      } else if (el instanceof $) {\n        el = el.eq(0); // el was a jQuery object: use the first\n      } else if (el.originalEvent !== undefined) {\n        el = $(el.target); // el was an Event\n      } // el is a jQuery object wit one element here\n\n\n      el = el.closest(\":ui-fancytree\");\n      widget = el.data(\"ui-fancytree\") || el.data(\"fancytree\"); // the latter is required by jQuery <= 1.8\n\n      return widget ? widget.tree : null;\n    },\n\n    /** Return an option value that has a default, but may be overridden by a\n     * callback or a node instance attribute.\n     *\n     * Evaluation sequence:\n     *\n     * If `tree.options.<optionName>` is a callback that returns something, use that.\n     * Else if `node.<optionName>` is defined, use that.\n     * Else if `tree.options.<optionName>` is a value, use that.\n     * Else use `defaultValue`.\n     *\n     * @param {string} optionName name of the option property (on node and tree)\n     * @param {FancytreeNode} node passed to the callback\n     * @param {object} nodeObject where to look for the local option property, e.g. `node` or `node.data`\n     * @param {object} treeOption where to look for the tree option, e.g. `tree.options` or `tree.options.dnd5`\n     * @param {any} [defaultValue]\n     * @returns {any}\n     *\n     * @example\n     * // Check for node.foo, tree,options.foo(), and tree.options.foo:\n     * $.ui.fancytree.evalOption(\"foo\", node, node, tree.options);\n     * // Check for node.data.bar, tree,options.qux.bar(), and tree.options.qux.bar:\n     * $.ui.fancytree.evalOption(\"bar\", node, node.data, tree.options.qux);\n     *\n     * @since 2.22\n     */\n    evalOption: function (optionName, node, nodeObject, treeOptions, defaultValue) {\n      var ctx,\n          res,\n          tree = node.tree,\n          treeOpt = treeOptions[optionName],\n          nodeOpt = nodeObject[optionName];\n\n      if ($.isFunction(treeOpt)) {\n        ctx = {\n          node: node,\n          tree: tree,\n          widget: tree.widget,\n          options: tree.widget.options,\n          typeInfo: tree.types[node.type] || {}\n        };\n        res = treeOpt.call(tree, {\n          type: optionName\n        }, ctx);\n\n        if (res == null) {\n          res = nodeOpt;\n        }\n      } else {\n        res = nodeOpt == null ? treeOpt : nodeOpt;\n      }\n\n      if (res == null) {\n        res = defaultValue; // no option set at all: return default\n      }\n\n      return res;\n    },\n\n    /** Set expander, checkbox, or node icon, supporting string and object format.\n     *\n     * @param {Element | jQueryObject} span\n     * @param {string} baseClass\n     * @param {string | object} icon\n     * @since 2.27\n     */\n    setSpanIcon: function (span, baseClass, icon) {\n      var $span = $(span);\n\n      if (typeof icon === \"string\") {\n        $span.attr(\"class\", baseClass + \" \" + icon);\n      } else {\n        // support object syntax: { text: ligature, addClasse: classname }\n        if (icon.text) {\n          $span.text(\"\" + icon.text);\n        } else if (icon.html) {\n          span.innerHTML = icon.html;\n        }\n\n        $span.attr(\"class\", baseClass + \" \" + (icon.addClass || \"\"));\n      }\n    },\n\n    /** Convert a keydown or mouse event to a canonical string like 'ctrl+a',\n     * 'ctrl+shift+f2', 'shift+leftdblclick'.\n     *\n     * This is especially handy for switch-statements in event handlers.\n     *\n     * @param {event}\n     * @returns {string}\n     *\n     * @example\n    \tswitch( $.ui.fancytree.eventToString(event) ) {\n    \tcase \"-\":\n    \t\ttree.nodeSetExpanded(ctx, false);\n    \t\tbreak;\n    \tcase \"shift+return\":\n    \t\ttree.nodeSetActive(ctx, true);\n    \t\tbreak;\n    \tcase \"down\":\n    \t\tres = node.navigate(event.which, activate);\n    \t\tbreak;\n    \tdefault:\n    \t\thandled = false;\n    }\n    if( handled ){\n    \tevent.preventDefault();\n    }\n    */\n    eventToString: function (event) {\n      // Poor-man's hotkeys. See here for a complete implementation:\n      //   https://github.com/jeresig/jquery.hotkeys\n      var which = event.which,\n          et = event.type,\n          s = [];\n\n      if (event.altKey) {\n        s.push(\"alt\");\n      }\n\n      if (event.ctrlKey) {\n        s.push(\"ctrl\");\n      }\n\n      if (event.metaKey) {\n        s.push(\"meta\");\n      }\n\n      if (event.shiftKey) {\n        s.push(\"shift\");\n      }\n\n      if (et === \"click\" || et === \"dblclick\") {\n        s.push(MOUSE_BUTTONS[event.button] + et);\n      } else if (et === \"wheel\") {\n        s.push(et);\n      } else if (!IGNORE_KEYCODES[which]) {\n        s.push(SPECIAL_KEYCODES[which] || String.fromCharCode(which).toLowerCase());\n      }\n\n      return s.join(\"+\");\n    },\n\n    /** Write message to console if debugLevel >= 3\n     * @param {string} msg\n     */\n    info: function (msg) {\n      if ($.ui.fancytree.debugLevel >= 3) {\n        consoleApply(\"info\", arguments);\n      }\n    },\n\n    /* @deprecated: use eventToString(event) instead.\n     */\n    keyEventToString: function (event) {\n      this.warn(\"keyEventToString() is deprecated: use eventToString()\");\n      return this.eventToString(event);\n    },\n\n    /** Return a wrapped handler method, that provides `this._super`.\n     *\n     * @example\n    \t// Implement `opts.createNode` event to add the 'draggable' attribute\n    \t$.ui.fancytree.overrideMethod(ctx.options, \"createNode\", function(event, data) {\n    \t\t// Default processing if any\n    \t\tthis._super.apply(this, arguments);\n    \t\t// Add 'draggable' attribute\n    \t\tdata.node.span.draggable = true;\n    \t});\n     *\n     * @param {object} instance\n     * @param {string} methodName\n     * @param {function} handler\n     * @param {object} [context] optional context\n     */\n    overrideMethod: function (instance, methodName, handler, context) {\n      var prevSuper,\n          _super = instance[methodName] || $.noop;\n\n      instance[methodName] = function () {\n        var self = context || this;\n\n        try {\n          prevSuper = self._super;\n          self._super = _super;\n          return handler.apply(self, arguments);\n        } finally {\n          self._super = prevSuper;\n        }\n      };\n    },\n\n    /**\n     * Parse tree data from HTML <ul> markup\n     *\n     * @param {jQueryObject} $ul\n     * @returns {NodeData[]}\n     */\n    parseHtml: function ($ul) {\n      var classes,\n          className,\n          extraClasses,\n          i,\n          iPos,\n          l,\n          tmp,\n          tmp2,\n          $children = $ul.find(\">li\"),\n          children = [];\n      $children.each(function () {\n        var allData,\n            lowerCaseAttr,\n            $li = $(this),\n            $liSpan = $li.find(\">span\", this).first(),\n            $liA = $liSpan.length ? null : $li.find(\">a\").first(),\n            d = {\n          tooltip: null,\n          data: {}\n        };\n\n        if ($liSpan.length) {\n          d.title = $liSpan.html();\n        } else if ($liA && $liA.length) {\n          // If a <li><a> tag is specified, use it literally and extract href/target.\n          d.title = $liA.html();\n          d.data.href = $liA.attr(\"href\");\n          d.data.target = $liA.attr(\"target\");\n          d.tooltip = $liA.attr(\"title\");\n        } else {\n          // If only a <li> tag is specified, use the trimmed string up to\n          // the next child <ul> tag.\n          d.title = $li.html();\n          iPos = d.title.search(/<ul/i);\n\n          if (iPos >= 0) {\n            d.title = d.title.substring(0, iPos);\n          }\n        }\n\n        d.title = $.trim(d.title); // Make sure all fields exist\n\n        for (i = 0, l = CLASS_ATTRS.length; i < l; i++) {\n          d[CLASS_ATTRS[i]] = undefined;\n        } // Initialize to `true`, if class is set and collect extraClasses\n\n\n        classes = this.className.split(\" \");\n        extraClasses = [];\n\n        for (i = 0, l = classes.length; i < l; i++) {\n          className = classes[i];\n\n          if (CLASS_ATTR_MAP[className]) {\n            d[className] = true;\n          } else {\n            extraClasses.push(className);\n          }\n        }\n\n        d.extraClasses = extraClasses.join(\" \"); // Parse node options from ID, title and class attributes\n\n        tmp = $li.attr(\"title\");\n\n        if (tmp) {\n          d.tooltip = tmp; // overrides <a title='...'>\n        }\n\n        tmp = $li.attr(\"id\");\n\n        if (tmp) {\n          d.key = tmp;\n        } // Translate hideCheckbox -> checkbox:false\n\n\n        if ($li.attr(\"hideCheckbox\")) {\n          d.checkbox = false;\n        } // Add <li data-NAME='...'> as node.data.NAME\n\n\n        allData = _getElementDataAsDict($li);\n\n        if (allData && !$.isEmptyObject(allData)) {\n          // #507: convert data-hidecheckbox (lower case) to hideCheckbox\n          for (lowerCaseAttr in NODE_ATTR_LOWERCASE_MAP) {\n            if (allData.hasOwnProperty(lowerCaseAttr)) {\n              allData[NODE_ATTR_LOWERCASE_MAP[lowerCaseAttr]] = allData[lowerCaseAttr];\n              delete allData[lowerCaseAttr];\n            }\n          } // #56: Allow to set special node.attributes from data-...\n\n\n          for (i = 0, l = NODE_ATTRS.length; i < l; i++) {\n            tmp = NODE_ATTRS[i];\n            tmp2 = allData[tmp];\n\n            if (tmp2 != null) {\n              delete allData[tmp];\n              d[tmp] = tmp2;\n            }\n          } // All other data-... goes to node.data...\n\n\n          $.extend(d.data, allData);\n        } // Recursive reading of child nodes, if LI tag contains an UL tag\n\n\n        $ul = $li.find(\">ul\").first();\n\n        if ($ul.length) {\n          d.children = $.ui.fancytree.parseHtml($ul);\n        } else {\n          d.children = d.lazy ? undefined : null;\n        }\n\n        children.push(d); // FT.debug(\"parse \", d, children);\n      });\n      return children;\n    },\n\n    /** Add Fancytree extension definition to the list of globally available extensions.\n     *\n     * @param {object} definition\n     */\n    registerExtension: function (definition) {\n      _assert(definition.name != null, \"extensions must have a `name` property.\");\n\n      _assert(definition.version != null, \"extensions must have a `version` property.\");\n\n      $.ui.fancytree._extensions[definition.name] = definition;\n    },\n\n    /** Inverse of escapeHtml().\n     *\n     * @param {string} s\n     * @returns {string}\n     */\n    unescapeHtml: function (s) {\n      var e = document.createElement(\"div\");\n      e.innerHTML = s;\n      return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    },\n\n    /** Write warning message to console if debugLevel >= 2.\n     * @param {string} msg\n     */\n    warn: function (msg) {\n      if ($.ui.fancytree.debugLevel >= 2) {\n        consoleApply(\"warn\", arguments);\n      }\n    }\n  }); // Value returned by `require('jquery.fancytree')`\n\n  return $.ui.fancytree;\n}); // End of closure","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/node_modules/jquery.fancytree/dist/modules/jquery.fancytree.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","ui","fancytree","warn","i","attr","FT","TEST_IMG","RegExp","REX_HTML","REX_TOOLTIP","RECURSIVE_REQUEST_ERROR","INVALID_REQUEST_TARGET_ERROR","ENTITY_MAP","IGNORE_KEYCODES","SPECIAL_KEYCODES","MODIFIERS","MOUSE_BUTTONS","CLASS_ATTRS","split","CLASS_ATTR_MAP","TREE_ATTRS","NODE_ATTRS","NODE_ATTR_MAP","NODE_ATTR_LOWERCASE_MAP","NONE_NODE_DATA_MAP","active","children","data","focus","length","toLowerCase","_assert","cond","msg","error","consoleApply","method","args","s","fn","window","console","apply","e","Date","now","getTime","_isNode","x","tree","statusNodeType","undefined","isVersionAtLeast","dottedVersion","major","minor","patch","v","t","verParts","map","trim","parseInt","testParts","Array","prototype","slice","call","arguments","_simpleDeepMerge","options","name","src","copy","clone","target","isFunction","Error","hasOwnProperty","isPlainObject","_makeVirtualFunction","methodName","base","extension","extName","proxy","prevFunc","baseFunc","_local","ext","_super","_superApply","prevLocal","prevSuper","prevSuperApply","_subclassObject","attrName","charAt","_getResolvedPromise","context","argArray","Deferred","resolve","promise","resolveWith","_getRejectedPromise","reject","rejectWith","_makeResolveFunc","deferred","_getElementDataAsDict","$el","d","extend","json","uiFancytree","_escapeTooltip","replace","_makeNodeTitleMatcher","node","title","indexOf","_makeNodeTitleStartMatcher","reMatch","test","FancytreeNode","parent","obj","l","cl","ul","li","_isLoading","_error","unselectableIgnore","unselectableStatus","unselectable","hideCheckbox","copyFunctionsToData","key","defaultKey","_nextNodeKey","activeNode","selected","lastSelectedNode","_setChildren","lazy","_callHook","_findDirectChild","ptr","push","addChildren","insertBefore","pos","origFirstChild","getFirstChild","origLastChild","getLastChild","firstNode","nodeList","concat","inArray","splice","render","renderStatus","tr","selectMode","fixSelection3FromEndNodes","triggerModifyChild","addClass","className","toggleClass","addNode","mode","getParent","getNextSibling","addPagingNode","n","removeChild","partload","strings","moreData","icon","appendSibling","applyCommand","cmd","opts","applyPatch","remove","IGNORE_MAP","expanded","removeChildren","isVisible","renderTitle","setExpanded","collapseSiblings","copyTo","toDict","countChildren","deep","debug","debugLevel","unshift","toString","discard","resetLazy","discardMarkup","includeSelf","findAll","match","res","visit","findFirst","findRelatedNode","where","includeHidden","_changeSelectStatusAttrs","state","changed","evalOption","partsel","fixSelection3AfterClick","callOpts","flag","isSelected","radiogroup","_walk","child","allSelected","someSelected","unselIgnore","unselState","visitParents","fromDict","dict","getChildren","hasChildren","getIndex","getIndexHier","separator","digits","each","getParentList","o","substr","join","getKeyPath","excludeSelf","sep","keyPathSeparator","getPath","getLevel","level","dtn","ac","includeRoot","part","val","path","isFunc","getPrevSibling","getSelectedNodes","stopOnParents","isStatusNode","hasClass","extraClasses","hasFocus","focusNode","info","isActive","isBelowOf","otherNode","isChildOf","isDescendantOf","p","isExpanded","isFirstSibling","isFolder","folder","isLastSibling","isLazy","isLoaded","isLoading","isRoot","isRootNode","isPartsel","isPartload","rootNode","isPagingNode","isTopLevel","isUndefined","hasFilter","enableFilter","parents","subMatchCount","lazyLoad","load","forceReload","source","self","wasExpanded","_triggerNodeEvent","always","makeVisible","deferreds","dfd","len","effects","noAnimation","scroll","scrollIntoView","when","done","moveTo","targetNode","prevParent","targetParent","navigate","activate","KC","keyCode","LEFT","RIGHT","setFocus","setActive","childNode","removeClass","force","replaceWith","fail","scheduleAction","ms","timer","clearTimeout","setTimeout","duration","queue","scrollOfs","scrollParent","topNode","$scrollParent","$container","overflowY","css","tbody","jquery","document","body","topNodeY","nodeY","horzScrollbarHeight","containerOffsetTop","nodeHeight","span","height","topOfs","top","bottomOfs","bottom","containerHeight","scrollTop","$animateTarget","isParentWindow","newScrollTop","offset","Math","max","innerHeight","clientHeight","complete","stop","animate","setSelected","setStatus","status","message","details","setTitle","triggerModify","sortChildren","cmp","a","b","y","sort","recursive","callback","isEmptyObject","isArray","value","rnotwhite","classNames","wasAdded","statusElem","statusClassPropName","curClasses","toggleExpanded","toggleSelected","operation","extra","modifyChild","type","visitAndLoad","_recursion","loaders","then","visitSiblings","Fancytree","widget","$div","element","lazyload","loaderror","fx","removeNode","types","columns","_id","treeId","_nextId","_ns","_hasFocus","_tempCache","_lastMousedownNode","_enableUpdate","systemFocusElement","lastQuicksearchTerm","lastQuicksearchTime","viewport","ariaPropName","nodeContainerAttrName","find","fakeParent","$ul","id","class","appendTo","_makeHookContext","originalEvent","ctx","typeInfo","funcName","contextObject","_extraArgs","_setExpiringValue","expire","_getExpiringValue","entry","_usesExtension","extensions","_requireExtension","required","before","thisName","extList","isBefore","isMissing","badOrder","activateKey","getNodeByKey","opts_","refNode","getActiveNode","editCreateNode","editStart","patchList","p2","patchCount","deferredList","clear","count","destroy","enable","disable","enableUpdate","expandAll","prev","findNextNode","startNode","_checkNode","visitRows","start","BACKSPACE","HOME","END","UP","reverse","DOWN","generateFormElements","selectedName","activeName","$result","empty","hide","insertAfter","append","checked","_appender","filter","idx","getFocusNode","getOption","optionName","option","searchRoot","el","getElementById","idPrefix","ftnode","getRootNode","_requestId","loadKeyPath","keyPathList","optsOrCallback","pathSegList","notifyWith","matchKey","_loadKeyPathImpl","nodeKey","remain","remainMap","tmpParent","segList","subDfd","__findChild","shift","__lazyload","errMsg","reactivate","noFocus","reload","selectAll","setOption","debugTime","label","time","debugTimeEnd","timeEnd","_trigger","result","_triggerTreeEvent","_visitRowsUp","nextIdx","siblings","siblingOfs","skipFirstNode","checkFilter","nodeClick","expand","targetType","focusOnSelect","clickFolderMode","nodeSetFocus","nodeCollapseSiblings","nodeDblclick","preventDefault","nodeKeydown","matchNode","stamp","_res","event","which","String","fromCharCode","specialModifiers","altKey","ctrlKey","metaKey","isAlnum","$target","handled","autoActivate","quicksearch","is","eventToString","nodeSetExpanded","nodeToggleSelected","nodeSetActive","nodeLoadChildren","ajax","delay","ajaxDfd","resultDfd","isAsync","nodePrevParent","tag","requestId","url","debugDelay","random","round","nodeSetStatus","textStatus","jqXHR","errorObj","dataType","postProcess","response","enableAspx","parseJSON","errorThrown","metaData","noDataRes","nodata","noData","ctxErr","nodeLoadKeyPath","nodeRemoveChild","subCtx","nodeRemoveChildren","nodeRemoveMarkup","nodeRemoveChildMarkup","nodeRenderStatus","nodeRender","collapsed","_recursive","childLI","childNode1","childNode2","next","aria","firstTime","successorLi","parentNode","nextSibling","createElement","generateIds","appendChild","nodeRenderTitle","createNode","renderNode","style","display","firstChild","checkbox","nodeTitle","role","tabindex","tooltip","iconTooltip","ares","minExpandLevel","iconClass","imagePath","text","escapeHtml","html","titlesTabbable","escapeTitles","innerHTML","enhanceTitle","$title","$ariaElem","isLastSib","cn","_classNames","cnList","focused","removeAttr","Boolean","lastsib","loading","statusNodePrefix","combinedExpanderPrefix","combinedIconPrefix","noEvents","activeVisible","_afterLoad","prevAC","animating","autoCollapse","lastChild","autoScroll","effect","toggleEffect","toggle","ctx2","isInput","calledByNode","uniqueId","hasFancytreeFocus","activeElement","get","nodeSetSelected","_lastSelectIntent","_clearStatusNode","_setStatusNode","loadError","nodeToggleExpanded","treeClear","treeCreate","treeDestroy","$source","treeInit","checkboxAutoHide","rtl","treeLoad","rootCtx","not","first","parseHtml","contents","nodeType","treeRegisterNode","add","treeSetFocus","treeSetOption","callDefault","callCreate","callRender","Widget","_setOption","treeStructureChanged","cache","disabled","keyboard","radio","_deprecationWarning","_create","_extensions","icons","tabbable","_init","_bind","_destroy","_unbind","ns","off","on","getNode","prevPhase","phase","et","getEventTarget","getTree","version","buildType","_FancytreeClass","_FancytreeNodeClass","jquerySupports","positionMyOfs","assert","createTree","$tree","debounce","timeout","invokeAsap","fixPositionOptions","my","at","myParts","exec","atParts","dx","dy","tcn","closest","getEventTargetType","orgEl","eq","Element","HTMLDocument","nodeObject","treeOptions","defaultValue","treeOpt","nodeOpt","setSpanIcon","baseClass","$span","shiftKey","button","keyEventToString","overrideMethod","instance","handler","noop","classes","iPos","tmp","tmp2","$children","allData","lowerCaseAttr","$li","$liSpan","$liA","href","search","substring","registerExtension","definition","unescapeHtml","childNodes","nodeValue"],"mappings":"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","sourcesContent":["/*!\n * jquery.fancytree.js\n * Tree view control with support for lazy loading and much more.\n * https://github.com/mar10/fancytree/\n *\n * Copyright (c) 2008-2020, Martin Wendt (https://wwWendt.de)\n * Released under the MIT license\n * https://github.com/mar10/fancytree/wiki/LicenseInfo\n *\n * @version 2.37.0\n * @date 2020-09-11T18:58:08Z\n */\n\n/** Core Fancytree module.\n */\n\n// UMD wrapper for the Fancytree core module\n(function(factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([\"jquery\", \"./jquery.fancytree.ui-deps\"], factory);\n\t} else if (typeof module === \"object\" && module.exports) {\n\t\t// Node/CommonJS\n\t\trequire(\"./jquery.fancytree.ui-deps\");\n\t\tmodule.exports = factory(require(\"jquery\"));\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n})(function($) {\n\t\"use strict\";\n\n\t// prevent duplicate loading\n\tif ($.ui && $.ui.fancytree) {\n\t\t$.ui.fancytree.warn(\"Fancytree: ignored duplicate include\");\n\t\treturn;\n\t}\n\n\t/******************************************************************************\n\t * Private functions and variables\n\t */\n\n\tvar i,\n\t\tattr,\n\t\tFT = null, // initialized below\n\t\tTEST_IMG = new RegExp(/\\.|\\//), // strings are considered image urls if they contain '.' or '/'\n\t\tREX_HTML = /[&<>\"'/]/g, // Escape those characters\n\t\tREX_TOOLTIP = /[<>\"'/]/g, // Don't escape `&` in tooltips\n\t\tRECURSIVE_REQUEST_ERROR = \"$recursive_request\",\n\t\tINVALID_REQUEST_TARGET_ERROR = \"$request_target_invalid\",\n\t\tENTITY_MAP = {\n\t\t\t\"&\": \"&amp;\",\n\t\t\t\"<\": \"&lt;\",\n\t\t\t\">\": \"&gt;\",\n\t\t\t'\"': \"&quot;\",\n\t\t\t\"'\": \"&#39;\",\n\t\t\t\"/\": \"&#x2F;\",\n\t\t},\n\t\tIGNORE_KEYCODES = { 16: true, 17: true, 18: true },\n\t\tSPECIAL_KEYCODES = {\n\t\t\t8: \"backspace\",\n\t\t\t9: \"tab\",\n\t\t\t10: \"return\",\n\t\t\t13: \"return\",\n\t\t\t// 16: null, 17: null, 18: null,  // ignore shift, ctrl, alt\n\t\t\t19: \"pause\",\n\t\t\t20: \"capslock\",\n\t\t\t27: \"esc\",\n\t\t\t32: \"space\",\n\t\t\t33: \"pageup\",\n\t\t\t34: \"pagedown\",\n\t\t\t35: \"end\",\n\t\t\t36: \"home\",\n\t\t\t37: \"left\",\n\t\t\t38: \"up\",\n\t\t\t39: \"right\",\n\t\t\t40: \"down\",\n\t\t\t45: \"insert\",\n\t\t\t46: \"del\",\n\t\t\t59: \";\",\n\t\t\t61: \"=\",\n\t\t\t// 91: null, 93: null,  // ignore left and right meta\n\t\t\t96: \"0\",\n\t\t\t97: \"1\",\n\t\t\t98: \"2\",\n\t\t\t99: \"3\",\n\t\t\t100: \"4\",\n\t\t\t101: \"5\",\n\t\t\t102: \"6\",\n\t\t\t103: \"7\",\n\t\t\t104: \"8\",\n\t\t\t105: \"9\",\n\t\t\t106: \"*\",\n\t\t\t107: \"+\",\n\t\t\t109: \"-\",\n\t\t\t110: \".\",\n\t\t\t111: \"/\",\n\t\t\t112: \"f1\",\n\t\t\t113: \"f2\",\n\t\t\t114: \"f3\",\n\t\t\t115: \"f4\",\n\t\t\t116: \"f5\",\n\t\t\t117: \"f6\",\n\t\t\t118: \"f7\",\n\t\t\t119: \"f8\",\n\t\t\t120: \"f9\",\n\t\t\t121: \"f10\",\n\t\t\t122: \"f11\",\n\t\t\t123: \"f12\",\n\t\t\t144: \"numlock\",\n\t\t\t145: \"scroll\",\n\t\t\t173: \"-\",\n\t\t\t186: \";\",\n\t\t\t187: \"=\",\n\t\t\t188: \",\",\n\t\t\t189: \"-\",\n\t\t\t190: \".\",\n\t\t\t191: \"/\",\n\t\t\t192: \"`\",\n\t\t\t219: \"[\",\n\t\t\t220: \"\\\\\",\n\t\t\t221: \"]\",\n\t\t\t222: \"'\",\n\t\t},\n\t\tMODIFIERS = {\n\t\t\t16: \"shift\",\n\t\t\t17: \"ctrl\",\n\t\t\t18: \"alt\",\n\t\t\t91: \"meta\",\n\t\t\t93: \"meta\",\n\t\t},\n\t\tMOUSE_BUTTONS = { 0: \"\", 1: \"left\", 2: \"middle\", 3: \"right\" },\n\t\t// Boolean attributes that can be set with equivalent class names in the LI tags\n\t\t// Note: v2.23: checkbox and hideCheckbox are *not* in this list\n\t\tCLASS_ATTRS = \"active expanded focus folder lazy radiogroup selected unselectable unselectableIgnore\".split(\n\t\t\t\" \"\n\t\t),\n\t\tCLASS_ATTR_MAP = {},\n\t\t// Top-level Fancytree attributes, that can be set by dict\n\t\tTREE_ATTRS = \"columns types\".split(\" \"),\n\t\t// TREE_ATTR_MAP = {},\n\t\t// Top-level FancytreeNode attributes, that can be set by dict\n\t\tNODE_ATTRS = \"checkbox expanded extraClasses folder icon iconTooltip key lazy partsel radiogroup refKey selected statusNodeType title tooltip type unselectable unselectableIgnore unselectableStatus\".split(\n\t\t\t\" \"\n\t\t),\n\t\tNODE_ATTR_MAP = {},\n\t\t// Mapping of lowercase -> real name (because HTML5 data-... attribute only supports lowercase)\n\t\tNODE_ATTR_LOWERCASE_MAP = {},\n\t\t// Attribute names that should NOT be added to node.data\n\t\tNONE_NODE_DATA_MAP = {\n\t\t\tactive: true,\n\t\t\tchildren: true,\n\t\t\tdata: true,\n\t\t\tfocus: true,\n\t\t};\n\n\tfor (i = 0; i < CLASS_ATTRS.length; i++) {\n\t\tCLASS_ATTR_MAP[CLASS_ATTRS[i]] = true;\n\t}\n\tfor (i = 0; i < NODE_ATTRS.length; i++) {\n\t\tattr = NODE_ATTRS[i];\n\t\tNODE_ATTR_MAP[attr] = true;\n\t\tif (attr !== attr.toLowerCase()) {\n\t\t\tNODE_ATTR_LOWERCASE_MAP[attr.toLowerCase()] = attr;\n\t\t}\n\t}\n\t// for(i=0; i<TREE_ATTRS.length; i++) {\n\t// \tTREE_ATTR_MAP[TREE_ATTRS[i]] = true;\n\t// }\n\n\tfunction _assert(cond, msg) {\n\t\t// TODO: see qunit.js extractStacktrace()\n\t\tif (!cond) {\n\t\t\tmsg = msg ? \": \" + msg : \"\";\n\t\t\t// consoleApply(\"assert\", [!!cond, msg]);\n\t\t\t$.error(\"Fancytree assertion failed\" + msg);\n\t\t}\n\t}\n\n\t_assert($.ui, \"Fancytree requires jQuery UI (http://jqueryui.com)\");\n\n\tfunction consoleApply(method, args) {\n\t\tvar i,\n\t\t\ts,\n\t\t\tfn = window.console ? window.console[method] : null;\n\n\t\tif (fn) {\n\t\t\ttry {\n\t\t\t\tfn.apply(window.console, args);\n\t\t\t} catch (e) {\n\t\t\t\t// IE 8?\n\t\t\t\ts = \"\";\n\t\t\t\tfor (i = 0; i < args.length; i++) {\n\t\t\t\t\ts += args[i];\n\t\t\t\t}\n\t\t\t\tfn(s);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* support: IE8 Polyfil for Date.now() */\n\tif (!Date.now) {\n\t\tDate.now = function now() {\n\t\t\treturn new Date().getTime();\n\t\t};\n\t}\n\n\t/*Return true if x is a FancytreeNode.*/\n\tfunction _isNode(x) {\n\t\treturn !!(x.tree && x.statusNodeType !== undefined);\n\t}\n\n\t/** Return true if dotted version string is equal or higher than requested version.\n\t *\n\t * See http://jsfiddle.net/mar10/FjSAN/\n\t */\n\tfunction isVersionAtLeast(dottedVersion, major, minor, patch) {\n\t\tvar i,\n\t\t\tv,\n\t\t\tt,\n\t\t\tverParts = $.map($.trim(dottedVersion).split(\".\"), function(e) {\n\t\t\t\treturn parseInt(e, 10);\n\t\t\t}),\n\t\t\ttestParts = $.map(\n\t\t\t\tArray.prototype.slice.call(arguments, 1),\n\t\t\t\tfunction(e) {\n\t\t\t\t\treturn parseInt(e, 10);\n\t\t\t\t}\n\t\t\t);\n\n\t\tfor (i = 0; i < testParts.length; i++) {\n\t\t\tv = verParts[i] || 0;\n\t\t\tt = testParts[i] || 0;\n\t\t\tif (v !== t) {\n\t\t\t\treturn v > t;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Deep-merge a list of objects (but replace array-type options).\n\t *\n\t * jQuery's $.extend(true, ...) method does a deep merge, that also merges Arrays.\n\t * This variant is used to merge extension defaults with user options, and should\n\t * merge objects, but override arrays (for example the `triggerStart: [...]` option\n\t * of ext-edit). Also `null` values are copied over and not skipped.\n\t *\n\t * See issue #876\n\t *\n\t * Example:\n\t * _simpleDeepMerge({}, o1, o2);\n\t */\n\tfunction _simpleDeepMerge() {\n\t\tvar options,\n\t\t\tname,\n\t\t\tsrc,\n\t\t\tcopy,\n\t\t\tclone,\n\t\t\ttarget = arguments[0] || {},\n\t\t\ti = 1,\n\t\t\tlength = arguments.length;\n\n\t\t// Handle case when target is a string or something (possible in deep copy)\n\t\tif (typeof target !== \"object\" && !$.isFunction(target)) {\n\t\t\ttarget = {};\n\t\t}\n\t\tif (i === length) {\n\t\t\tthrow Error(\"need at least two args\");\n\t\t}\n\t\tfor (; i < length; i++) {\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif ((options = arguments[i]) != null) {\n\t\t\t\t// Extend the base object\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tif (options.hasOwnProperty(name)) {\n\t\t\t\t\t\tsrc = target[name];\n\t\t\t\t\t\tcopy = options[name];\n\t\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\t\tif (target === copy) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Recurse if we're merging plain objects\n\t\t\t\t\t\t// (NOTE: unlike $.extend, we don't merge arrays, but replace them)\n\t\t\t\t\t\tif (copy && $.isPlainObject(copy)) {\n\t\t\t\t\t\t\tclone = src && $.isPlainObject(src) ? src : {};\n\t\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\t\ttarget[name] = _simpleDeepMerge(clone, copy);\n\t\t\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Return the modified object\n\t\treturn target;\n\t}\n\n\t/** Return a wrapper that calls sub.methodName() and exposes\n\t *  this             : tree\n\t *  this._local      : tree.ext.EXTNAME\n\t *  this._super      : base.methodName.call()\n\t *  this._superApply : base.methodName.apply()\n\t */\n\tfunction _makeVirtualFunction(methodName, tree, base, extension, extName) {\n\t\t// $.ui.fancytree.debug(\"_makeVirtualFunction\", methodName, tree, base, extension, extName);\n\t\t// if(rexTestSuper && !rexTestSuper.test(func)){\n\t\t//     // extension.methodName() doesn't call _super(), so no wrapper required\n\t\t//     return func;\n\t\t// }\n\t\t// Use an immediate function as closure\n\t\tvar proxy = (function() {\n\t\t\tvar prevFunc = tree[methodName], // org. tree method or prev. proxy\n\t\t\t\tbaseFunc = extension[methodName], //\n\t\t\t\t_local = tree.ext[extName],\n\t\t\t\t_super = function() {\n\t\t\t\t\treturn prevFunc.apply(tree, arguments);\n\t\t\t\t},\n\t\t\t\t_superApply = function(args) {\n\t\t\t\t\treturn prevFunc.apply(tree, args);\n\t\t\t\t};\n\n\t\t\t// Return the wrapper function\n\t\t\treturn function() {\n\t\t\t\tvar prevLocal = tree._local,\n\t\t\t\t\tprevSuper = tree._super,\n\t\t\t\t\tprevSuperApply = tree._superApply;\n\n\t\t\t\ttry {\n\t\t\t\t\ttree._local = _local;\n\t\t\t\t\ttree._super = _super;\n\t\t\t\t\ttree._superApply = _superApply;\n\t\t\t\t\treturn baseFunc.apply(tree, arguments);\n\t\t\t\t} finally {\n\t\t\t\t\ttree._local = prevLocal;\n\t\t\t\t\ttree._super = prevSuper;\n\t\t\t\t\ttree._superApply = prevSuperApply;\n\t\t\t\t}\n\t\t\t};\n\t\t})(); // end of Immediate Function\n\t\treturn proxy;\n\t}\n\n\t/**\n\t * Subclass `base` by creating proxy functions\n\t */\n\tfunction _subclassObject(tree, base, extension, extName) {\n\t\t// $.ui.fancytree.debug(\"_subclassObject\", tree, base, extension, extName);\n\t\tfor (var attrName in extension) {\n\t\t\tif (typeof extension[attrName] === \"function\") {\n\t\t\t\tif (typeof tree[attrName] === \"function\") {\n\t\t\t\t\t// override existing method\n\t\t\t\t\ttree[attrName] = _makeVirtualFunction(\n\t\t\t\t\t\tattrName,\n\t\t\t\t\t\ttree,\n\t\t\t\t\t\tbase,\n\t\t\t\t\t\textension,\n\t\t\t\t\t\textName\n\t\t\t\t\t);\n\t\t\t\t} else if (attrName.charAt(0) === \"_\") {\n\t\t\t\t\t// Create private methods in tree.ext.EXTENSION namespace\n\t\t\t\t\ttree.ext[extName][attrName] = _makeVirtualFunction(\n\t\t\t\t\t\tattrName,\n\t\t\t\t\t\ttree,\n\t\t\t\t\t\tbase,\n\t\t\t\t\t\textension,\n\t\t\t\t\t\textName\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$.error(\n\t\t\t\t\t\t\"Could not override tree.\" +\n\t\t\t\t\t\t\tattrName +\n\t\t\t\t\t\t\t\". Use prefix '_' to create tree.\" +\n\t\t\t\t\t\t\textName +\n\t\t\t\t\t\t\t\"._\" +\n\t\t\t\t\t\t\tattrName\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create member variables in tree.ext.EXTENSION namespace\n\t\t\t\tif (attrName !== \"options\") {\n\t\t\t\t\ttree.ext[extName][attrName] = extension[attrName];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _getResolvedPromise(context, argArray) {\n\t\tif (context === undefined) {\n\t\t\treturn $.Deferred(function() {\n\t\t\t\tthis.resolve();\n\t\t\t}).promise();\n\t\t}\n\t\treturn $.Deferred(function() {\n\t\t\tthis.resolveWith(context, argArray);\n\t\t}).promise();\n\t}\n\n\tfunction _getRejectedPromise(context, argArray) {\n\t\tif (context === undefined) {\n\t\t\treturn $.Deferred(function() {\n\t\t\t\tthis.reject();\n\t\t\t}).promise();\n\t\t}\n\t\treturn $.Deferred(function() {\n\t\t\tthis.rejectWith(context, argArray);\n\t\t}).promise();\n\t}\n\n\tfunction _makeResolveFunc(deferred, context) {\n\t\treturn function() {\n\t\t\tdeferred.resolveWith(context);\n\t\t};\n\t}\n\n\tfunction _getElementDataAsDict($el) {\n\t\t// Evaluate 'data-NAME' attributes with special treatment for 'data-json'.\n\t\tvar d = $.extend({}, $el.data()),\n\t\t\tjson = d.json;\n\n\t\tdelete d.fancytree; // added to container by widget factory (old jQuery UI)\n\t\tdelete d.uiFancytree; // added to container by widget factory\n\n\t\tif (json) {\n\t\t\tdelete d.json;\n\t\t\t// <li data-json='...'> is already returned as object (http://api.jquery.com/data/#data-html5)\n\t\t\td = $.extend(d, json);\n\t\t}\n\t\treturn d;\n\t}\n\n\tfunction _escapeTooltip(s) {\n\t\treturn (\"\" + s).replace(REX_TOOLTIP, function(s) {\n\t\t\treturn ENTITY_MAP[s];\n\t\t});\n\t}\n\n\t// TODO: use currying\n\tfunction _makeNodeTitleMatcher(s) {\n\t\ts = s.toLowerCase();\n\t\treturn function(node) {\n\t\t\treturn node.title.toLowerCase().indexOf(s) >= 0;\n\t\t};\n\t}\n\n\tfunction _makeNodeTitleStartMatcher(s) {\n\t\tvar reMatch = new RegExp(\"^\" + s, \"i\");\n\t\treturn function(node) {\n\t\t\treturn reMatch.test(node.title);\n\t\t};\n\t}\n\n\t/******************************************************************************\n\t * FancytreeNode\n\t */\n\n\t/**\n\t * Creates a new FancytreeNode\n\t *\n\t * @class FancytreeNode\n\t * @classdesc A FancytreeNode represents the hierarchical data model and operations.\n\t *\n\t * @param {FancytreeNode} parent\n\t * @param {NodeData} obj\n\t *\n\t * @property {Fancytree} tree The tree instance\n\t * @property {FancytreeNode} parent The parent node\n\t * @property {string} key Node id (must be unique inside the tree)\n\t * @property {string} title Display name (may contain HTML)\n\t * @property {object} data Contains all extra data that was passed on node creation\n\t * @property {FancytreeNode[] | null | undefined} children Array of child nodes.<br>\n\t *     For lazy nodes, null or undefined means 'not yet loaded'. Use an empty array\n\t *     to define a node that has no children.\n\t * @property {boolean} expanded Use isExpanded(), setExpanded() to access this property.\n\t * @property {string} extraClasses Additional CSS classes, added to the node's `<span>`.<br>\n\t *     Note: use `node.add/remove/toggleClass()` to modify.\n\t * @property {boolean} folder Folder nodes have different default icons and click behavior.<br>\n\t *     Note: Also non-folders may have children.\n\t * @property {string} statusNodeType null for standard nodes. Otherwise type of special system node: 'error', 'loading', 'nodata', or 'paging'.\n\t * @property {boolean} lazy True if this node is loaded on demand, i.e. on first expansion.\n\t * @property {boolean} selected Use isSelected(), setSelected() to access this property.\n\t * @property {string} tooltip Alternative description used as hover popup\n\t * @property {string} iconTooltip Description used as hover popup for icon. @since 2.27\n\t * @property {string} type Node type, used with tree.types map. @since 2.27\n\t */\n\tfunction FancytreeNode(parent, obj) {\n\t\tvar i, l, name, cl;\n\n\t\tthis.parent = parent;\n\t\tthis.tree = parent.tree;\n\t\tthis.ul = null;\n\t\tthis.li = null; // <li id='key' ftnode=this> tag\n\t\tthis.statusNodeType = null; // if this is a temp. node to display the status of its parent\n\t\tthis._isLoading = false; // if this node itself is loading\n\t\tthis._error = null; // {message: '...'} if a load error occurred\n\t\tthis.data = {};\n\n\t\t// TODO: merge this code with node.toDict()\n\t\t// copy attributes from obj object\n\t\tfor (i = 0, l = NODE_ATTRS.length; i < l; i++) {\n\t\t\tname = NODE_ATTRS[i];\n\t\t\tthis[name] = obj[name];\n\t\t}\n\t\t// unselectableIgnore and unselectableStatus imply unselectable\n\t\tif (\n\t\t\tthis.unselectableIgnore != null ||\n\t\t\tthis.unselectableStatus != null\n\t\t) {\n\t\t\tthis.unselectable = true;\n\t\t}\n\t\tif (obj.hideCheckbox) {\n\t\t\t$.error(\n\t\t\t\t\"'hideCheckbox' node option was removed in v2.23.0: use 'checkbox: false'\"\n\t\t\t);\n\t\t}\n\t\t// node.data += obj.data\n\t\tif (obj.data) {\n\t\t\t$.extend(this.data, obj.data);\n\t\t}\n\t\t// Copy all other attributes to this.data.NAME\n\t\tfor (name in obj) {\n\t\t\tif (\n\t\t\t\t!NODE_ATTR_MAP[name] &&\n\t\t\t\t(this.tree.options.copyFunctionsToData ||\n\t\t\t\t\t!$.isFunction(obj[name])) &&\n\t\t\t\t!NONE_NODE_DATA_MAP[name]\n\t\t\t) {\n\t\t\t\t// node.data.NAME = obj.NAME\n\t\t\t\tthis.data[name] = obj[name];\n\t\t\t}\n\t\t}\n\n\t\t// Fix missing key\n\t\tif (this.key == null) {\n\t\t\t// test for null OR undefined\n\t\t\tif (this.tree.options.defaultKey) {\n\t\t\t\tthis.key = \"\" + this.tree.options.defaultKey(this);\n\t\t\t\t_assert(this.key, \"defaultKey() must return a unique key\");\n\t\t\t} else {\n\t\t\t\tthis.key = \"_\" + FT._nextNodeKey++;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.key = \"\" + this.key; // Convert to string (#217)\n\t\t}\n\n\t\t// Fix tree.activeNode\n\t\t// TODO: not elegant: we use obj.active as marker to set tree.activeNode\n\t\t// when loading from a dictionary.\n\t\tif (obj.active) {\n\t\t\t_assert(\n\t\t\t\tthis.tree.activeNode === null,\n\t\t\t\t\"only one active node allowed\"\n\t\t\t);\n\t\t\tthis.tree.activeNode = this;\n\t\t}\n\t\tif (obj.selected) {\n\t\t\t// #186\n\t\t\tthis.tree.lastSelectedNode = this;\n\t\t}\n\t\t// TODO: handle obj.focus = true\n\n\t\t// Create child nodes\n\t\tcl = obj.children;\n\t\tif (cl) {\n\t\t\tif (cl.length) {\n\t\t\t\tthis._setChildren(cl);\n\t\t\t} else {\n\t\t\t\t// if an empty array was passed for a lazy node, keep it, in order to mark it 'loaded'\n\t\t\t\tthis.children = this.lazy ? [] : null;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.children = null;\n\t\t}\n\t\t// Add to key/ref map (except for root node)\n\t\t//\tif( parent ) {\n\t\tthis.tree._callHook(\"treeRegisterNode\", this.tree, true, this);\n\t\t//\t}\n\t}\n\n\tFancytreeNode.prototype = /** @lends FancytreeNode# */ {\n\t\t/* Return the direct child FancytreeNode with a given key, index. */\n\t\t_findDirectChild: function(ptr) {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tcl = this.children;\n\n\t\t\tif (cl) {\n\t\t\t\tif (typeof ptr === \"string\") {\n\t\t\t\t\tfor (i = 0, l = cl.length; i < l; i++) {\n\t\t\t\t\t\tif (cl[i].key === ptr) {\n\t\t\t\t\t\t\treturn cl[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof ptr === \"number\") {\n\t\t\t\t\treturn this.children[ptr];\n\t\t\t\t} else if (ptr.parent === this) {\n\t\t\t\t\treturn ptr;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t// TODO: activate()\n\t\t// TODO: activateSilently()\n\t\t/* Internal helper called in recursive addChildren sequence.*/\n\t\t_setChildren: function(children) {\n\t\t\t_assert(\n\t\t\t\tchildren && (!this.children || this.children.length === 0),\n\t\t\t\t\"only init supported\"\n\t\t\t);\n\t\t\tthis.children = [];\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.children.push(new FancytreeNode(this, children[i]));\n\t\t\t}\n\t\t\tthis.tree._callHook(\n\t\t\t\t\"treeStructureChanged\",\n\t\t\t\tthis.tree,\n\t\t\t\t\"setChildren\"\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * Append (or insert) a list of child nodes.\n\t\t *\n\t\t * @param {NodeData[]} children array of child node definitions (also single child accepted)\n\t\t * @param {FancytreeNode | string | Integer} [insertBefore] child node (or key or index of such).\n\t\t *     If omitted, the new children are appended.\n\t\t * @returns {FancytreeNode} first child added\n\t\t *\n\t\t * @see FancytreeNode#applyPatch\n\t\t */\n\t\taddChildren: function(children, insertBefore) {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tpos,\n\t\t\t\torigFirstChild = this.getFirstChild(),\n\t\t\t\torigLastChild = this.getLastChild(),\n\t\t\t\tfirstNode = null,\n\t\t\t\tnodeList = [];\n\n\t\t\tif ($.isPlainObject(children)) {\n\t\t\t\tchildren = [children];\n\t\t\t}\n\t\t\tif (!this.children) {\n\t\t\t\tthis.children = [];\n\t\t\t}\n\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\tnodeList.push(new FancytreeNode(this, children[i]));\n\t\t\t}\n\t\t\tfirstNode = nodeList[0];\n\t\t\tif (insertBefore == null) {\n\t\t\t\tthis.children = this.children.concat(nodeList);\n\t\t\t} else {\n\t\t\t\t// Returns null if insertBefore is not a direct child:\n\t\t\t\tinsertBefore = this._findDirectChild(insertBefore);\n\t\t\t\tpos = $.inArray(insertBefore, this.children);\n\t\t\t\t_assert(pos >= 0, \"insertBefore must be an existing child\");\n\t\t\t\t// insert nodeList after children[pos]\n\t\t\t\tthis.children.splice.apply(\n\t\t\t\t\tthis.children,\n\t\t\t\t\t[pos, 0].concat(nodeList)\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (origFirstChild && !insertBefore) {\n\t\t\t\t// #708: Fast path -- don't render every child of root, just the new ones!\n\t\t\t\t// #723, #729: but only if it's appended to an existing child list\n\t\t\t\tfor (i = 0, l = nodeList.length; i < l; i++) {\n\t\t\t\t\tnodeList[i].render(); // New nodes were never rendered before\n\t\t\t\t}\n\t\t\t\t// Adjust classes where status may have changed\n\t\t\t\t// Has a first child\n\t\t\t\tif (origFirstChild !== this.getFirstChild()) {\n\t\t\t\t\t// Different first child -- recompute classes\n\t\t\t\t\torigFirstChild.renderStatus();\n\t\t\t\t}\n\t\t\t\tif (origLastChild !== this.getLastChild()) {\n\t\t\t\t\t// Different last child -- recompute classes\n\t\t\t\t\torigLastChild.renderStatus();\n\t\t\t\t}\n\t\t\t} else if (!this.parent || this.parent.ul || this.tr) {\n\t\t\t\t// render if the parent was rendered (or this is a root node)\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tif (this.tree.options.selectMode === 3) {\n\t\t\t\tthis.fixSelection3FromEndNodes();\n\t\t\t}\n\t\t\tthis.triggerModifyChild(\n\t\t\t\t\"add\",\n\t\t\t\tnodeList.length === 1 ? nodeList[0] : null\n\t\t\t);\n\t\t\treturn firstNode;\n\t\t},\n\t\t/**\n\t\t * Add class to node's span tag and to .extraClasses.\n\t\t *\n\t\t * @param {string} className class name\n\t\t *\n\t\t * @since 2.17\n\t\t */\n\t\taddClass: function(className) {\n\t\t\treturn this.toggleClass(className, true);\n\t\t},\n\t\t/**\n\t\t * Append or prepend a node, or append a child node.\n\t\t *\n\t\t * This a convenience function that calls addChildren()\n\t\t *\n\t\t * @param {NodeData} node node definition\n\t\t * @param {string} [mode=child] 'before', 'after', 'firstChild', or 'child' ('over' is a synonym for 'child')\n\t\t * @returns {FancytreeNode} new node\n\t\t */\n\t\taddNode: function(node, mode) {\n\t\t\tif (mode === undefined || mode === \"over\") {\n\t\t\t\tmode = \"child\";\n\t\t\t}\n\t\t\tswitch (mode) {\n\t\t\t\tcase \"after\":\n\t\t\t\t\treturn this.getParent().addChildren(\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tthis.getNextSibling()\n\t\t\t\t\t);\n\t\t\t\tcase \"before\":\n\t\t\t\t\treturn this.getParent().addChildren(node, this);\n\t\t\t\tcase \"firstChild\":\n\t\t\t\t\t// Insert before the first child if any\n\t\t\t\t\tvar insertBefore = this.children ? this.children[0] : null;\n\t\t\t\t\treturn this.addChildren(node, insertBefore);\n\t\t\t\tcase \"child\":\n\t\t\t\tcase \"over\":\n\t\t\t\t\treturn this.addChildren(node);\n\t\t\t}\n\t\t\t_assert(false, \"Invalid mode: \" + mode);\n\t\t},\n\t\t/**Add child status nodes that indicate 'More...', etc.\n\t\t *\n\t\t * This also maintains the node's `partload` property.\n\t\t * @param {boolean|object} node optional node definition. Pass `false` to remove all paging nodes.\n\t\t * @param {string} [mode='child'] 'child'|firstChild'\n\t\t * @since 2.15\n\t\t */\n\t\taddPagingNode: function(node, mode) {\n\t\t\tvar i, n;\n\n\t\t\tmode = mode || \"child\";\n\t\t\tif (node === false) {\n\t\t\t\tfor (i = this.children.length - 1; i >= 0; i--) {\n\t\t\t\t\tn = this.children[i];\n\t\t\t\t\tif (n.statusNodeType === \"paging\") {\n\t\t\t\t\t\tthis.removeChild(n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.partload = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode = $.extend(\n\t\t\t\t{\n\t\t\t\t\ttitle: this.tree.options.strings.moreData,\n\t\t\t\t\tstatusNodeType: \"paging\",\n\t\t\t\t\ticon: false,\n\t\t\t\t},\n\t\t\t\tnode\n\t\t\t);\n\t\t\tthis.partload = true;\n\t\t\treturn this.addNode(node, mode);\n\t\t},\n\t\t/**\n\t\t * Append new node after this.\n\t\t *\n\t\t * This a convenience function that calls addNode(node, 'after')\n\t\t *\n\t\t * @param {NodeData} node node definition\n\t\t * @returns {FancytreeNode} new node\n\t\t */\n\t\tappendSibling: function(node) {\n\t\t\treturn this.addNode(node, \"after\");\n\t\t},\n\t\t/**\n\t\t * (experimental) Apply a modification (or navigation) operation.\n\t\t *\n\t\t * @param {string} cmd\n\t\t * @param {object} [opts]\n\t\t * @see Fancytree#applyCommand\n\t\t * @since 2.32\n\t\t */\n\t\tapplyCommand: function(cmd, opts) {\n\t\t\treturn this.tree.applyCommand(cmd, this, opts);\n\t\t},\n\t\t/**\n\t\t * Modify existing child nodes.\n\t\t *\n\t\t * @param {NodePatch} patch\n\t\t * @returns {$.Promise}\n\t\t * @see FancytreeNode#addChildren\n\t\t */\n\t\tapplyPatch: function(patch) {\n\t\t\t// patch [key, null] means 'remove'\n\t\t\tif (patch === null) {\n\t\t\t\tthis.remove();\n\t\t\t\treturn _getResolvedPromise(this);\n\t\t\t}\n\t\t\t// TODO: make sure that root node is not collapsed or modified\n\t\t\t// copy (most) attributes to node.ATTR or node.data.ATTR\n\t\t\tvar name,\n\t\t\t\tpromise,\n\t\t\t\tv,\n\t\t\t\tIGNORE_MAP = { children: true, expanded: true, parent: true }; // TODO: should be global\n\n\t\t\tfor (name in patch) {\n\t\t\t\tif (patch.hasOwnProperty(name)) {\n\t\t\t\t\tv = patch[name];\n\t\t\t\t\tif (!IGNORE_MAP[name] && !$.isFunction(v)) {\n\t\t\t\t\t\tif (NODE_ATTR_MAP[name]) {\n\t\t\t\t\t\t\tthis[name] = v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.data[name] = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove and/or create children\n\t\t\tif (patch.hasOwnProperty(\"children\")) {\n\t\t\t\tthis.removeChildren();\n\t\t\t\tif (patch.children) {\n\t\t\t\t\t// only if not null and not empty list\n\t\t\t\t\t// TODO: addChildren instead?\n\t\t\t\t\tthis._setChildren(patch.children);\n\t\t\t\t}\n\t\t\t\t// TODO: how can we APPEND or INSERT child nodes?\n\t\t\t}\n\t\t\tif (this.isVisible()) {\n\t\t\t\tthis.renderTitle();\n\t\t\t\tthis.renderStatus();\n\t\t\t}\n\t\t\t// Expand collapse (final step, since this may be async)\n\t\t\tif (patch.hasOwnProperty(\"expanded\")) {\n\t\t\t\tpromise = this.setExpanded(patch.expanded);\n\t\t\t} else {\n\t\t\t\tpromise = _getResolvedPromise(this);\n\t\t\t}\n\t\t\treturn promise;\n\t\t},\n\t\t/** Collapse all sibling nodes.\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tcollapseSiblings: function() {\n\t\t\treturn this.tree._callHook(\"nodeCollapseSiblings\", this);\n\t\t},\n\t\t/** Copy this node as sibling or child of `node`.\n\t\t *\n\t\t * @param {FancytreeNode} node source node\n\t\t * @param {string} [mode=child] 'before' | 'after' | 'child'\n\t\t * @param {Function} [map] callback function(NodeData, FancytreeNode) that could modify the new node\n\t\t * @returns {FancytreeNode} new\n\t\t */\n\t\tcopyTo: function(node, mode, map) {\n\t\t\treturn node.addNode(this.toDict(true, map), mode);\n\t\t},\n\t\t/** Count direct and indirect children.\n\t\t *\n\t\t * @param {boolean} [deep=true] pass 'false' to only count direct children\n\t\t * @returns {int} number of child nodes\n\t\t */\n\t\tcountChildren: function(deep) {\n\t\t\tvar cl = this.children,\n\t\t\t\ti,\n\t\t\t\tl,\n\t\t\t\tn;\n\t\t\tif (!cl) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tn = cl.length;\n\t\t\tif (deep !== false) {\n\t\t\t\tfor (i = 0, l = n; i < l; i++) {\n\t\t\t\t\tn += cl[i].countChildren();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n;\n\t\t},\n\t\t// TODO: deactivate()\n\t\t/** Write to browser console if debugLevel >= 4 (prepending node info)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\tdebug: function(msg) {\n\t\t\tif (this.tree.options.debugLevel >= 4) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"log\", arguments);\n\t\t\t}\n\t\t},\n\t\t/** Deprecated.\n\t\t * @deprecated since 2014-02-16. Use resetLazy() instead.\n\t\t */\n\t\tdiscard: function() {\n\t\t\tthis.warn(\n\t\t\t\t\"FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead.\"\n\t\t\t);\n\t\t\treturn this.resetLazy();\n\t\t},\n\t\t/** Remove DOM elements for all descendents. May be called on .collapse event\n\t\t * to keep the DOM small.\n\t\t * @param {boolean} [includeSelf=false]\n\t\t */\n\t\tdiscardMarkup: function(includeSelf) {\n\t\t\tvar fn = includeSelf ? \"nodeRemoveMarkup\" : \"nodeRemoveChildMarkup\";\n\t\t\tthis.tree._callHook(fn, this);\n\t\t},\n\t\t/** Write error to browser console if debugLevel >= 1 (prepending tree info)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\terror: function(msg) {\n\t\t\tif (this.tree.options.debugLevel >= 1) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"error\", arguments);\n\t\t\t}\n\t\t},\n\t\t/**Find all nodes that match condition (excluding self).\n\t\t *\n\t\t * @param {string | function(node)} match title string to search for, or a\n\t\t *     callback function that returns `true` if a node is matched.\n\t\t * @returns {FancytreeNode[]} array of nodes (may be empty)\n\t\t */\n\t\tfindAll: function(match) {\n\t\t\tmatch = $.isFunction(match) ? match : _makeNodeTitleMatcher(match);\n\t\t\tvar res = [];\n\t\t\tthis.visit(function(n) {\n\t\t\t\tif (match(n)) {\n\t\t\t\t\tres.push(n);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t},\n\t\t/**Find first node that matches condition (excluding self).\n\t\t *\n\t\t * @param {string | function(node)} match title string to search for, or a\n\t\t *     callback function that returns `true` if a node is matched.\n\t\t * @returns {FancytreeNode} matching node or null\n\t\t * @see FancytreeNode#findAll\n\t\t */\n\t\tfindFirst: function(match) {\n\t\t\tmatch = $.isFunction(match) ? match : _makeNodeTitleMatcher(match);\n\t\t\tvar res = null;\n\t\t\tthis.visit(function(n) {\n\t\t\t\tif (match(n)) {\n\t\t\t\t\tres = n;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t},\n\t\t/** Find a node relative to self.\n\t\t *\n\t\t * @param {number|string} where The keyCode that would normally trigger this move,\n\t\t *\t\tor a keyword ('down', 'first', 'last', 'left', 'parent', 'right', 'up').\n\t\t * @returns {FancytreeNode}\n\t\t * @since v2.31\n\t\t */\n\t\tfindRelatedNode: function(where, includeHidden) {\n\t\t\treturn this.tree.findRelatedNode(this, where, includeHidden);\n\t\t},\n\t\t/* Apply selection state (internal use only) */\n\t\t_changeSelectStatusAttrs: function(state) {\n\t\t\tvar changed = false,\n\t\t\t\topts = this.tree.options,\n\t\t\t\tunselectable = FT.evalOption(\n\t\t\t\t\t\"unselectable\",\n\t\t\t\t\tthis,\n\t\t\t\t\tthis,\n\t\t\t\t\topts,\n\t\t\t\t\tfalse\n\t\t\t\t),\n\t\t\t\tunselectableStatus = FT.evalOption(\n\t\t\t\t\t\"unselectableStatus\",\n\t\t\t\t\tthis,\n\t\t\t\t\tthis,\n\t\t\t\t\topts,\n\t\t\t\t\tundefined\n\t\t\t\t);\n\n\t\t\tif (unselectable && unselectableStatus != null) {\n\t\t\t\tstate = unselectableStatus;\n\t\t\t}\n\t\t\tswitch (state) {\n\t\t\t\tcase false:\n\t\t\t\t\tchanged = this.selected || this.partsel;\n\t\t\t\t\tthis.selected = false;\n\t\t\t\t\tthis.partsel = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase true:\n\t\t\t\t\tchanged = !this.selected || !this.partsel;\n\t\t\t\t\tthis.selected = true;\n\t\t\t\t\tthis.partsel = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase undefined:\n\t\t\t\t\tchanged = this.selected || !this.partsel;\n\t\t\t\t\tthis.selected = false;\n\t\t\t\t\tthis.partsel = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t_assert(false, \"invalid state: \" + state);\n\t\t\t}\n\t\t\t// this.debug(\"fixSelection3AfterLoad() _changeSelectStatusAttrs()\", state, changed);\n\t\t\tif (changed) {\n\t\t\t\tthis.renderStatus();\n\t\t\t}\n\t\t\treturn changed;\n\t\t},\n\t\t/**\n\t\t * Fix selection status, after this node was (de)selected in multi-hier mode.\n\t\t * This includes (de)selecting all children.\n\t\t */\n\t\tfixSelection3AfterClick: function(callOpts) {\n\t\t\tvar flag = this.isSelected();\n\n\t\t\t// this.debug(\"fixSelection3AfterClick()\");\n\n\t\t\tthis.visit(function(node) {\n\t\t\t\tnode._changeSelectStatusAttrs(flag);\n\t\t\t\tif (node.radiogroup) {\n\t\t\t\t\t// #931: don't (de)select this branch\n\t\t\t\t\treturn \"skip\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.fixSelection3FromEndNodes(callOpts);\n\t\t},\n\t\t/**\n\t\t * Fix selection status for multi-hier mode.\n\t\t * Only end-nodes are considered to update the descendants branch and parents.\n\t\t * Should be called after this node has loaded new children or after\n\t\t * children have been modified using the API.\n\t\t */\n\t\tfixSelection3FromEndNodes: function(callOpts) {\n\t\t\tvar opts = this.tree.options;\n\n\t\t\t// this.debug(\"fixSelection3FromEndNodes()\");\n\t\t\t_assert(opts.selectMode === 3, \"expected selectMode 3\");\n\n\t\t\t// Visit all end nodes and adjust their parent's `selected` and `partsel`\n\t\t\t// attributes. Return selection state true, false, or undefined.\n\t\t\tfunction _walk(node) {\n\t\t\t\tvar i,\n\t\t\t\t\tl,\n\t\t\t\t\tchild,\n\t\t\t\t\ts,\n\t\t\t\t\tstate,\n\t\t\t\t\tallSelected,\n\t\t\t\t\tsomeSelected,\n\t\t\t\t\tunselIgnore,\n\t\t\t\t\tunselState,\n\t\t\t\t\tchildren = node.children;\n\n\t\t\t\tif (children && children.length) {\n\t\t\t\t\t// check all children recursively\n\t\t\t\t\tallSelected = true;\n\t\t\t\t\tsomeSelected = false;\n\n\t\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\t\tchild = children[i];\n\t\t\t\t\t\t// the selection state of a node is not relevant; we need the end-nodes\n\t\t\t\t\t\ts = _walk(child);\n\t\t\t\t\t\t// if( !child.unselectableIgnore ) {\n\t\t\t\t\t\tunselIgnore = FT.evalOption(\n\t\t\t\t\t\t\t\"unselectableIgnore\",\n\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\topts,\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!unselIgnore) {\n\t\t\t\t\t\t\tif (s !== false) {\n\t\t\t\t\t\t\t\tsomeSelected = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (s !== true) {\n\t\t\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\t\tstate = allSelected\n\t\t\t\t\t\t? true\n\t\t\t\t\t\t: someSelected\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: false;\n\t\t\t\t} else {\n\t\t\t\t\t// This is an end-node: simply report the status\n\t\t\t\t\tunselState = FT.evalOption(\n\t\t\t\t\t\t\"unselectableStatus\",\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\tundefined\n\t\t\t\t\t);\n\t\t\t\t\tstate = unselState == null ? !!node.selected : !!unselState;\n\t\t\t\t}\n\t\t\t\t// #939: Keep a `partsel` flag that was explicitly set on a lazy node\n\t\t\t\tif (\n\t\t\t\t\tnode.partsel &&\n\t\t\t\t\t!node.selected &&\n\t\t\t\t\tnode.lazy &&\n\t\t\t\t\tnode.children == null\n\t\t\t\t) {\n\t\t\t\t\tstate = undefined;\n\t\t\t\t}\n\t\t\t\tnode._changeSelectStatusAttrs(state);\n\t\t\t\treturn state;\n\t\t\t}\n\t\t\t_walk(this);\n\n\t\t\t// Update parent's state\n\t\t\tthis.visitParents(function(node) {\n\t\t\t\tvar i,\n\t\t\t\t\tl,\n\t\t\t\t\tchild,\n\t\t\t\t\tstate,\n\t\t\t\t\tunselIgnore,\n\t\t\t\t\tunselState,\n\t\t\t\t\tchildren = node.children,\n\t\t\t\t\tallSelected = true,\n\t\t\t\t\tsomeSelected = false;\n\n\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchild = children[i];\n\t\t\t\t\tunselIgnore = FT.evalOption(\n\t\t\t\t\t\t\"unselectableIgnore\",\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tif (!unselIgnore) {\n\t\t\t\t\t\tunselState = FT.evalOption(\n\t\t\t\t\t\t\t\"unselectableStatus\",\n\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\tchild,\n\t\t\t\t\t\t\topts,\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstate =\n\t\t\t\t\t\t\tunselState == null\n\t\t\t\t\t\t\t\t? !!child.selected\n\t\t\t\t\t\t\t\t: !!unselState;\n\t\t\t\t\t\t// When fixing the parents, we trust the sibling status (i.e.\n\t\t\t\t\t\t// we don't recurse)\n\t\t\t\t\t\tif (state || child.partsel) {\n\t\t\t\t\t\t\tsomeSelected = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!state) {\n\t\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\tstate = allSelected ? true : someSelected ? undefined : false;\n\t\t\t\tnode._changeSelectStatusAttrs(state);\n\t\t\t});\n\t\t},\n\t\t// TODO: focus()\n\t\t/**\n\t\t * Update node data. If dict contains 'children', then also replace\n\t\t * the hole sub tree.\n\t\t * @param {NodeData} dict\n\t\t *\n\t\t * @see FancytreeNode#addChildren\n\t\t * @see FancytreeNode#applyPatch\n\t\t */\n\t\tfromDict: function(dict) {\n\t\t\t// copy all other attributes to this.data.xxx\n\t\t\tfor (var name in dict) {\n\t\t\t\tif (NODE_ATTR_MAP[name]) {\n\t\t\t\t\t// node.NAME = dict.NAME\n\t\t\t\t\tthis[name] = dict[name];\n\t\t\t\t} else if (name === \"data\") {\n\t\t\t\t\t// node.data += dict.data\n\t\t\t\t\t$.extend(this.data, dict.data);\n\t\t\t\t} else if (\n\t\t\t\t\t!$.isFunction(dict[name]) &&\n\t\t\t\t\t!NONE_NODE_DATA_MAP[name]\n\t\t\t\t) {\n\t\t\t\t\t// node.data.NAME = dict.NAME\n\t\t\t\t\tthis.data[name] = dict[name];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dict.children) {\n\t\t\t\t// recursively set children and render\n\t\t\t\tthis.removeChildren();\n\t\t\t\tthis.addChildren(dict.children);\n\t\t\t}\n\t\t\tthis.renderTitle();\n\t\t\t/*\n\t\t\tvar children = dict.children;\n\t\t\tif(children === undefined){\n\t\t\t\tthis.data = $.extend(this.data, dict);\n\t\t\t\tthis.render();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdict = $.extend({}, dict);\n\t\t\tdict.children = undefined;\n\t\t\tthis.data = $.extend(this.data, dict);\n\t\t\tthis.removeChildren();\n\t\t\tthis.addChild(children);\n\t\t\t*/\n\t\t},\n\t\t/** Return the list of child nodes (undefined for unexpanded lazy nodes).\n\t\t * @returns {FancytreeNode[] | undefined}\n\t\t */\n\t\tgetChildren: function() {\n\t\t\tif (this.hasChildren() === undefined) {\n\t\t\t\t// TODO: only required for lazy nodes?\n\t\t\t\treturn undefined; // Lazy node: unloaded, currently loading, or load error\n\t\t\t}\n\t\t\treturn this.children;\n\t\t},\n\t\t/** Return the first child node or null.\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetFirstChild: function() {\n\t\t\treturn this.children ? this.children[0] : null;\n\t\t},\n\t\t/** Return the 0-based child index.\n\t\t * @returns {int}\n\t\t */\n\t\tgetIndex: function() {\n\t\t\t// return this.parent.children.indexOf(this);\n\t\t\treturn $.inArray(this, this.parent.children); // indexOf doesn't work in IE7\n\t\t},\n\t\t/** Return the hierarchical child index (1-based, e.g. '3.2.4').\n\t\t * @param {string} [separator=\".\"]\n\t\t * @param {int} [digits=1]\n\t\t * @returns {string}\n\t\t */\n\t\tgetIndexHier: function(separator, digits) {\n\t\t\tseparator = separator || \".\";\n\t\t\tvar s,\n\t\t\t\tres = [];\n\t\t\t$.each(this.getParentList(false, true), function(i, o) {\n\t\t\t\ts = \"\" + (o.getIndex() + 1);\n\t\t\t\tif (digits) {\n\t\t\t\t\t// prepend leading zeroes\n\t\t\t\t\ts = (\"0000000\" + s).substr(-digits);\n\t\t\t\t}\n\t\t\t\tres.push(s);\n\t\t\t});\n\t\t\treturn res.join(separator);\n\t\t},\n\t\t/** Return the parent keys separated by options.keyPathSeparator, e.g. \"/id_1/id_17/id_32\".\n\t\t *\n\t\t * (Unlike `node.getPath()`, this method prepends a \"/\" and inverts the first argument.)\n\t\t *\n\t\t * @see FancytreeNode#getPath\n\t\t * @param {boolean} [excludeSelf=false]\n\t\t * @returns {string}\n\t\t */\n\t\tgetKeyPath: function(excludeSelf) {\n\t\t\tvar sep = this.tree.options.keyPathSeparator;\n\n\t\t\treturn sep + this.getPath(!excludeSelf, \"key\", sep);\n\t\t},\n\t\t/** Return the last child of this node or null.\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetLastChild: function() {\n\t\t\treturn this.children\n\t\t\t\t? this.children[this.children.length - 1]\n\t\t\t\t: null;\n\t\t},\n\t\t/** Return node depth. 0: System root node, 1: visible top-level node, 2: first sub-level, ... .\n\t\t * @returns {int}\n\t\t */\n\t\tgetLevel: function() {\n\t\t\tvar level = 0,\n\t\t\t\tdtn = this.parent;\n\t\t\twhile (dtn) {\n\t\t\t\tlevel++;\n\t\t\t\tdtn = dtn.parent;\n\t\t\t}\n\t\t\treturn level;\n\t\t},\n\t\t/** Return the successor node (under the same parent) or null.\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetNextSibling: function() {\n\t\t\t// TODO: use indexOf, if available: (not in IE6)\n\t\t\tif (this.parent) {\n\t\t\t\tvar i,\n\t\t\t\t\tl,\n\t\t\t\t\tac = this.parent.children;\n\n\t\t\t\tfor (i = 0, l = ac.length - 1; i < l; i++) {\n\t\t\t\t\t// up to length-2, so next(last) = null\n\t\t\t\t\tif (ac[i] === this) {\n\t\t\t\t\t\treturn ac[i + 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/** Return the parent node (null for the system root node).\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetParent: function() {\n\t\t\t// TODO: return null for top-level nodes?\n\t\t\treturn this.parent;\n\t\t},\n\t\t/** Return an array of all parent nodes (top-down).\n\t\t * @param {boolean} [includeRoot=false] Include the invisible system root node.\n\t\t * @param {boolean} [includeSelf=false] Include the node itself.\n\t\t * @returns {FancytreeNode[]}\n\t\t */\n\t\tgetParentList: function(includeRoot, includeSelf) {\n\t\t\tvar l = [],\n\t\t\t\tdtn = includeSelf ? this : this.parent;\n\t\t\twhile (dtn) {\n\t\t\t\tif (includeRoot || dtn.parent) {\n\t\t\t\t\tl.unshift(dtn);\n\t\t\t\t}\n\t\t\t\tdtn = dtn.parent;\n\t\t\t}\n\t\t\treturn l;\n\t\t},\n\t\t/** Return a string representing the hierachical node path, e.g. \"a/b/c\".\n\t\t * @param {boolean} [includeSelf=true]\n\t\t * @param {string | function} [part=\"title\"] node property name or callback\n\t\t * @param {string} [separator=\"/\"]\n\t\t * @returns {string}\n\t\t * @since v2.31\n\t\t */\n\t\tgetPath: function(includeSelf, part, separator) {\n\t\t\tincludeSelf = includeSelf !== false;\n\t\t\tpart = part || \"title\";\n\t\t\tseparator = separator || \"/\";\n\n\t\t\tvar val,\n\t\t\t\tpath = [],\n\t\t\t\tisFunc = $.isFunction(part);\n\n\t\t\tthis.visitParents(function(n) {\n\t\t\t\tif (n.parent) {\n\t\t\t\t\tval = isFunc ? part(n) : n[part];\n\t\t\t\t\tpath.unshift(val);\n\t\t\t\t}\n\t\t\t}, includeSelf);\n\t\t\treturn path.join(separator);\n\t\t},\n\t\t/** Return the predecessor node (under the same parent) or null.\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetPrevSibling: function() {\n\t\t\tif (this.parent) {\n\t\t\t\tvar i,\n\t\t\t\t\tl,\n\t\t\t\t\tac = this.parent.children;\n\n\t\t\t\tfor (i = 1, l = ac.length; i < l; i++) {\n\t\t\t\t\t// start with 1, so prev(first) = null\n\t\t\t\t\tif (ac[i] === this) {\n\t\t\t\t\t\treturn ac[i - 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t/**\n\t\t * Return an array of selected descendant nodes.\n\t\t * @param {boolean} [stopOnParents=false] only return the topmost selected\n\t\t *     node (useful with selectMode 3)\n\t\t * @returns {FancytreeNode[]}\n\t\t */\n\t\tgetSelectedNodes: function(stopOnParents) {\n\t\t\tvar nodeList = [];\n\t\t\tthis.visit(function(node) {\n\t\t\t\tif (node.selected) {\n\t\t\t\t\tnodeList.push(node);\n\t\t\t\t\tif (stopOnParents === true) {\n\t\t\t\t\t\treturn \"skip\"; // stop processing this branch\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn nodeList;\n\t\t},\n\t\t/** Return true if node has children. Return undefined if not sure, i.e. the node is lazy and not yet loaded).\n\t\t * @returns {boolean | undefined}\n\t\t */\n\t\thasChildren: function() {\n\t\t\tif (this.lazy) {\n\t\t\t\tif (this.children == null) {\n\t\t\t\t\t// null or undefined: Not yet loaded\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else if (this.children.length === 0) {\n\t\t\t\t\t// Loaded, but response was empty\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (\n\t\t\t\t\tthis.children.length === 1 &&\n\t\t\t\t\tthis.children[0].isStatusNode()\n\t\t\t\t) {\n\t\t\t\t\t// Currently loading or load error\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !!(this.children && this.children.length);\n\t\t},\n\t\t/**\n\t\t * Return true if node has `className` defined in .extraClasses.\n\t\t *\n\t\t * @param {string} className class name (separate multiple classes by space)\n\t\t * @returns {boolean}\n\t\t *\n\t\t * @since 2.32\n\t\t */\n\t\thasClass: function(className) {\n\t\t\treturn (\n\t\t\t\t(\" \" + (this.extraClasses || \"\") + \" \").indexOf(\n\t\t\t\t\t\" \" + className + \" \"\n\t\t\t\t) >= 0\n\t\t\t);\n\t\t},\n\t\t/** Return true if node has keyboard focus.\n\t\t * @returns {boolean}\n\t\t */\n\t\thasFocus: function() {\n\t\t\treturn this.tree.hasFocus() && this.tree.focusNode === this;\n\t\t},\n\t\t/** Write to browser console if debugLevel >= 3 (prepending node info)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\tinfo: function(msg) {\n\t\t\tif (this.tree.options.debugLevel >= 3) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"info\", arguments);\n\t\t\t}\n\t\t},\n\t\t/** Return true if node is active (see also FancytreeNode#isSelected).\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function() {\n\t\t\treturn this.tree.activeNode === this;\n\t\t},\n\t\t/** Return true if node is vertically below `otherNode`, i.e. rendered in a subsequent row.\n\t\t * @param {FancytreeNode} otherNode\n\t\t * @returns {boolean}\n\t\t * @since 2.28\n\t\t */\n\t\tisBelowOf: function(otherNode) {\n\t\t\treturn this.getIndexHier(\".\", 5) > otherNode.getIndexHier(\".\", 5);\n\t\t},\n\t\t/** Return true if node is a direct child of otherNode.\n\t\t * @param {FancytreeNode} otherNode\n\t\t * @returns {boolean}\n\t\t */\n\t\tisChildOf: function(otherNode) {\n\t\t\treturn this.parent && this.parent === otherNode;\n\t\t},\n\t\t/** Return true, if node is a direct or indirect sub node of otherNode.\n\t\t * @param {FancytreeNode} otherNode\n\t\t * @returns {boolean}\n\t\t */\n\t\tisDescendantOf: function(otherNode) {\n\t\t\tif (!otherNode || otherNode.tree !== this.tree) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar p = this.parent;\n\t\t\twhile (p) {\n\t\t\t\tif (p === otherNode) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (p === p.parent) {\n\t\t\t\t\t$.error(\"Recursive parent link: \" + p);\n\t\t\t\t}\n\t\t\t\tp = p.parent;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t/** Return true if node is expanded.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisExpanded: function() {\n\t\t\treturn !!this.expanded;\n\t\t},\n\t\t/** Return true if node is the first node of its parent's children.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFirstSibling: function() {\n\t\t\tvar p = this.parent;\n\t\t\treturn !p || p.children[0] === this;\n\t\t},\n\t\t/** Return true if node is a folder, i.e. has the node.folder attribute set.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisFolder: function() {\n\t\t\treturn !!this.folder;\n\t\t},\n\t\t/** Return true if node is the last node of its parent's children.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisLastSibling: function() {\n\t\t\tvar p = this.parent;\n\t\t\treturn !p || p.children[p.children.length - 1] === this;\n\t\t},\n\t\t/** Return true if node is lazy (even if data was already loaded)\n\t\t * @returns {boolean}\n\t\t */\n\t\tisLazy: function() {\n\t\t\treturn !!this.lazy;\n\t\t},\n\t\t/** Return true if node is lazy and loaded. For non-lazy nodes always return true.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisLoaded: function() {\n\t\t\treturn !this.lazy || this.hasChildren() !== undefined; // Also checks if the only child is a status node\n\t\t},\n\t\t/** Return true if children are currently beeing loaded, i.e. a Ajax request is pending.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisLoading: function() {\n\t\t\treturn !!this._isLoading;\n\t\t},\n\t\t/*\n\t\t * @deprecated since v2.4.0:  Use isRootNode() instead\n\t\t */\n\t\tisRoot: function() {\n\t\t\treturn this.isRootNode();\n\t\t},\n\t\t/** Return true if node is partially selected (tri-state).\n\t\t * @returns {boolean}\n\t\t * @since 2.23\n\t\t */\n\t\tisPartsel: function() {\n\t\t\treturn !this.selected && !!this.partsel;\n\t\t},\n\t\t/** (experimental) Return true if this is partially loaded.\n\t\t * @returns {boolean}\n\t\t * @since 2.15\n\t\t */\n\t\tisPartload: function() {\n\t\t\treturn !!this.partload;\n\t\t},\n\t\t/** Return true if this is the (invisible) system root node.\n\t\t * @returns {boolean}\n\t\t * @since 2.4\n\t\t */\n\t\tisRootNode: function() {\n\t\t\treturn this.tree.rootNode === this;\n\t\t},\n\t\t/** Return true if node is selected, i.e. has a checkmark set (see also FancytreeNode#isActive).\n\t\t * @returns {boolean}\n\t\t */\n\t\tisSelected: function() {\n\t\t\treturn !!this.selected;\n\t\t},\n\t\t/** Return true if this node is a temporarily generated system node like\n\t\t * 'loading', 'paging', or 'error' (node.statusNodeType contains the type).\n\t\t * @returns {boolean}\n\t\t */\n\t\tisStatusNode: function() {\n\t\t\treturn !!this.statusNodeType;\n\t\t},\n\t\t/** Return true if this node is a status node of type 'paging'.\n\t\t * @returns {boolean}\n\t\t * @since 2.15\n\t\t */\n\t\tisPagingNode: function() {\n\t\t\treturn this.statusNodeType === \"paging\";\n\t\t},\n\t\t/** Return true if this a top level node, i.e. a direct child of the (invisible) system root node.\n\t\t * @returns {boolean}\n\t\t * @since 2.4\n\t\t */\n\t\tisTopLevel: function() {\n\t\t\treturn this.tree.rootNode === this.parent;\n\t\t},\n\t\t/** Return true if node is lazy and not yet loaded. For non-lazy nodes always return false.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisUndefined: function() {\n\t\t\treturn this.hasChildren() === undefined; // also checks if the only child is a status node\n\t\t},\n\t\t/** Return true if all parent nodes are expanded. Note: this does not check\n\t\t * whether the node is scrolled into the visible part of the screen.\n\t\t * @returns {boolean}\n\t\t */\n\t\tisVisible: function() {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tn,\n\t\t\t\thasFilter = this.tree.enableFilter,\n\t\t\t\tparents = this.getParentList(false, false);\n\n\t\t\t// TODO: check $(n.span).is(\":visible\")\n\t\t\t// i.e. return false for nodes (but not parents) that are hidden\n\t\t\t// by a filter\n\t\t\tif (hasFilter && !this.match && !this.subMatchCount) {\n\t\t\t\t// this.debug( \"isVisible: HIDDEN (\" + hasFilter + \", \" + this.match + \", \" + this.match + \")\" );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (i = 0, l = parents.length; i < l; i++) {\n\t\t\t\tn = parents[i];\n\n\t\t\t\tif (!n.expanded) {\n\t\t\t\t\t// this.debug(\"isVisible: HIDDEN (parent collapsed)\");\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// if (hasFilter && !n.match && !n.subMatchCount) {\n\t\t\t\t// \tthis.debug(\"isVisible: HIDDEN (\" + hasFilter + \", \" + this.match + \", \" + this.match + \")\");\n\t\t\t\t// \treturn false;\n\t\t\t\t// }\n\t\t\t}\n\t\t\t// this.debug(\"isVisible: VISIBLE\");\n\t\t\treturn true;\n\t\t},\n\t\t/** Deprecated.\n\t\t * @deprecated since 2014-02-16: use load() instead.\n\t\t */\n\t\tlazyLoad: function(discard) {\n\t\t\t$.error(\n\t\t\t\t\"FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead.\"\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * Load all children of a lazy node if neccessary. The <i>expanded</i> state is maintained.\n\t\t * @param {boolean} [forceReload=false] Pass true to discard any existing nodes before. Otherwise this method does nothing if the node was already loaded.\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tload: function(forceReload) {\n\t\t\tvar res,\n\t\t\t\tsource,\n\t\t\t\tself = this,\n\t\t\t\twasExpanded = this.isExpanded();\n\n\t\t\t_assert(this.isLazy(), \"load() requires a lazy node\");\n\t\t\t// _assert( forceReload || this.isUndefined(), \"Pass forceReload=true to re-load a lazy node\" );\n\t\t\tif (!forceReload && !this.isUndefined()) {\n\t\t\t\treturn _getResolvedPromise(this);\n\t\t\t}\n\t\t\tif (this.isLoaded()) {\n\t\t\t\tthis.resetLazy(); // also collapses\n\t\t\t}\n\t\t\t// This method is also called by setExpanded() and loadKeyPath(), so we\n\t\t\t// have to avoid recursion.\n\t\t\tsource = this.tree._triggerNodeEvent(\"lazyLoad\", this);\n\t\t\tif (source === false) {\n\t\t\t\t// #69\n\t\t\t\treturn _getResolvedPromise(this);\n\t\t\t}\n\t\t\t_assert(\n\t\t\t\ttypeof source !== \"boolean\",\n\t\t\t\t\"lazyLoad event must return source in data.result\"\n\t\t\t);\n\t\t\tres = this.tree._callHook(\"nodeLoadChildren\", this, source);\n\t\t\tif (wasExpanded) {\n\t\t\t\tthis.expanded = true;\n\t\t\t\tres.always(function() {\n\t\t\t\t\tself.render();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tres.always(function() {\n\t\t\t\t\tself.renderStatus(); // fix expander icon to 'loaded'\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t/** Expand all parents and optionally scroll into visible area as neccessary.\n\t\t * Promise is resolved, when lazy loading and animations are done.\n\t\t * @param {object} [opts] passed to `setExpanded()`.\n\t\t *     Defaults to {noAnimation: false, noEvents: false, scrollIntoView: true}\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tmakeVisible: function(opts) {\n\t\t\tvar i,\n\t\t\t\tself = this,\n\t\t\t\tdeferreds = [],\n\t\t\t\tdfd = new $.Deferred(),\n\t\t\t\tparents = this.getParentList(false, false),\n\t\t\t\tlen = parents.length,\n\t\t\t\teffects = !(opts && opts.noAnimation === true),\n\t\t\t\tscroll = !(opts && opts.scrollIntoView === false);\n\n\t\t\t// Expand bottom-up, so only the top node is animated\n\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t// self.debug(\"pushexpand\" + parents[i]);\n\t\t\t\tdeferreds.push(parents[i].setExpanded(true, opts));\n\t\t\t}\n\t\t\t$.when.apply($, deferreds).done(function() {\n\t\t\t\t// All expands have finished\n\t\t\t\t// self.debug(\"expand DONE\", scroll);\n\t\t\t\tif (scroll) {\n\t\t\t\t\tself.scrollIntoView(effects).done(function() {\n\t\t\t\t\t\t// self.debug(\"scroll DONE\");\n\t\t\t\t\t\tdfd.resolve();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdfd.resolve();\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn dfd.promise();\n\t\t},\n\t\t/** Move this node to targetNode.\n\t\t *  @param {FancytreeNode} targetNode\n\t\t *  @param {string} mode <pre>\n\t\t *      'child': append this node as last child of targetNode.\n\t\t *               This is the default. To be compatble with the D'n'd\n\t\t *               hitMode, we also accept 'over'.\n\t\t *      'firstChild': add this node as first child of targetNode.\n\t\t *      'before': add this node as sibling before targetNode.\n\t\t *      'after': add this node as sibling after targetNode.</pre>\n\t\t *  @param {function} [map] optional callback(FancytreeNode) to allow modifcations\n\t\t */\n\t\tmoveTo: function(targetNode, mode, map) {\n\t\t\tif (mode === undefined || mode === \"over\") {\n\t\t\t\tmode = \"child\";\n\t\t\t} else if (mode === \"firstChild\") {\n\t\t\t\tif (targetNode.children && targetNode.children.length) {\n\t\t\t\t\tmode = \"before\";\n\t\t\t\t\ttargetNode = targetNode.children[0];\n\t\t\t\t} else {\n\t\t\t\t\tmode = \"child\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar pos,\n\t\t\t\ttree = this.tree,\n\t\t\t\tprevParent = this.parent,\n\t\t\t\ttargetParent =\n\t\t\t\t\tmode === \"child\" ? targetNode : targetNode.parent;\n\n\t\t\tif (this === targetNode) {\n\t\t\t\treturn;\n\t\t\t} else if (!this.parent) {\n\t\t\t\t$.error(\"Cannot move system root\");\n\t\t\t} else if (targetParent.isDescendantOf(this)) {\n\t\t\t\t$.error(\"Cannot move a node to its own descendant\");\n\t\t\t}\n\t\t\tif (targetParent !== prevParent) {\n\t\t\t\tprevParent.triggerModifyChild(\"remove\", this);\n\t\t\t}\n\t\t\t// Unlink this node from current parent\n\t\t\tif (this.parent.children.length === 1) {\n\t\t\t\tif (this.parent === targetParent) {\n\t\t\t\t\treturn; // #258\n\t\t\t\t}\n\t\t\t\tthis.parent.children = this.parent.lazy ? [] : null;\n\t\t\t\tthis.parent.expanded = false;\n\t\t\t} else {\n\t\t\t\tpos = $.inArray(this, this.parent.children);\n\t\t\t\t_assert(pos >= 0, \"invalid source parent\");\n\t\t\t\tthis.parent.children.splice(pos, 1);\n\t\t\t}\n\t\t\t// Remove from source DOM parent\n\t\t\t// if(this.parent.ul){\n\t\t\t// \tthis.parent.ul.removeChild(this.li);\n\t\t\t// }\n\n\t\t\t// Insert this node to target parent's child list\n\t\t\tthis.parent = targetParent;\n\t\t\tif (targetParent.hasChildren()) {\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase \"child\":\n\t\t\t\t\t\t// Append to existing target children\n\t\t\t\t\t\ttargetParent.children.push(this);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"before\":\n\t\t\t\t\t\t// Insert this node before target node\n\t\t\t\t\t\tpos = $.inArray(targetNode, targetParent.children);\n\t\t\t\t\t\t_assert(pos >= 0, \"invalid target parent\");\n\t\t\t\t\t\ttargetParent.children.splice(pos, 0, this);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"after\":\n\t\t\t\t\t\t// Insert this node after target node\n\t\t\t\t\t\tpos = $.inArray(targetNode, targetParent.children);\n\t\t\t\t\t\t_assert(pos >= 0, \"invalid target parent\");\n\t\t\t\t\t\ttargetParent.children.splice(pos + 1, 0, this);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$.error(\"Invalid mode \" + mode);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttargetParent.children = [this];\n\t\t\t}\n\t\t\t// Parent has no <ul> tag yet:\n\t\t\t// if( !targetParent.ul ) {\n\t\t\t// \t// This is the parent's first child: create UL tag\n\t\t\t// \t// (Hidden, because it will be\n\t\t\t// \ttargetParent.ul = document.createElement(\"ul\");\n\t\t\t// \ttargetParent.ul.style.display = \"none\";\n\t\t\t// \ttargetParent.li.appendChild(targetParent.ul);\n\t\t\t// }\n\t\t\t// // Issue 319: Add to target DOM parent (only if node was already rendered(expanded))\n\t\t\t// if(this.li){\n\t\t\t// \ttargetParent.ul.appendChild(this.li);\n\t\t\t// }\n\n\t\t\t// Let caller modify the nodes\n\t\t\tif (map) {\n\t\t\t\ttargetNode.visit(map, true);\n\t\t\t}\n\t\t\tif (targetParent === prevParent) {\n\t\t\t\ttargetParent.triggerModifyChild(\"move\", this);\n\t\t\t} else {\n\t\t\t\t// prevParent.triggerModifyChild(\"remove\", this);\n\t\t\t\ttargetParent.triggerModifyChild(\"add\", this);\n\t\t\t}\n\t\t\t// Handle cross-tree moves\n\t\t\tif (tree !== targetNode.tree) {\n\t\t\t\t// Fix node.tree for all source nodes\n\t\t\t\t// \t_assert(false, \"Cross-tree move is not yet implemented.\");\n\t\t\t\tthis.warn(\"Cross-tree moveTo is experimental!\");\n\t\t\t\tthis.visit(function(n) {\n\t\t\t\t\t// TODO: fix selection state and activation, ...\n\t\t\t\t\tn.tree = targetNode.tree;\n\t\t\t\t}, true);\n\t\t\t}\n\n\t\t\t// A collaposed node won't re-render children, so we have to remove it manually\n\t\t\t// if( !targetParent.expanded ){\n\t\t\t//   prevParent.ul.removeChild(this.li);\n\t\t\t// }\n\t\t\ttree._callHook(\"treeStructureChanged\", tree, \"moveTo\");\n\n\t\t\t// Update HTML markup\n\t\t\tif (!prevParent.isDescendantOf(targetParent)) {\n\t\t\t\tprevParent.render();\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!targetParent.isDescendantOf(prevParent) &&\n\t\t\t\ttargetParent !== prevParent\n\t\t\t) {\n\t\t\t\ttargetParent.render();\n\t\t\t}\n\t\t\t// TODO: fix selection state\n\t\t\t// TODO: fix active state\n\n\t\t\t/*\n\t\t\tvar tree = this.tree;\n\t\t\tvar opts = tree.options;\n\t\t\tvar pers = tree.persistence;\n\n\t\t\t// Always expand, if it's below minExpandLevel\n\t\t\t// tree.logDebug (\"%s._addChildNode(%o), l=%o\", this, ftnode, ftnode.getLevel());\n\t\t\tif ( opts.minExpandLevel >= ftnode.getLevel() ) {\n\t\t\t\t// tree.logDebug (\"Force expand for %o\", ftnode);\n\t\t\t\tthis.bExpanded = true;\n\t\t\t}\n\n\t\t\t// In multi-hier mode, update the parents selection state\n\t\t\t// DT issue #82: only if not initializing, because the children may not exist yet\n\t\t\t// if( !ftnode.data.isStatusNode() && opts.selectMode==3 && !isInitializing )\n\t\t\t// \tftnode._fixSelectionState();\n\n\t\t\t// In multi-hier mode, update the parents selection state\n\t\t\tif( ftnode.bSelected && opts.selectMode==3 ) {\n\t\t\t\tvar p = this;\n\t\t\t\twhile( p ) {\n\t\t\t\t\tif( !p.hasSubSel )\n\t\t\t\t\t\tp._setSubSel(true);\n\t\t\t\t\tp = p.parent;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// render this node and the new child\n\t\t\tif ( tree.bEnableUpdate )\n\t\t\t\tthis.render();\n\t\t\treturn ftnode;\n\t\t\t*/\n\t\t},\n\t\t/** Set focus relative to this node and optionally activate.\n\t\t *\n\t\t * 'left' collapses the node if it is expanded, or move to the parent\n\t\t * otherwise.\n\t\t * 'right' expands the node if it is collapsed, or move to the first\n\t\t * child otherwise.\n\t\t *\n\t\t * @param {string|number} where 'down', 'first', 'last', 'left', 'parent', 'right', or 'up'.\n\t\t *   (Alternatively the keyCode that would normally trigger this move,\n\t\t *   e.g. `$.ui.keyCode.LEFT` = 'left'.\n\t\t * @param {boolean} [activate=true]\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tnavigate: function(where, activate) {\n\t\t\tvar node,\n\t\t\t\tKC = $.ui.keyCode;\n\n\t\t\t// Handle optional expand/collapse action for LEFT/RIGHT\n\t\t\tswitch (where) {\n\t\t\t\tcase \"left\":\n\t\t\t\tcase KC.LEFT:\n\t\t\t\t\tif (this.expanded) {\n\t\t\t\t\t\treturn this.setExpanded(false);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\tcase KC.RIGHT:\n\t\t\t\t\tif (!this.expanded && (this.children || this.lazy)) {\n\t\t\t\t\t\treturn this.setExpanded();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Otherwise activate or focus the related node\n\t\t\tnode = this.findRelatedNode(where);\n\t\t\tif (node) {\n\t\t\t\t// setFocus/setActive will scroll later (if autoScroll is specified)\n\t\t\t\ttry {\n\t\t\t\t\tnode.makeVisible({ scrollIntoView: false });\n\t\t\t\t} catch (e) {} // #272\n\t\t\t\tif (activate === false) {\n\t\t\t\t\tnode.setFocus();\n\t\t\t\t\treturn _getResolvedPromise();\n\t\t\t\t}\n\t\t\t\treturn node.setActive();\n\t\t\t}\n\t\t\tthis.warn(\"Could not find related node '\" + where + \"'.\");\n\t\t\treturn _getResolvedPromise();\n\t\t},\n\t\t/**\n\t\t * Remove this node (not allowed for system root).\n\t\t */\n\t\tremove: function() {\n\t\t\treturn this.parent.removeChild(this);\n\t\t},\n\t\t/**\n\t\t * Remove childNode from list of direct children.\n\t\t * @param {FancytreeNode} childNode\n\t\t */\n\t\tremoveChild: function(childNode) {\n\t\t\treturn this.tree._callHook(\"nodeRemoveChild\", this, childNode);\n\t\t},\n\t\t/**\n\t\t * Remove all child nodes and descendents. This converts the node into a leaf.<br>\n\t\t * If this was a lazy node, it is still considered 'loaded'; call node.resetLazy()\n\t\t * in order to trigger lazyLoad on next expand.\n\t\t */\n\t\tremoveChildren: function() {\n\t\t\treturn this.tree._callHook(\"nodeRemoveChildren\", this);\n\t\t},\n\t\t/**\n\t\t * Remove class from node's span tag and .extraClasses.\n\t\t *\n\t\t * @param {string} className class name\n\t\t *\n\t\t * @since 2.17\n\t\t */\n\t\tremoveClass: function(className) {\n\t\t\treturn this.toggleClass(className, false);\n\t\t},\n\t\t/**\n\t\t * This method renders and updates all HTML markup that is required\n\t\t * to display this node in its current state.<br>\n\t\t * Note:\n\t\t * <ul>\n\t\t * <li>It should only be neccessary to call this method after the node object\n\t\t *     was modified by direct access to its properties, because the common\n\t\t *     API methods (node.setTitle(), moveTo(), addChildren(), remove(), ...)\n\t\t *     already handle this.\n\t\t * <li> {@link FancytreeNode#renderTitle} and {@link FancytreeNode#renderStatus}\n\t\t *     are implied. If changes are more local, calling only renderTitle() or\n\t\t *     renderStatus() may be sufficient and faster.\n\t\t * </ul>\n\t\t *\n\t\t * @param {boolean} [force=false] re-render, even if html markup was already created\n\t\t * @param {boolean} [deep=false] also render all descendants, even if parent is collapsed\n\t\t */\n\t\trender: function(force, deep) {\n\t\t\treturn this.tree._callHook(\"nodeRender\", this, force, deep);\n\t\t},\n\t\t/** Create HTML markup for the node's outer `<span>` (expander, checkbox, icon, and title).\n\t\t * Implies {@link FancytreeNode#renderStatus}.\n\t\t * @see Fancytree_Hooks#nodeRenderTitle\n\t\t */\n\t\trenderTitle: function() {\n\t\t\treturn this.tree._callHook(\"nodeRenderTitle\", this);\n\t\t},\n\t\t/** Update element's CSS classes according to node state.\n\t\t * @see Fancytree_Hooks#nodeRenderStatus\n\t\t */\n\t\trenderStatus: function() {\n\t\t\treturn this.tree._callHook(\"nodeRenderStatus\", this);\n\t\t},\n\t\t/**\n\t\t * (experimental) Replace this node with `source`.\n\t\t * (Currently only available for paging nodes.)\n\t\t * @param {NodeData[]} source List of child node definitions\n\t\t * @since 2.15\n\t\t */\n\t\treplaceWith: function(source) {\n\t\t\tvar res,\n\t\t\t\tparent = this.parent,\n\t\t\t\tpos = $.inArray(this, parent.children),\n\t\t\t\tself = this;\n\n\t\t\t_assert(\n\t\t\t\tthis.isPagingNode(),\n\t\t\t\t\"replaceWith() currently requires a paging status node\"\n\t\t\t);\n\n\t\t\tres = this.tree._callHook(\"nodeLoadChildren\", this, source);\n\t\t\tres.done(function(data) {\n\t\t\t\t// New nodes are currently children of `this`.\n\t\t\t\tvar children = self.children;\n\t\t\t\t// Prepend newly loaded child nodes to `this`\n\t\t\t\t// Move new children after self\n\t\t\t\tfor (i = 0; i < children.length; i++) {\n\t\t\t\t\tchildren[i].parent = parent;\n\t\t\t\t}\n\t\t\t\tparent.children.splice.apply(\n\t\t\t\t\tparent.children,\n\t\t\t\t\t[pos + 1, 0].concat(children)\n\t\t\t\t);\n\n\t\t\t\t// Remove self\n\t\t\t\tself.children = null;\n\t\t\t\tself.remove();\n\t\t\t\t// Redraw new nodes\n\t\t\t\tparent.render();\n\t\t\t\t// TODO: set node.partload = false if this was tha last paging node?\n\t\t\t\t// parent.addPagingNode(false);\n\t\t\t}).fail(function() {\n\t\t\t\tself.setExpanded();\n\t\t\t});\n\t\t\treturn res;\n\t\t\t// $.error(\"Not implemented: replaceWith()\");\n\t\t},\n\t\t/**\n\t\t * Remove all children, collapse, and set the lazy-flag, so that the lazyLoad\n\t\t * event is triggered on next expand.\n\t\t */\n\t\tresetLazy: function() {\n\t\t\tthis.removeChildren();\n\t\t\tthis.expanded = false;\n\t\t\tthis.lazy = true;\n\t\t\tthis.children = undefined;\n\t\t\tthis.renderStatus();\n\t\t},\n\t\t/** Schedule activity for delayed execution (cancel any pending request).\n\t\t *  scheduleAction('cancel') will only cancel a pending request (if any).\n\t\t * @param {string} mode\n\t\t * @param {number} ms\n\t\t */\n\t\tscheduleAction: function(mode, ms) {\n\t\t\tif (this.tree.timer) {\n\t\t\t\tclearTimeout(this.tree.timer);\n\t\t\t\tthis.tree.debug(\"clearTimeout(%o)\", this.tree.timer);\n\t\t\t}\n\t\t\tthis.tree.timer = null;\n\t\t\tvar self = this; // required for closures\n\t\t\tswitch (mode) {\n\t\t\t\tcase \"cancel\":\n\t\t\t\t\t// Simply made sure that timer was cleared\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"expand\":\n\t\t\t\t\tthis.tree.timer = setTimeout(function() {\n\t\t\t\t\t\tself.tree.debug(\"setTimeout: trigger expand\");\n\t\t\t\t\t\tself.setExpanded(true);\n\t\t\t\t\t}, ms);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"activate\":\n\t\t\t\t\tthis.tree.timer = setTimeout(function() {\n\t\t\t\t\t\tself.tree.debug(\"setTimeout: trigger activate\");\n\t\t\t\t\t\tself.setActive(true);\n\t\t\t\t\t}, ms);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$.error(\"Invalid mode \" + mode);\n\t\t\t}\n\t\t\t// this.tree.debug(\"setTimeout(%s, %s): %s\", mode, ms, this.tree.timer);\n\t\t},\n\t\t/**\n\t\t *\n\t\t * @param {boolean | PlainObject} [effects=false] animation options.\n\t\t * @param {object} [options=null] {topNode: null, effects: ..., parent: ...} this node will remain visible in\n\t\t *     any case, even if `this` is outside the scroll pane.\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tscrollIntoView: function(effects, options) {\n\t\t\tif (options !== undefined && _isNode(options)) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t\"scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\t// The scroll parent is typically the plain tree's <UL> container.\n\t\t\t// For ext-table, we choose the nearest parent that has `position: relative`\n\t\t\t// and `overflow` set.\n\t\t\t// (This default can be overridden by the local or global `scrollParent` option.)\n\t\t\tvar opts = $.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\teffects:\n\t\t\t\t\t\t\teffects === true\n\t\t\t\t\t\t\t\t? { duration: 200, queue: false }\n\t\t\t\t\t\t\t\t: effects,\n\t\t\t\t\t\tscrollOfs: this.tree.options.scrollOfs,\n\t\t\t\t\t\tscrollParent: this.tree.options.scrollParent,\n\t\t\t\t\t\ttopNode: null,\n\t\t\t\t\t},\n\t\t\t\t\toptions\n\t\t\t\t),\n\t\t\t\t$scrollParent = opts.scrollParent,\n\t\t\t\t$container = this.tree.$container,\n\t\t\t\toverflowY = $container.css(\"overflow-y\");\n\n\t\t\tif (!$scrollParent) {\n\t\t\t\tif (this.tree.tbody) {\n\t\t\t\t\t$scrollParent = $container.scrollParent();\n\t\t\t\t} else if (overflowY === \"scroll\" || overflowY === \"auto\") {\n\t\t\t\t\t$scrollParent = $container;\n\t\t\t\t} else {\n\t\t\t\t\t// #922 plain tree in a non-fixed-sized UL scrolls inside its parent\n\t\t\t\t\t$scrollParent = $container.scrollParent();\n\t\t\t\t}\n\t\t\t} else if (!$scrollParent.jquery) {\n\t\t\t\t// Make sure we have a jQuery object\n\t\t\t\t$scrollParent = $($scrollParent);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t$scrollParent[0] === document ||\n\t\t\t\t$scrollParent[0] === document.body\n\t\t\t) {\n\t\t\t\t// `document` may be returned by $().scrollParent(), if nothing is found,\n\t\t\t\t// but would not work: (see #894)\n\t\t\t\tthis.debug(\n\t\t\t\t\t\"scrollIntoView(): normalizing scrollParent to 'window':\",\n\t\t\t\t\t$scrollParent[0]\n\t\t\t\t);\n\t\t\t\t$scrollParent = $(window);\n\t\t\t}\n\t\t\t// eslint-disable-next-line one-var\n\t\t\tvar topNodeY,\n\t\t\t\tnodeY,\n\t\t\t\thorzScrollbarHeight,\n\t\t\t\tcontainerOffsetTop,\n\t\t\t\tdfd = new $.Deferred(),\n\t\t\t\tself = this,\n\t\t\t\tnodeHeight = $(this.span).height(),\n\t\t\t\ttopOfs = opts.scrollOfs.top || 0,\n\t\t\t\tbottomOfs = opts.scrollOfs.bottom || 0,\n\t\t\t\tcontainerHeight = $scrollParent.height(),\n\t\t\t\tscrollTop = $scrollParent.scrollTop(),\n\t\t\t\t$animateTarget = $scrollParent,\n\t\t\t\tisParentWindow = $scrollParent[0] === window,\n\t\t\t\ttopNode = opts.topNode || null,\n\t\t\t\tnewScrollTop = null;\n\n\t\t\t// this.debug(\"scrollIntoView(), scrollTop=\" + scrollTop, opts.scrollOfs);\n\t\t\t// _assert($(this.span).is(\":visible\"), \"scrollIntoView node is invisible\"); // otherwise we cannot calc offsets\n\t\t\tif (this.isRootNode() || !this.isVisible()) {\n\t\t\t\t// We cannot calc offsets for hidden elements\n\t\t\t\tthis.info(\"scrollIntoView(): node is invisible.\");\n\t\t\t\treturn _getResolvedPromise();\n\t\t\t}\n\t\t\tif (isParentWindow) {\n\t\t\t\tnodeY = $(this.span).offset().top;\n\t\t\t\ttopNodeY =\n\t\t\t\t\ttopNode && topNode.span ? $(topNode.span).offset().top : 0;\n\t\t\t\t$animateTarget = $(\"html,body\");\n\t\t\t} else {\n\t\t\t\t_assert(\n\t\t\t\t\t$scrollParent[0] !== document &&\n\t\t\t\t\t\t$scrollParent[0] !== document.body,\n\t\t\t\t\t\"scrollParent should be a simple element or `window`, not document or body.\"\n\t\t\t\t);\n\n\t\t\t\tcontainerOffsetTop = $scrollParent.offset().top;\n\t\t\t\tnodeY =\n\t\t\t\t\t$(this.span).offset().top - containerOffsetTop + scrollTop; // relative to scroll parent\n\t\t\t\ttopNodeY = topNode\n\t\t\t\t\t? $(topNode.span).offset().top -\n\t\t\t\t\t  containerOffsetTop +\n\t\t\t\t\t  scrollTop\n\t\t\t\t\t: 0;\n\t\t\t\thorzScrollbarHeight = Math.max(\n\t\t\t\t\t0,\n\t\t\t\t\t$scrollParent.innerHeight() - $scrollParent[0].clientHeight\n\t\t\t\t);\n\t\t\t\tcontainerHeight -= horzScrollbarHeight;\n\t\t\t}\n\n\t\t\t// this.debug(\"    scrollIntoView(), nodeY=\" + nodeY + \", containerHeight=\" + containerHeight);\n\t\t\tif (nodeY < scrollTop + topOfs) {\n\t\t\t\t// Node is above visible container area\n\t\t\t\tnewScrollTop = nodeY - topOfs;\n\t\t\t\t// this.debug(\"    scrollIntoView(), UPPER newScrollTop=\" + newScrollTop);\n\t\t\t} else if (\n\t\t\t\tnodeY + nodeHeight >\n\t\t\t\tscrollTop + containerHeight - bottomOfs\n\t\t\t) {\n\t\t\t\tnewScrollTop = nodeY + nodeHeight - containerHeight + bottomOfs;\n\t\t\t\t// this.debug(\"    scrollIntoView(), LOWER newScrollTop=\" + newScrollTop);\n\t\t\t\t// If a topNode was passed, make sure that it is never scrolled\n\t\t\t\t// outside the upper border\n\t\t\t\tif (topNode) {\n\t\t\t\t\t_assert(\n\t\t\t\t\t\ttopNode.isRootNode() || topNode.isVisible(),\n\t\t\t\t\t\t\"topNode must be visible\"\n\t\t\t\t\t);\n\t\t\t\t\tif (topNodeY < newScrollTop) {\n\t\t\t\t\t\tnewScrollTop = topNodeY - topOfs;\n\t\t\t\t\t\t// this.debug(\"    scrollIntoView(), TOP newScrollTop=\" + newScrollTop);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newScrollTop === null) {\n\t\t\t\tdfd.resolveWith(this);\n\t\t\t} else {\n\t\t\t\t// this.debug(\"    scrollIntoView(), SET newScrollTop=\" + newScrollTop);\n\t\t\t\tif (opts.effects) {\n\t\t\t\t\topts.effects.complete = function() {\n\t\t\t\t\t\tdfd.resolveWith(self);\n\t\t\t\t\t};\n\t\t\t\t\t$animateTarget.stop(true).animate(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscrollTop: newScrollTop,\n\t\t\t\t\t\t},\n\t\t\t\t\t\topts.effects\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$animateTarget[0].scrollTop = newScrollTop;\n\t\t\t\t\tdfd.resolveWith(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dfd.promise();\n\t\t},\n\n\t\t/**Activate this node.\n\t\t *\n\t\t * The `cell` option requires the ext-table and ext-ariagrid extensions.\n\t\t *\n\t\t * @param {boolean} [flag=true] pass false to deactivate\n\t\t * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false, cell: null}\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tsetActive: function(flag, opts) {\n\t\t\treturn this.tree._callHook(\"nodeSetActive\", this, flag, opts);\n\t\t},\n\t\t/**Expand or collapse this node. Promise is resolved, when lazy loading and animations are done.\n\t\t * @param {boolean} [flag=true] pass false to collapse\n\t\t * @param {object} [opts] additional options. Defaults to {noAnimation: false, noEvents: false}\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tsetExpanded: function(flag, opts) {\n\t\t\treturn this.tree._callHook(\"nodeSetExpanded\", this, flag, opts);\n\t\t},\n\t\t/**Set keyboard focus to this node.\n\t\t * @param {boolean} [flag=true] pass false to blur\n\t\t * @see Fancytree#setFocus\n\t\t */\n\t\tsetFocus: function(flag) {\n\t\t\treturn this.tree._callHook(\"nodeSetFocus\", this, flag);\n\t\t},\n\t\t/**Select this node, i.e. check the checkbox.\n\t\t * @param {boolean} [flag=true] pass false to deselect\n\t\t * @param {object} [opts] additional options. Defaults to {noEvents: false, p\n\t\t *     propagateDown: null, propagateUp: null, callback: null }\n\t\t */\n\t\tsetSelected: function(flag, opts) {\n\t\t\treturn this.tree._callHook(\"nodeSetSelected\", this, flag, opts);\n\t\t},\n\t\t/**Mark a lazy node as 'error', 'loading', 'nodata', or 'ok'.\n\t\t * @param {string} status 'error'|'loading'|'nodata'|'ok'\n\t\t * @param {string} [message]\n\t\t * @param {string} [details]\n\t\t */\n\t\tsetStatus: function(status, message, details) {\n\t\t\treturn this.tree._callHook(\n\t\t\t\t\"nodeSetStatus\",\n\t\t\t\tthis,\n\t\t\t\tstatus,\n\t\t\t\tmessage,\n\t\t\t\tdetails\n\t\t\t);\n\t\t},\n\t\t/**Rename this node.\n\t\t * @param {string} title\n\t\t */\n\t\tsetTitle: function(title) {\n\t\t\tthis.title = title;\n\t\t\tthis.renderTitle();\n\t\t\tthis.triggerModify(\"rename\");\n\t\t},\n\t\t/**Sort child list by title.\n\t\t * @param {function} [cmp] custom compare function(a, b) that returns -1, 0, or 1 (defaults to sort by title).\n\t\t * @param {boolean} [deep=false] pass true to sort all descendant nodes\n\t\t */\n\t\tsortChildren: function(cmp, deep) {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tcl = this.children;\n\n\t\t\tif (!cl) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcmp =\n\t\t\t\tcmp ||\n\t\t\t\tfunction(a, b) {\n\t\t\t\t\tvar x = a.title.toLowerCase(),\n\t\t\t\t\t\ty = b.title.toLowerCase();\n\n\t\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\t\treturn x === y ? 0 : x > y ? 1 : -1;\n\t\t\t\t};\n\t\t\tcl.sort(cmp);\n\t\t\tif (deep) {\n\t\t\t\tfor (i = 0, l = cl.length; i < l; i++) {\n\t\t\t\t\tif (cl[i].children) {\n\t\t\t\t\t\tcl[i].sortChildren(cmp, \"$norender$\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (deep !== \"$norender$\") {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t\tthis.triggerModifyChild(\"sort\");\n\t\t},\n\t\t/** Convert node (or whole branch) into a plain object.\n\t\t *\n\t\t * The result is compatible with node.addChildren().\n\t\t *\n\t\t * @param {boolean} [recursive=false] include child nodes\n\t\t * @param {function} [callback] callback(dict, node) is called for every node, in order to allow modifications.\n\t\t *     Return `false` to ignore this node or `\"skip\"` to include this node without its children.\n\t\t * @returns {NodeData}\n\t\t */\n\t\ttoDict: function(recursive, callback) {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tnode,\n\t\t\t\tres,\n\t\t\t\tdict = {},\n\t\t\t\tself = this;\n\n\t\t\t$.each(NODE_ATTRS, function(i, a) {\n\t\t\t\tif (self[a] || self[a] === false) {\n\t\t\t\t\tdict[a] = self[a];\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!$.isEmptyObject(this.data)) {\n\t\t\t\tdict.data = $.extend({}, this.data);\n\t\t\t\tif ($.isEmptyObject(dict.data)) {\n\t\t\t\t\tdelete dict.data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (callback) {\n\t\t\t\tres = callback(dict, self);\n\t\t\t\tif (res === false) {\n\t\t\t\t\treturn false; // Don't include this node nor its children\n\t\t\t\t}\n\t\t\t\tif (res === \"skip\") {\n\t\t\t\t\trecursive = false; // Include this node, but not the children\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (recursive) {\n\t\t\t\tif ($.isArray(this.children)) {\n\t\t\t\t\tdict.children = [];\n\t\t\t\t\tfor (i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\t\t\tnode = this.children[i];\n\t\t\t\t\t\tif (!node.isStatusNode()) {\n\t\t\t\t\t\t\tres = node.toDict(true, callback);\n\t\t\t\t\t\t\tif (res !== false) {\n\t\t\t\t\t\t\t\tdict.children.push(res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t},\n\t\t/**\n\t\t * Set, clear, or toggle class of node's span tag and .extraClasses.\n\t\t *\n\t\t * @param {string} className class name (separate multiple classes by space)\n\t\t * @param {boolean} [flag] true/false to add/remove class. If omitted, class is toggled.\n\t\t * @returns {boolean} true if a class was added\n\t\t *\n\t\t * @since 2.17\n\t\t */\n\t\ttoggleClass: function(value, flag) {\n\t\t\tvar className,\n\t\t\t\thasClass,\n\t\t\t\trnotwhite = /\\S+/g,\n\t\t\t\tclassNames = value.match(rnotwhite) || [],\n\t\t\t\ti = 0,\n\t\t\t\twasAdded = false,\n\t\t\t\tstatusElem = this[this.tree.statusClassPropName],\n\t\t\t\tcurClasses = \" \" + (this.extraClasses || \"\") + \" \";\n\n\t\t\t// this.info(\"toggleClass('\" + value + \"', \" + flag + \")\", curClasses);\n\t\t\t// Modify DOM element directly if it already exists\n\t\t\tif (statusElem) {\n\t\t\t\t$(statusElem).toggleClass(value, flag);\n\t\t\t}\n\t\t\t// Modify node.extraClasses to make this change persistent\n\t\t\t// Toggle if flag was not passed\n\t\t\twhile ((className = classNames[i++])) {\n\t\t\t\thasClass = curClasses.indexOf(\" \" + className + \" \") >= 0;\n\t\t\t\tflag = flag === undefined ? !hasClass : !!flag;\n\t\t\t\tif (flag) {\n\t\t\t\t\tif (!hasClass) {\n\t\t\t\t\t\tcurClasses += className + \" \";\n\t\t\t\t\t\twasAdded = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twhile (curClasses.indexOf(\" \" + className + \" \") > -1) {\n\t\t\t\t\t\tcurClasses = curClasses.replace(\n\t\t\t\t\t\t\t\" \" + className + \" \",\n\t\t\t\t\t\t\t\" \"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.extraClasses = $.trim(curClasses);\n\t\t\t// this.info(\"-> toggleClass('\" + value + \"', \" + flag + \"): '\" + this.extraClasses + \"'\");\n\t\t\treturn wasAdded;\n\t\t},\n\t\t/** Flip expanded status. */\n\t\ttoggleExpanded: function() {\n\t\t\treturn this.tree._callHook(\"nodeToggleExpanded\", this);\n\t\t},\n\t\t/** Flip selection status. */\n\t\ttoggleSelected: function() {\n\t\t\treturn this.tree._callHook(\"nodeToggleSelected\", this);\n\t\t},\n\t\ttoString: function() {\n\t\t\treturn \"FancytreeNode@\" + this.key + \"[title='\" + this.title + \"']\";\n\t\t\t// return \"<FancytreeNode(#\" + this.key + \", '\" + this.title + \"')>\";\n\t\t},\n\t\t/**\n\t\t * Trigger `modifyChild` event on a parent to signal that a child was modified.\n\t\t * @param {string} operation Type of change: 'add', 'remove', 'rename', 'move', 'data', ...\n\t\t * @param {FancytreeNode} [childNode]\n\t\t * @param {object} [extra]\n\t\t */\n\t\ttriggerModifyChild: function(operation, childNode, extra) {\n\t\t\tvar data,\n\t\t\t\tmodifyChild = this.tree.options.modifyChild;\n\n\t\t\tif (modifyChild) {\n\t\t\t\tif (childNode && childNode.parent !== this) {\n\t\t\t\t\t$.error(\n\t\t\t\t\t\t\"childNode \" + childNode + \" is not a child of \" + this\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tdata = {\n\t\t\t\t\tnode: this,\n\t\t\t\t\ttree: this.tree,\n\t\t\t\t\toperation: operation,\n\t\t\t\t\tchildNode: childNode || null,\n\t\t\t\t};\n\t\t\t\tif (extra) {\n\t\t\t\t\t$.extend(data, extra);\n\t\t\t\t}\n\t\t\t\tmodifyChild({ type: \"modifyChild\" }, data);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Trigger `modifyChild` event on node.parent(!).\n\t\t * @param {string} operation Type of change: 'add', 'remove', 'rename', 'move', 'data', ...\n\t\t * @param {object} [extra]\n\t\t */\n\t\ttriggerModify: function(operation, extra) {\n\t\t\tthis.parent.triggerModifyChild(operation, this, extra);\n\t\t},\n\t\t/** Call fn(node) for all child nodes in hierarchical order (depth-first).<br>\n\t\t * Stop iteration, if fn() returns false. Skip current branch, if fn() returns \"skip\".<br>\n\t\t * Return false if iteration was stopped.\n\t\t *\n\t\t * @param {function} fn the callback function.\n\t\t *     Return false to stop iteration, return \"skip\" to skip this node and\n\t\t *     its children only.\n\t\t * @param {boolean} [includeSelf=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tvisit: function(fn, includeSelf) {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tres = true,\n\t\t\t\tchildren = this.children;\n\n\t\t\tif (includeSelf === true) {\n\t\t\t\tres = fn(this);\n\t\t\t\tif (res === false || res === \"skip\") {\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (children) {\n\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tres = children[i].visit(fn, true);\n\t\t\t\t\tif (res === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t/** Call fn(node) for all child nodes and recursively load lazy children.<br>\n\t\t * <b>Note:</b> If you need this method, you probably should consider to review\n\t\t * your architecture! Recursivley loading nodes is a perfect way for lazy\n\t\t * programmers to flood the server with requests ;-)\n\t\t *\n\t\t * @param {function} [fn] optional callback function.\n\t\t *     Return false to stop iteration, return \"skip\" to skip this node and\n\t\t *     its children only.\n\t\t * @param {boolean} [includeSelf=false]\n\t\t * @returns {$.Promise}\n\t\t * @since 2.4\n\t\t */\n\t\tvisitAndLoad: function(fn, includeSelf, _recursion) {\n\t\t\tvar dfd,\n\t\t\t\tres,\n\t\t\t\tloaders,\n\t\t\t\tnode = this;\n\n\t\t\t// node.debug(\"visitAndLoad\");\n\t\t\tif (fn && includeSelf === true) {\n\t\t\t\tres = fn(node);\n\t\t\t\tif (res === false || res === \"skip\") {\n\t\t\t\t\treturn _recursion ? res : _getResolvedPromise();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!node.children && !node.lazy) {\n\t\t\t\treturn _getResolvedPromise();\n\t\t\t}\n\t\t\tdfd = new $.Deferred();\n\t\t\tloaders = [];\n\t\t\t// node.debug(\"load()...\");\n\t\t\tnode.load().done(function() {\n\t\t\t\t// node.debug(\"load()... done.\");\n\t\t\t\tfor (var i = 0, l = node.children.length; i < l; i++) {\n\t\t\t\t\tres = node.children[i].visitAndLoad(fn, true, true);\n\t\t\t\t\tif (res === false) {\n\t\t\t\t\t\tdfd.reject();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (res !== \"skip\") {\n\t\t\t\t\t\tloaders.push(res); // Add promise to the list\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.when.apply(this, loaders).then(function() {\n\t\t\t\t\tdfd.resolve();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn dfd.promise();\n\t\t},\n\t\t/** Call fn(node) for all parent nodes, bottom-up, including invisible system root.<br>\n\t\t * Stop iteration, if fn() returns false.<br>\n\t\t * Return false if iteration was stopped.\n\t\t *\n\t\t * @param {function} fn the callback function.\n\t\t *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n\t\t * @param {boolean} [includeSelf=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tvisitParents: function(fn, includeSelf) {\n\t\t\t// Visit parent nodes (bottom up)\n\t\t\tif (includeSelf && fn(this) === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar p = this.parent;\n\t\t\twhile (p) {\n\t\t\t\tif (fn(p) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tp = p.parent;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/** Call fn(node) for all sibling nodes.<br>\n\t\t * Stop iteration, if fn() returns false.<br>\n\t\t * Return false if iteration was stopped.\n\t\t *\n\t\t * @param {function} fn the callback function.\n\t\t *     Return false to stop iteration.\n\t\t * @param {boolean} [includeSelf=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tvisitSiblings: function(fn, includeSelf) {\n\t\t\tvar i,\n\t\t\t\tl,\n\t\t\t\tn,\n\t\t\t\tac = this.parent.children;\n\n\t\t\tfor (i = 0, l = ac.length; i < l; i++) {\n\t\t\t\tn = ac[i];\n\t\t\t\tif (includeSelf || n !== this) {\n\t\t\t\t\tif (fn(n) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/** Write warning to browser console if debugLevel >= 2 (prepending node info)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\twarn: function(msg) {\n\t\t\tif (this.tree.options.debugLevel >= 2) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"warn\", arguments);\n\t\t\t}\n\t\t},\n\t};\n\n\t/******************************************************************************\n\t * Fancytree\n\t */\n\t/**\n\t * Construct a new tree object.\n\t *\n\t * @class Fancytree\n\t * @classdesc The controller behind a fancytree.\n\t * This class also contains 'hook methods': see {@link Fancytree_Hooks}.\n\t *\n\t * @param {Widget} widget\n\t *\n\t * @property {string} _id Automatically generated unique tree instance ID, e.g. \"1\".\n\t * @property {string} _ns Automatically generated unique tree namespace, e.g. \".fancytree-1\".\n\t * @property {FancytreeNode} activeNode Currently active node or null.\n\t * @property {string} ariaPropName Property name of FancytreeNode that contains the element which will receive the aria attributes.\n\t *     Typically \"li\", but \"tr\" for table extension.\n\t * @property {jQueryObject} $container Outer `<ul>` element (or `<table>` element for ext-table).\n\t * @property {jQueryObject} $div A jQuery object containing the element used to instantiate the tree widget (`widget.element`)\n\t * @property {object|array} columns Recommended place to store shared column meta data. @since 2.27\n\t * @property {object} data Metadata, i.e. properties that may be passed to `source` in addition to a children array.\n\t * @property {object} ext Hash of all active plugin instances.\n\t * @property {FancytreeNode} focusNode Currently focused node or null.\n\t * @property {FancytreeNode} lastSelectedNode Used to implement selectMode 1 (single select)\n\t * @property {string} nodeContainerAttrName Property name of FancytreeNode that contains the outer element of single nodes.\n\t *     Typically \"li\", but \"tr\" for table extension.\n\t * @property {FancytreeOptions} options Current options, i.e. default options + options passed to constructor.\n\t * @property {FancytreeNode} rootNode Invisible system root node.\n\t * @property {string} statusClassPropName Property name of FancytreeNode that contains the element which will receive the status classes.\n\t *     Typically \"span\", but \"tr\" for table extension.\n\t * @property {object} types Map for shared type specific meta data, used with node.type attribute. @since 2.27\n\t * @property {object} viewport See ext-vieport. @since v2.31\n\t * @property {object} widget Base widget instance.\n\t */\n\tfunction Fancytree(widget) {\n\t\tthis.widget = widget;\n\t\tthis.$div = widget.element;\n\t\tthis.options = widget.options;\n\t\tif (this.options) {\n\t\t\tif (this.options.lazyload !== undefined) {\n\t\t\t\t$.error(\n\t\t\t\t\t\"The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.options.loaderror !== undefined) {\n\t\t\t\t$.error(\n\t\t\t\t\t\"The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.options.fx !== undefined) {\n\t\t\t\t$.error(\n\t\t\t\t\t\"The 'fx' option was replaced by 'toggleEffect' since 2014-11-30.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.options.removeNode !== undefined) {\n\t\t\t\t$.error(\n\t\t\t\t\t\"The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10).\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.ext = {}; // Active extension instances\n\t\tthis.types = {};\n\t\tthis.columns = {};\n\t\t// allow to init tree.data.foo from <div data-foo=''>\n\t\tthis.data = _getElementDataAsDict(this.$div);\n\t\t// TODO: use widget.uuid instead?\n\t\tthis._id = \"\" + (this.options.treeId || $.ui.fancytree._nextId++);\n\t\t// TODO: use widget.eventNamespace instead?\n\t\tthis._ns = \".fancytree-\" + this._id; // append for namespaced events\n\t\tthis.activeNode = null;\n\t\tthis.focusNode = null;\n\t\tthis._hasFocus = null;\n\t\tthis._tempCache = {};\n\t\tthis._lastMousedownNode = null;\n\t\tthis._enableUpdate = true;\n\t\tthis.lastSelectedNode = null;\n\t\tthis.systemFocusElement = null;\n\t\tthis.lastQuicksearchTerm = \"\";\n\t\tthis.lastQuicksearchTime = 0;\n\t\tthis.viewport = null; // ext-grid\n\n\t\tthis.statusClassPropName = \"span\";\n\t\tthis.ariaPropName = \"li\";\n\t\tthis.nodeContainerAttrName = \"li\";\n\n\t\t// Remove previous markup if any\n\t\tthis.$div.find(\">ul.fancytree-container\").remove();\n\n\t\t// Create a node without parent.\n\t\tvar fakeParent = { tree: this },\n\t\t\t$ul;\n\t\tthis.rootNode = new FancytreeNode(fakeParent, {\n\t\t\ttitle: \"root\",\n\t\t\tkey: \"root_\" + this._id,\n\t\t\tchildren: null,\n\t\t\texpanded: true,\n\t\t});\n\t\tthis.rootNode.parent = null;\n\n\t\t// Create root markup\n\t\t$ul = $(\"<ul>\", {\n\t\t\tid: \"ft-id-\" + this._id,\n\t\t\tclass: \"ui-fancytree fancytree-container fancytree-plain\",\n\t\t}).appendTo(this.$div);\n\t\tthis.$container = $ul;\n\t\tthis.rootNode.ul = $ul[0];\n\n\t\tif (this.options.debugLevel == null) {\n\t\t\tthis.options.debugLevel = FT.debugLevel;\n\t\t}\n\t\t// // Add container to the TAB chain\n\t\t// // See http://www.w3.org/TR/wai-aria-practices/#focus_activedescendant\n\t\t// // #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n\t\t// this.$container.attr(\"tabindex\", this.options.tabindex);\n\n\t\t// if( this.options.rtl ) {\n\t\t// \tthis.$container.attr(\"DIR\", \"RTL\").addClass(\"fancytree-rtl\");\n\t\t// // }else{\n\t\t// //\tthis.$container.attr(\"DIR\", null).removeClass(\"fancytree-rtl\");\n\t\t// }\n\t\t// if(this.options.aria){\n\t\t// \tthis.$container.attr(\"role\", \"tree\");\n\t\t// \tif( this.options.selectMode !== 1 ) {\n\t\t// \t\tthis.$container.attr(\"aria-multiselectable\", true);\n\t\t// \t}\n\t\t// }\n\t}\n\n\tFancytree.prototype = /** @lends Fancytree# */ {\n\t\t/* Return a context object that can be re-used for _callHook().\n\t\t * @param {Fancytree | FancytreeNode | EventData} obj\n\t\t * @param {Event} originalEvent\n\t\t * @param {Object} extra\n\t\t * @returns {EventData}\n\t\t */\n\t\t_makeHookContext: function(obj, originalEvent, extra) {\n\t\t\tvar ctx, tree;\n\t\t\tif (obj.node !== undefined) {\n\t\t\t\t// obj is already a context object\n\t\t\t\tif (originalEvent && obj.originalEvent !== originalEvent) {\n\t\t\t\t\t$.error(\"invalid args\");\n\t\t\t\t}\n\t\t\t\tctx = obj;\n\t\t\t} else if (obj.tree) {\n\t\t\t\t// obj is a FancytreeNode\n\t\t\t\ttree = obj.tree;\n\t\t\t\tctx = {\n\t\t\t\t\tnode: obj,\n\t\t\t\t\ttree: tree,\n\t\t\t\t\twidget: tree.widget,\n\t\t\t\t\toptions: tree.widget.options,\n\t\t\t\t\toriginalEvent: originalEvent,\n\t\t\t\t\ttypeInfo: tree.types[obj.type] || {},\n\t\t\t\t};\n\t\t\t} else if (obj.widget) {\n\t\t\t\t// obj is a Fancytree\n\t\t\t\tctx = {\n\t\t\t\t\tnode: null,\n\t\t\t\t\ttree: obj,\n\t\t\t\t\twidget: obj.widget,\n\t\t\t\t\toptions: obj.widget.options,\n\t\t\t\t\toriginalEvent: originalEvent,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t$.error(\"invalid args\");\n\t\t\t}\n\t\t\tif (extra) {\n\t\t\t\t$.extend(ctx, extra);\n\t\t\t}\n\t\t\treturn ctx;\n\t\t},\n\t\t/* Trigger a hook function: funcName(ctx, [...]).\n\t\t *\n\t\t * @param {string} funcName\n\t\t * @param {Fancytree|FancytreeNode|EventData} contextObject\n\t\t * @param {any}  [_extraArgs] optional additional arguments\n\t\t * @returns {any}\n\t\t */\n\t\t_callHook: function(funcName, contextObject, _extraArgs) {\n\t\t\tvar ctx = this._makeHookContext(contextObject),\n\t\t\t\tfn = this[funcName],\n\t\t\t\targs = Array.prototype.slice.call(arguments, 2);\n\t\t\tif (!$.isFunction(fn)) {\n\t\t\t\t$.error(\"_callHook('\" + funcName + \"') is not a function\");\n\t\t\t}\n\t\t\targs.unshift(ctx);\n\t\t\t// this.debug(\"_hook\", funcName, ctx.node && ctx.node.toString() || ctx.tree.toString(), args);\n\t\t\treturn fn.apply(this, args);\n\t\t},\n\t\t_setExpiringValue: function(key, value, ms) {\n\t\t\tthis._tempCache[key] = {\n\t\t\t\tvalue: value,\n\t\t\t\texpire: Date.now() + (+ms || 50),\n\t\t\t};\n\t\t},\n\t\t_getExpiringValue: function(key) {\n\t\t\tvar entry = this._tempCache[key];\n\t\t\tif (entry && entry.expire > Date.now()) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\t\t\tdelete this._tempCache[key];\n\t\t\treturn null;\n\t\t},\n\t\t/* Check if this tree has extension `name` enabled.\n\t\t *\n\t\t * @param {string} name name of the required extension\n\t\t */\n\t\t_usesExtension: function(name) {\n\t\t\treturn $.inArray(name, this.options.extensions) >= 0;\n\t\t},\n\t\t/* Check if current extensions dependencies are met and throw an error if not.\n\t\t *\n\t\t * This method may be called inside the `treeInit` hook for custom extensions.\n\t\t *\n\t\t * @param {string} name name of the required extension\n\t\t * @param {boolean} [required=true] pass `false` if the extension is optional, but we want to check for order if it is present\n\t\t * @param {boolean} [before] `true` if `name` must be included before this, `false` otherwise (use `null` if order doesn't matter)\n\t\t * @param {string} [message] optional error message (defaults to a descriptve error message)\n\t\t */\n\t\t_requireExtension: function(name, required, before, message) {\n\t\t\tif (before != null) {\n\t\t\t\tbefore = !!before;\n\t\t\t}\n\t\t\tvar thisName = this._local.name,\n\t\t\t\textList = this.options.extensions,\n\t\t\t\tisBefore =\n\t\t\t\t\t$.inArray(name, extList) < $.inArray(thisName, extList),\n\t\t\t\tisMissing = required && this.ext[name] == null,\n\t\t\t\tbadOrder = !isMissing && before != null && before !== isBefore;\n\n\t\t\t_assert(\n\t\t\t\tthisName && thisName !== name,\n\t\t\t\t\"invalid or same name '\" + thisName + \"' (require yourself?)\"\n\t\t\t);\n\n\t\t\tif (isMissing || badOrder) {\n\t\t\t\tif (!message) {\n\t\t\t\t\tif (isMissing || required) {\n\t\t\t\t\t\tmessage =\n\t\t\t\t\t\t\t\"'\" +\n\t\t\t\t\t\t\tthisName +\n\t\t\t\t\t\t\t\"' extension requires '\" +\n\t\t\t\t\t\t\tname +\n\t\t\t\t\t\t\t\"'\";\n\t\t\t\t\t\tif (badOrder) {\n\t\t\t\t\t\t\tmessage +=\n\t\t\t\t\t\t\t\t\" to be registered \" +\n\t\t\t\t\t\t\t\t(before ? \"before\" : \"after\") +\n\t\t\t\t\t\t\t\t\" itself\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage =\n\t\t\t\t\t\t\t\"If used together, `\" +\n\t\t\t\t\t\t\tname +\n\t\t\t\t\t\t\t\"` must be registered \" +\n\t\t\t\t\t\t\t(before ? \"before\" : \"after\") +\n\t\t\t\t\t\t\t\" `\" +\n\t\t\t\t\t\t\tthisName +\n\t\t\t\t\t\t\t\"`\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$.error(message);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/** Activate node with a given key and fire focus and activate events.\n\t\t *\n\t\t * A previously activated node will be deactivated.\n\t\t * If activeVisible option is set, all parents will be expanded as necessary.\n\t\t * Pass key = false, to deactivate the current node only.\n\t\t * @param {string} key\n\t\t * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false}\n\t\t * @returns {FancytreeNode} activated node (null, if not found)\n\t\t */\n\t\tactivateKey: function(key, opts) {\n\t\t\tvar node = this.getNodeByKey(key);\n\t\t\tif (node) {\n\t\t\t\tnode.setActive(true, opts);\n\t\t\t} else if (this.activeNode) {\n\t\t\t\tthis.activeNode.setActive(false, opts);\n\t\t\t}\n\t\t\treturn node;\n\t\t},\n\t\t/** (experimental) Add child status nodes that indicate 'More...', ....\n\t\t * @param {boolean|object} node optional node definition. Pass `false` to remove all paging nodes.\n\t\t * @param {string} [mode='append'] 'child'|firstChild'\n\t\t * @since 2.15\n\t\t */\n\t\taddPagingNode: function(node, mode) {\n\t\t\treturn this.rootNode.addPagingNode(node, mode);\n\t\t},\n\t\t/**\n\t\t * (experimental) Apply a modification (or navigation) operation.\n\t\t *\n\t\t * Valid commands:\n\t\t *   - 'moveUp', 'moveDown'\n\t\t *   - 'indent', 'outdent'\n\t\t *   - 'remove'\n\t\t *   - 'edit', 'addChild', 'addSibling': (reqires ext-edit extension)\n\t\t *   - 'cut', 'copy', 'paste': (use an internal singleton 'clipboard')\n\t\t *   - 'down', 'first', 'last', 'left', 'parent', 'right', 'up': navigate\n\t\t *\n\t\t * @param {string} cmd\n\t\t * @param {FancytreeNode} [node=active_node]\n\t\t * @param {object} [opts] Currently unused\n\t\t *\n\t\t * @since 2.32\n\t\t */\n\t\tapplyCommand: function(cmd, node, opts_) {\n\t\t\tvar // clipboard,\n\t\t\t\trefNode;\n\t\t\t// opts = $.extend(\n\t\t\t// \t{ setActive: true, clipboard: CLIPBOARD },\n\t\t\t// \topts_\n\t\t\t// );\n\n\t\t\tnode = node || this.getActiveNode();\n\t\t\t// clipboard = opts.clipboard;\n\n\t\t\tswitch (cmd) {\n\t\t\t\t// Sorting and indentation:\n\t\t\t\tcase \"moveUp\":\n\t\t\t\t\trefNode = node.getPrevSibling();\n\t\t\t\t\tif (refNode) {\n\t\t\t\t\t\tnode.moveTo(refNode, \"before\");\n\t\t\t\t\t\tnode.setActive();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"moveDown\":\n\t\t\t\t\trefNode = node.getNextSibling();\n\t\t\t\t\tif (refNode) {\n\t\t\t\t\t\tnode.moveTo(refNode, \"after\");\n\t\t\t\t\t\tnode.setActive();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"indent\":\n\t\t\t\t\trefNode = node.getPrevSibling();\n\t\t\t\t\tif (refNode) {\n\t\t\t\t\t\tnode.moveTo(refNode, \"child\");\n\t\t\t\t\t\trefNode.setExpanded();\n\t\t\t\t\t\tnode.setActive();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"outdent\":\n\t\t\t\t\tif (!node.isTopLevel()) {\n\t\t\t\t\t\tnode.moveTo(node.getParent(), \"after\");\n\t\t\t\t\t\tnode.setActive();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t// Remove:\n\t\t\t\tcase \"remove\":\n\t\t\t\t\trefNode = node.getPrevSibling() || node.getParent();\n\t\t\t\t\tnode.remove();\n\t\t\t\t\tif (refNode) {\n\t\t\t\t\t\trefNode.setActive();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t// Add, edit (requires ext-edit):\n\t\t\t\tcase \"addChild\":\n\t\t\t\t\tnode.editCreateNode(\"child\", \"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"addSibling\":\n\t\t\t\t\tnode.editCreateNode(\"after\", \"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"rename\":\n\t\t\t\t\tnode.editStart();\n\t\t\t\t\tbreak;\n\t\t\t\t// Simple clipboard simulation:\n\t\t\t\t// case \"cut\":\n\t\t\t\t// \tclipboard = { mode: cmd, data: node };\n\t\t\t\t// \tbreak;\n\t\t\t\t// case \"copy\":\n\t\t\t\t// \tclipboard = {\n\t\t\t\t// \t\tmode: cmd,\n\t\t\t\t// \t\tdata: node.toDict(function(d, n) {\n\t\t\t\t// \t\t\tdelete d.key;\n\t\t\t\t// \t\t}),\n\t\t\t\t// \t};\n\t\t\t\t// \tbreak;\n\t\t\t\t// case \"clear\":\n\t\t\t\t// \tclipboard = null;\n\t\t\t\t// \tbreak;\n\t\t\t\t// case \"paste\":\n\t\t\t\t// \tif (clipboard.mode === \"cut\") {\n\t\t\t\t// \t\t// refNode = node.getPrevSibling();\n\t\t\t\t// \t\tclipboard.data.moveTo(node, \"child\");\n\t\t\t\t// \t\tclipboard.data.setActive();\n\t\t\t\t// \t} else if (clipboard.mode === \"copy\") {\n\t\t\t\t// \t\tnode.addChildren(clipboard.data).setActive();\n\t\t\t\t// \t}\n\t\t\t\t// \tbreak;\n\t\t\t\t// Navigation commands:\n\t\t\t\tcase \"down\":\n\t\t\t\tcase \"first\":\n\t\t\t\tcase \"last\":\n\t\t\t\tcase \"left\":\n\t\t\t\tcase \"parent\":\n\t\t\t\tcase \"right\":\n\t\t\t\tcase \"up\":\n\t\t\t\t\treturn node.navigate(cmd);\n\t\t\t\tdefault:\n\t\t\t\t\t$.error(\"Unhandled command: '\" + cmd + \"'\");\n\t\t\t}\n\t\t},\n\t\t/** (experimental) Modify existing data model.\n\t\t *\n\t\t * @param {Array} patchList array of [key, NodePatch] arrays\n\t\t * @returns {$.Promise} resolved, when all patches have been applied\n\t\t * @see TreePatch\n\t\t */\n\t\tapplyPatch: function(patchList) {\n\t\t\tvar dfd,\n\t\t\t\ti,\n\t\t\t\tp2,\n\t\t\t\tkey,\n\t\t\t\tpatch,\n\t\t\t\tnode,\n\t\t\t\tpatchCount = patchList.length,\n\t\t\t\tdeferredList = [];\n\n\t\t\tfor (i = 0; i < patchCount; i++) {\n\t\t\t\tp2 = patchList[i];\n\t\t\t\t_assert(\n\t\t\t\t\tp2.length === 2,\n\t\t\t\t\t\"patchList must be an array of length-2-arrays\"\n\t\t\t\t);\n\t\t\t\tkey = p2[0];\n\t\t\t\tpatch = p2[1];\n\t\t\t\tnode = key === null ? this.rootNode : this.getNodeByKey(key);\n\t\t\t\tif (node) {\n\t\t\t\t\tdfd = new $.Deferred();\n\t\t\t\t\tdeferredList.push(dfd);\n\t\t\t\t\tnode.applyPatch(patch).always(_makeResolveFunc(dfd, node));\n\t\t\t\t} else {\n\t\t\t\t\tthis.warn(\"could not find node with key '\" + key + \"'\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Return a promise that is resolved, when ALL patches were applied\n\t\t\treturn $.when.apply($, deferredList).promise();\n\t\t},\n\t\t/* TODO: implement in dnd extension\n\t\tcancelDrag: function() {\n\t\t\t\tvar dd = $.ui.ddmanager.current;\n\t\t\t\tif(dd){\n\t\t\t\t\tdd.cancel();\n\t\t\t\t}\n\t\t\t},\n\t\t*/\n\t\t/** Remove all nodes.\n\t\t * @since 2.14\n\t\t */\n\t\tclear: function(source) {\n\t\t\tthis._callHook(\"treeClear\", this);\n\t\t},\n\t\t/** Return the number of nodes.\n\t\t * @returns {integer}\n\t\t */\n\t\tcount: function() {\n\t\t\treturn this.rootNode.countChildren();\n\t\t},\n\t\t/** Write to browser console if debugLevel >= 4 (prepending tree name)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\tdebug: function(msg) {\n\t\t\tif (this.options.debugLevel >= 4) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"log\", arguments);\n\t\t\t}\n\t\t},\n\t\t/** Destroy this widget, restore previous markup and cleanup resources.\n\t\t *\n\t\t * @since 2.34\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis.widget.destroy();\n\t\t},\n\t\t/** Enable (or disable) the tree control.\n\t\t *\n\t\t * @param {boolean} [flag=true] pass false to disable\n\t\t * @since 2.30\n\t\t */\n\t\tenable: function(flag) {\n\t\t\tif (flag === false) {\n\t\t\t\tthis.widget.disable();\n\t\t\t} else {\n\t\t\t\tthis.widget.enable();\n\t\t\t}\n\t\t},\n\t\t/** Temporarily suppress rendering to improve performance on bulk-updates.\n\t\t *\n\t\t * @param {boolean} flag\n\t\t * @returns {boolean} previous status\n\t\t * @since 2.19\n\t\t */\n\t\tenableUpdate: function(flag) {\n\t\t\tflag = flag !== false;\n\t\t\tif (!!this._enableUpdate === !!flag) {\n\t\t\t\treturn flag;\n\t\t\t}\n\t\t\tthis._enableUpdate = flag;\n\t\t\tif (flag) {\n\t\t\t\tthis.debug(\"enableUpdate(true): redraw \"); //, this._dirtyRoots);\n\t\t\t\tthis._callHook(\"treeStructureChanged\", this, \"enableUpdate\");\n\t\t\t\tthis.render();\n\t\t\t} else {\n\t\t\t\t// \tthis._dirtyRoots = null;\n\t\t\t\tthis.debug(\"enableUpdate(false)...\");\n\t\t\t}\n\t\t\treturn !flag; // return previous value\n\t\t},\n\t\t/** Write error to browser console if debugLevel >= 1 (prepending tree info)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\terror: function(msg) {\n\t\t\tif (this.options.debugLevel >= 1) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"error\", arguments);\n\t\t\t}\n\t\t},\n\t\t/** Expand (or collapse) all parent nodes.\n\t\t *\n\t\t * This convenience method uses `tree.visit()` and `tree.setExpanded()`\n\t\t * internally.\n\t\t *\n\t\t * @param {boolean} [flag=true] pass false to collapse\n\t\t * @param {object} [opts] passed to setExpanded()\n\t\t * @since 2.30\n\t\t */\n\t\texpandAll: function(flag, opts) {\n\t\t\tvar prev = this.enableUpdate(false);\n\n\t\t\tflag = flag !== false;\n\t\t\tthis.visit(function(node) {\n\t\t\t\tif (\n\t\t\t\t\tnode.hasChildren() !== false &&\n\t\t\t\t\tnode.isExpanded() !== flag\n\t\t\t\t) {\n\t\t\t\t\tnode.setExpanded(flag, opts);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.enableUpdate(prev);\n\t\t},\n\t\t/**Find all nodes that matches condition.\n\t\t *\n\t\t * @param {string | function(node)} match title string to search for, or a\n\t\t *     callback function that returns `true` if a node is matched.\n\t\t * @returns {FancytreeNode[]} array of nodes (may be empty)\n\t\t * @see FancytreeNode#findAll\n\t\t * @since 2.12\n\t\t */\n\t\tfindAll: function(match) {\n\t\t\treturn this.rootNode.findAll(match);\n\t\t},\n\t\t/**Find first node that matches condition.\n\t\t *\n\t\t * @param {string | function(node)} match title string to search for, or a\n\t\t *     callback function that returns `true` if a node is matched.\n\t\t * @returns {FancytreeNode} matching node or null\n\t\t * @see FancytreeNode#findFirst\n\t\t * @since 2.12\n\t\t */\n\t\tfindFirst: function(match) {\n\t\t\treturn this.rootNode.findFirst(match);\n\t\t},\n\t\t/** Find the next visible node that starts with `match`, starting at `startNode`\n\t\t * and wrap-around at the end.\n\t\t *\n\t\t * @param {string|function} match\n\t\t * @param {FancytreeNode} [startNode] defaults to first node\n\t\t * @returns {FancytreeNode} matching node or null\n\t\t */\n\t\tfindNextNode: function(match, startNode) {\n\t\t\t//, visibleOnly) {\n\t\t\tvar res = null,\n\t\t\t\tfirstNode = this.getFirstChild();\n\n\t\t\tmatch =\n\t\t\t\ttypeof match === \"string\"\n\t\t\t\t\t? _makeNodeTitleStartMatcher(match)\n\t\t\t\t\t: match;\n\t\t\tstartNode = startNode || firstNode;\n\n\t\t\tfunction _checkNode(n) {\n\t\t\t\t// console.log(\"_check \" + n)\n\t\t\t\tif (match(n)) {\n\t\t\t\t\tres = n;\n\t\t\t\t}\n\t\t\t\tif (res || n === startNode) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.visitRows(_checkNode, {\n\t\t\t\tstart: startNode,\n\t\t\t\tincludeSelf: false,\n\t\t\t});\n\t\t\t// Wrap around search\n\t\t\tif (!res && startNode !== firstNode) {\n\t\t\t\tthis.visitRows(_checkNode, {\n\t\t\t\t\tstart: firstNode,\n\t\t\t\t\tincludeSelf: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t/** Find a node relative to another node.\n\t\t *\n\t\t * @param {FancytreeNode} node\n\t\t * @param {string|number} where 'down', 'first', 'last', 'left', 'parent', 'right', or 'up'.\n\t\t *   (Alternatively the keyCode that would normally trigger this move,\n\t\t *   e.g. `$.ui.keyCode.LEFT` = 'left'.\n\t\t * @param {boolean} [includeHidden=false] Not yet implemented\n\t\t * @returns {FancytreeNode|null}\n\t\t * @since v2.31\n\t\t */\n\t\tfindRelatedNode: function(node, where, includeHidden) {\n\t\t\tvar res = null,\n\t\t\t\tKC = $.ui.keyCode;\n\n\t\t\tswitch (where) {\n\t\t\t\tcase \"parent\":\n\t\t\t\tcase KC.BACKSPACE:\n\t\t\t\t\tif (node.parent && node.parent.parent) {\n\t\t\t\t\t\tres = node.parent;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"first\":\n\t\t\t\tcase KC.HOME:\n\t\t\t\t\t// First visible node\n\t\t\t\t\tthis.visit(function(n) {\n\t\t\t\t\t\tif (n.isVisible()) {\n\t\t\t\t\t\t\tres = n;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"last\":\n\t\t\t\tcase KC.END:\n\t\t\t\t\tthis.visit(function(n) {\n\t\t\t\t\t\t// last visible node\n\t\t\t\t\t\tif (n.isVisible()) {\n\t\t\t\t\t\t\tres = n;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"left\":\n\t\t\t\tcase KC.LEFT:\n\t\t\t\t\tif (node.expanded) {\n\t\t\t\t\t\tnode.setExpanded(false);\n\t\t\t\t\t} else if (node.parent && node.parent.parent) {\n\t\t\t\t\t\tres = node.parent;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\tcase KC.RIGHT:\n\t\t\t\t\tif (!node.expanded && (node.children || node.lazy)) {\n\t\t\t\t\t\tnode.setExpanded();\n\t\t\t\t\t\tres = node;\n\t\t\t\t\t} else if (node.children && node.children.length) {\n\t\t\t\t\t\tres = node.children[0];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"up\":\n\t\t\t\tcase KC.UP:\n\t\t\t\t\tthis.visitRows(\n\t\t\t\t\t\tfunction(n) {\n\t\t\t\t\t\t\tres = n;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ start: node, reverse: true, includeSelf: false }\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"down\":\n\t\t\t\tcase KC.DOWN:\n\t\t\t\t\tthis.visitRows(\n\t\t\t\t\t\tfunction(n) {\n\t\t\t\t\t\t\tres = n;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ start: node, includeSelf: false }\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.tree.warn(\"Unknown relation '\" + where + \"'.\");\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t// TODO: fromDict\n\t\t/**\n\t\t * Generate INPUT elements that can be submitted with html forms.\n\t\t *\n\t\t * In selectMode 3 only the topmost selected nodes are considered, unless\n\t\t * `opts.stopOnParents: false` is passed.\n\t\t *\n\t\t * @example\n\t\t * // Generate input elements for active and selected nodes\n\t\t * tree.generateFormElements();\n\t\t * // Generate input elements selected nodes, using a custom `name` attribute\n\t\t * tree.generateFormElements(\"cust_sel\", false);\n\t\t * // Generate input elements using a custom filter\n\t\t * tree.generateFormElements(true, true, { filter: function(node) {\n\t\t *     return node.isSelected() && node.data.yes;\n\t\t * }});\n\t\t *\n\t\t * @param {boolean | string} [selected=true] Pass false to disable, pass a string to override the field name (default: 'ft_ID[]')\n\t\t * @param {boolean | string} [active=true] Pass false to disable, pass a string to override the field name (default: 'ft_ID_active')\n\t\t * @param {object} [opts] default { filter: null, stopOnParents: true }\n\t\t */\n\t\tgenerateFormElements: function(selected, active, opts) {\n\t\t\topts = opts || {};\n\n\t\t\tvar nodeList,\n\t\t\t\tselectedName =\n\t\t\t\t\ttypeof selected === \"string\"\n\t\t\t\t\t\t? selected\n\t\t\t\t\t\t: \"ft_\" + this._id + \"[]\",\n\t\t\t\tactiveName =\n\t\t\t\t\ttypeof active === \"string\"\n\t\t\t\t\t\t? active\n\t\t\t\t\t\t: \"ft_\" + this._id + \"_active\",\n\t\t\t\tid = \"fancytree_result_\" + this._id,\n\t\t\t\t$result = $(\"#\" + id),\n\t\t\t\tstopOnParents =\n\t\t\t\t\tthis.options.selectMode === 3 &&\n\t\t\t\t\topts.stopOnParents !== false;\n\n\t\t\tif ($result.length) {\n\t\t\t\t$result.empty();\n\t\t\t} else {\n\t\t\t\t$result = $(\"<div>\", {\n\t\t\t\t\tid: id,\n\t\t\t\t})\n\t\t\t\t\t.hide()\n\t\t\t\t\t.insertAfter(this.$container);\n\t\t\t}\n\t\t\tif (active !== false && this.activeNode) {\n\t\t\t\t$result.append(\n\t\t\t\t\t$(\"<input>\", {\n\t\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\t\tname: activeName,\n\t\t\t\t\t\tvalue: this.activeNode.key,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tfunction _appender(node) {\n\t\t\t\t$result.append(\n\t\t\t\t\t$(\"<input>\", {\n\t\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\t\tname: selectedName,\n\t\t\t\t\t\tvalue: node.key,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (opts.filter) {\n\t\t\t\tthis.visit(function(node) {\n\t\t\t\t\tvar res = opts.filter(node);\n\t\t\t\t\tif (res === \"skip\") {\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t\tif (res !== false) {\n\t\t\t\t\t\t_appender(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (selected !== false) {\n\t\t\t\tnodeList = this.getSelectedNodes(stopOnParents);\n\t\t\t\t$.each(nodeList, function(idx, node) {\n\t\t\t\t\t_appender(node);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Return the currently active node or null.\n\t\t * @returns {FancytreeNode}\n\t\t */\n\t\tgetActiveNode: function() {\n\t\t\treturn this.activeNode;\n\t\t},\n\t\t/** Return the first top level node if any (not the invisible root node).\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetFirstChild: function() {\n\t\t\treturn this.rootNode.getFirstChild();\n\t\t},\n\t\t/**\n\t\t * Return node that has keyboard focus or null.\n\t\t * @returns {FancytreeNode}\n\t\t */\n\t\tgetFocusNode: function() {\n\t\t\treturn this.focusNode;\n\t\t},\n\t\t/**\n\t\t * Return current option value.\n\t\t * (Note: this is the preferred variant of `$().fancytree(\"option\", \"KEY\")`)\n\t\t *\n\t\t * @param {string} name option name (may contain '.')\n\t\t * @returns {any}\n\t\t */\n\t\tgetOption: function(optionName) {\n\t\t\treturn this.widget.option(optionName);\n\t\t},\n\t\t/**\n\t\t * Return node with a given key or null if not found.\n\t\t *\n\t\t * @param {string} key\n\t\t * @param {FancytreeNode} [searchRoot] only search below this node\n\t\t * @returns {FancytreeNode | null}\n\t\t */\n\t\tgetNodeByKey: function(key, searchRoot) {\n\t\t\t// Search the DOM by element ID (assuming this is faster than traversing all nodes).\n\t\t\tvar el, match;\n\t\t\t// TODO: use tree.keyMap if available\n\t\t\t// TODO: check opts.generateIds === true\n\t\t\tif (!searchRoot) {\n\t\t\t\tel = document.getElementById(this.options.idPrefix + key);\n\t\t\t\tif (el) {\n\t\t\t\t\treturn el.ftnode ? el.ftnode : null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Not found in the DOM, but still may be in an unrendered part of tree\n\t\t\tsearchRoot = searchRoot || this.rootNode;\n\t\t\tmatch = null;\n\t\t\tkey = \"\" + key; // Convert to string (#1005)\n\t\t\tsearchRoot.visit(function(node) {\n\t\t\t\tif (node.key === key) {\n\t\t\t\t\tmatch = node;\n\t\t\t\t\treturn false; // Stop iteration\n\t\t\t\t}\n\t\t\t}, true);\n\t\t\treturn match;\n\t\t},\n\t\t/** Return the invisible system root node.\n\t\t * @returns {FancytreeNode}\n\t\t */\n\t\tgetRootNode: function() {\n\t\t\treturn this.rootNode;\n\t\t},\n\t\t/**\n\t\t * Return an array of selected nodes.\n\t\t *\n\t\t * Note: you cannot send this result via Ajax directly. Instead the\n\t\t * node object need to be converted to plain objects, for example\n\t\t * by using `$.map()` and `node.toDict()`.\n\t\t * @param {boolean} [stopOnParents=false] only return the topmost selected\n\t\t *     node (useful with selectMode 3)\n\t\t * @returns {FancytreeNode[]}\n\t\t */\n\t\tgetSelectedNodes: function(stopOnParents) {\n\t\t\treturn this.rootNode.getSelectedNodes(stopOnParents);\n\t\t},\n\t\t/** Return true if the tree control has keyboard focus\n\t\t * @returns {boolean}\n\t\t */\n\t\thasFocus: function() {\n\t\t\t// var ae = document.activeElement,\n\t\t\t// \thasFocus = !!(\n\t\t\t// \t\tae && $(ae).closest(\".fancytree-container\").length\n\t\t\t// \t);\n\n\t\t\t// if (hasFocus !== !!this._hasFocus) {\n\t\t\t// \tthis.warn(\n\t\t\t// \t\t\"hasFocus(): fix inconsistent container state, now: \" +\n\t\t\t// \t\t\thasFocus\n\t\t\t// \t);\n\t\t\t// \tthis._hasFocus = hasFocus;\n\t\t\t// \tthis.$container.toggleClass(\"fancytree-treefocus\", hasFocus);\n\t\t\t// }\n\t\t\t// return hasFocus;\n\t\t\treturn !!this._hasFocus;\n\t\t},\n\t\t/** Write to browser console if debugLevel >= 3 (prepending tree name)\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\tinfo: function(msg) {\n\t\t\tif (this.options.debugLevel >= 3) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"info\", arguments);\n\t\t\t}\n\t\t},\n\t\t/** Return true if any node is currently beeing loaded, i.e. a Ajax request is pending.\n\t\t * @returns {boolean}\n\t\t * @since 2.32\n\t\t */\n\t\tisLoading: function() {\n\t\t\tvar res = false;\n\n\t\t\tthis.rootNode.visit(function(n) {\n\t\t\t\t// also visit rootNode\n\t\t\t\tif (n._isLoading || n._requestId) {\n\t\t\t\t\tres = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}, true);\n\t\t\treturn res;\n\t\t},\n\t\t/*\n\t\tTODO: isInitializing: function() {\n\t\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" );\n\t\t},\n\t\tTODO: isReloading: function() {\n\t\t\treturn ( this.phase==\"init\" || this.phase==\"postInit\" ) && this.options.persist && this.persistence.cookiesFound;\n\t\t},\n\t\tTODO: isUserEvent: function() {\n\t\t\treturn ( this.phase==\"userEvent\" );\n\t\t},\n\t\t*/\n\n\t\t/**\n\t\t * Make sure that a node with a given ID is loaded, by traversing - and\n\t\t * loading - its parents. This method is meant for lazy hierarchies.\n\t\t * A callback is executed for every node as we go.\n\t\t * @example\n\t\t * // Resolve using node.key:\n\t\t * tree.loadKeyPath(\"/_3/_23/_26/_27\", function(node, status){\n\t\t *   if(status === \"loaded\") {\n\t\t *     console.log(\"loaded intermediate node \" + node);\n\t\t *   }else if(status === \"ok\") {\n\t\t *     node.activate();\n\t\t *   }\n\t\t * });\n\t\t * // Use deferred promise:\n\t\t * tree.loadKeyPath(\"/_3/_23/_26/_27\").progress(function(data){\n\t\t *   if(data.status === \"loaded\") {\n\t\t *     console.log(\"loaded intermediate node \" + data.node);\n\t\t *   }else if(data.status === \"ok\") {\n\t\t *     node.activate();\n\t\t *   }\n\t\t * }).done(function(){\n\t\t *    ...\n\t\t * });\n\t\t * // Custom path segment resolver:\n\t\t * tree.loadKeyPath(\"/321/431/21/2\", {\n\t\t *   matchKey: function(node, key){\n\t\t *     return node.data.refKey === key;\n\t\t *   },\n\t\t *   callback: function(node, status){\n\t\t *     if(status === \"loaded\") {\n\t\t *       console.log(\"loaded intermediate node \" + node);\n\t\t *     }else if(status === \"ok\") {\n\t\t *       node.activate();\n\t\t *     }\n\t\t *   }\n\t\t * });\n\t\t * @param {string | string[]} keyPathList one or more key paths (e.g. '/3/2_1/7')\n\t\t * @param {function | object} optsOrCallback callback(node, status) is called for every visited node ('loading', 'loaded', 'ok', 'error').\n\t\t *     Pass an object to define custom key matchers for the path segments: {callback: function, matchKey: function}.\n\t\t * @returns {$.Promise}\n\t\t */\n\t\tloadKeyPath: function(keyPathList, optsOrCallback) {\n\t\t\tvar callback,\n\t\t\t\ti,\n\t\t\t\tpath,\n\t\t\t\tself = this,\n\t\t\t\tdfd = new $.Deferred(),\n\t\t\t\tparent = this.getRootNode(),\n\t\t\t\tsep = this.options.keyPathSeparator,\n\t\t\t\tpathSegList = [],\n\t\t\t\topts = $.extend({}, optsOrCallback);\n\n\t\t\t// Prepare options\n\t\t\tif (typeof optsOrCallback === \"function\") {\n\t\t\t\tcallback = optsOrCallback;\n\t\t\t} else if (optsOrCallback && optsOrCallback.callback) {\n\t\t\t\tcallback = optsOrCallback.callback;\n\t\t\t}\n\t\t\topts.callback = function(ctx, node, status) {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.call(ctx, node, status);\n\t\t\t\t}\n\t\t\t\tdfd.notifyWith(ctx, [{ node: node, status: status }]);\n\t\t\t};\n\t\t\tif (opts.matchKey == null) {\n\t\t\t\topts.matchKey = function(node, key) {\n\t\t\t\t\treturn node.key === key;\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Convert array of path strings to array of segment arrays\n\t\t\tif (!$.isArray(keyPathList)) {\n\t\t\t\tkeyPathList = [keyPathList];\n\t\t\t}\n\t\t\tfor (i = 0; i < keyPathList.length; i++) {\n\t\t\t\tpath = keyPathList[i];\n\t\t\t\t// strip leading slash\n\t\t\t\tif (path.charAt(0) === sep) {\n\t\t\t\t\tpath = path.substr(1);\n\t\t\t\t}\n\t\t\t\t// segListMap[path] = { parent: parent, segList: path.split(sep) };\n\t\t\t\tpathSegList.push(path.split(sep));\n\t\t\t\t// targetList.push({ parent: parent, segList: path.split(sep)/* , path: path*/});\n\t\t\t}\n\t\t\t// The timeout forces async behavior always (even if nodes are all loaded)\n\t\t\t// This way a potential progress() event will fire.\n\t\t\tsetTimeout(function() {\n\t\t\t\tself._loadKeyPathImpl(dfd, opts, parent, pathSegList).done(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tdfd.resolve();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}, 0);\n\t\t\treturn dfd.promise();\n\t\t},\n\t\t/*\n\t\t * Resolve a list of paths, relative to one parent node.\n\t\t */\n\t\t_loadKeyPathImpl: function(dfd, opts, parent, pathSegList) {\n\t\t\tvar deferredList,\n\t\t\t\ti,\n\t\t\t\tkey,\n\t\t\t\tnode,\n\t\t\t\tnodeKey,\n\t\t\t\tremain,\n\t\t\t\tremainMap,\n\t\t\t\ttmpParent,\n\t\t\t\tsegList,\n\t\t\t\tsubDfd,\n\t\t\t\tself = this;\n\n\t\t\tfunction __findChild(parent, key) {\n\t\t\t\t// console.log(\"__findChild\", key, parent);\n\t\t\t\tvar i,\n\t\t\t\t\tl,\n\t\t\t\t\tcl = parent.children;\n\n\t\t\t\tif (cl) {\n\t\t\t\t\tfor (i = 0, l = cl.length; i < l; i++) {\n\t\t\t\t\t\tif (opts.matchKey(cl[i], key)) {\n\t\t\t\t\t\t\treturn cl[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// console.log(\"_loadKeyPathImpl, parent=\", parent, \", pathSegList=\", pathSegList);\n\n\t\t\t// Pass 1:\n\t\t\t// Handle all path segments for nodes that are already loaded.\n\t\t\t// Collect distinct top-most lazy nodes in a map.\n\t\t\t// Note that we can use node.key to de-dupe entries, even if a custom matcher would\n\t\t\t// look for other node attributes.\n\t\t\t// map[node.key] => {node: node, pathList: [list of remaining rest-paths]}\n\t\t\tremainMap = {};\n\n\t\t\tfor (i = 0; i < pathSegList.length; i++) {\n\t\t\t\tsegList = pathSegList[i];\n\t\t\t\t// target = targetList[i];\n\n\t\t\t\t// Traverse and pop path segments (i.e. keys), until we hit a lazy, unloaded node\n\t\t\t\ttmpParent = parent;\n\t\t\t\twhile (segList.length) {\n\t\t\t\t\tkey = segList.shift();\n\t\t\t\t\tnode = __findChild(tmpParent, key);\n\t\t\t\t\tif (!node) {\n\t\t\t\t\t\tthis.warn(\n\t\t\t\t\t\t\t\"loadKeyPath: key not found: \" +\n\t\t\t\t\t\t\t\tkey +\n\t\t\t\t\t\t\t\t\" (parent: \" +\n\t\t\t\t\t\t\t\ttmpParent +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\topts.callback(this, key, \"error\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (segList.length === 0) {\n\t\t\t\t\t\topts.callback(this, node, \"ok\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (!node.lazy || node.hasChildren() !== undefined) {\n\t\t\t\t\t\topts.callback(this, node, \"loaded\");\n\t\t\t\t\t\ttmpParent = node;\n\t\t\t\t\t} else {\n\t\t\t\t\t\topts.callback(this, node, \"loaded\");\n\t\t\t\t\t\tkey = node.key; //target.segList.join(sep);\n\t\t\t\t\t\tif (remainMap[key]) {\n\t\t\t\t\t\t\tremainMap[key].pathSegList.push(segList);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tremainMap[key] = {\n\t\t\t\t\t\t\t\tparent: node,\n\t\t\t\t\t\t\t\tpathSegList: [segList],\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// console.log(\"_loadKeyPathImpl AFTER pass 1, remainMap=\", remainMap);\n\n\t\t\t// Now load all lazy nodes and continue iteration for remaining paths\n\t\t\tdeferredList = [];\n\n\t\t\t// Avoid jshint warning 'Don't make functions within a loop.':\n\t\t\tfunction __lazyload(dfd, parent, pathSegList) {\n\t\t\t\t// console.log(\"__lazyload\", parent, \"pathSegList=\", pathSegList);\n\t\t\t\topts.callback(self, parent, \"loading\");\n\t\t\t\tparent\n\t\t\t\t\t.load()\n\t\t\t\t\t.done(function() {\n\t\t\t\t\t\tself._loadKeyPathImpl\n\t\t\t\t\t\t\t.call(self, dfd, opts, parent, pathSegList)\n\t\t\t\t\t\t\t.always(_makeResolveFunc(dfd, self));\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(errMsg) {\n\t\t\t\t\t\tself.warn(\"loadKeyPath: error loading lazy \" + parent);\n\t\t\t\t\t\topts.callback(self, node, \"error\");\n\t\t\t\t\t\tdfd.rejectWith(self);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t// remainMap contains parent nodes, each with a list of relative sub-paths.\n\t\t\t// We start loading all of them now, and pass the the list to each loader.\n\t\t\tfor (nodeKey in remainMap) {\n\t\t\t\tif (remainMap.hasOwnProperty(nodeKey)) {\n\t\t\t\t\tremain = remainMap[nodeKey];\n\t\t\t\t\t// console.log(\"for(): remain=\", remain, \"remainMap=\", remainMap);\n\t\t\t\t\t// key = remain.segList.shift();\n\t\t\t\t\t// node = __findChild(remain.parent, key);\n\t\t\t\t\t// if (node == null) {  // #576\n\t\t\t\t\t// \t// Issue #576, refactored for v2.27:\n\t\t\t\t\t// \t// The root cause was, that sometimes the wrong parent was used here\n\t\t\t\t\t// \t// to find the next segment.\n\t\t\t\t\t// \t// Falling back to getNodeByKey() was a hack that no longer works if a custom\n\t\t\t\t\t// \t// matcher is used, because we cannot assume that a single segment-key is unique\n\t\t\t\t\t// \t// throughout the tree.\n\t\t\t\t\t// \tself.error(\"loadKeyPath: error loading child by key '\" + key + \"' (parent: \" + target.parent + \")\", target);\n\t\t\t\t\t// \t// \tnode = self.getNodeByKey(key);\n\t\t\t\t\t// \tcontinue;\n\t\t\t\t\t// }\n\t\t\t\t\tsubDfd = new $.Deferred();\n\t\t\t\t\tdeferredList.push(subDfd);\n\t\t\t\t\t__lazyload(subDfd, remain.parent, remain.pathSegList);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Return a promise that is resolved, when ALL paths were loaded\n\t\t\treturn $.when.apply($, deferredList).promise();\n\t\t},\n\t\t/** Re-fire beforeActivate, activate, and (optional) focus events.\n\t\t * Calling this method in the `init` event, will activate the node that\n\t\t * was marked 'active' in the source data, and optionally set the keyboard\n\t\t * focus.\n\t\t * @param [setFocus=false]\n\t\t */\n\t\treactivate: function(setFocus) {\n\t\t\tvar res,\n\t\t\t\tnode = this.activeNode;\n\n\t\t\tif (!node) {\n\t\t\t\treturn _getResolvedPromise();\n\t\t\t}\n\t\t\tthis.activeNode = null; // Force re-activating\n\t\t\tres = node.setActive(true, { noFocus: true });\n\t\t\tif (setFocus) {\n\t\t\t\tnode.setFocus();\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t/** Reload tree from source and return a promise.\n\t\t * @param [source] optional new source (defaults to initial source data)\n\t\t * @returns {$.Promise}\n\t\t */\n\t\treload: function(source) {\n\t\t\tthis._callHook(\"treeClear\", this);\n\t\t\treturn this._callHook(\"treeLoad\", this, source);\n\t\t},\n\t\t/**Render tree (i.e. create DOM elements for all top-level nodes).\n\t\t * @param {boolean} [force=false] create DOM elemnts, even if parent is collapsed\n\t\t * @param {boolean} [deep=false]\n\t\t */\n\t\trender: function(force, deep) {\n\t\t\treturn this.rootNode.render(force, deep);\n\t\t},\n\t\t/**(De)select all nodes.\n\t\t * @param {boolean} [flag=true]\n\t\t * @since 2.28\n\t\t */\n\t\tselectAll: function(flag) {\n\t\t\tthis.visit(function(node) {\n\t\t\t\tnode.setSelected(flag);\n\t\t\t});\n\t\t},\n\t\t// TODO: selectKey: function(key, select)\n\t\t// TODO: serializeArray: function(stopOnParents)\n\t\t/**\n\t\t * @param {boolean} [flag=true]\n\t\t */\n\t\tsetFocus: function(flag) {\n\t\t\treturn this._callHook(\"treeSetFocus\", this, flag);\n\t\t},\n\t\t/**\n\t\t * Set current option value.\n\t\t * (Note: this is the preferred variant of `$().fancytree(\"option\", \"KEY\", VALUE)`)\n\t\t * @param {string} name option name (may contain '.')\n\t\t * @param {any} new value\n\t\t */\n\t\tsetOption: function(optionName, value) {\n\t\t\treturn this.widget.option(optionName, value);\n\t\t},\n\t\t/**\n\t\t * Call console.time() when in debug mode (verbose >= 4).\n\t\t *\n\t\t * @param {string} label\n\t\t */\n\t\tdebugTime: function(label) {\n\t\t\tif (this.options.debugLevel >= 4) {\n\t\t\t\twindow.console.time(this + \" - \" + label);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Call console.timeEnd() when in debug mode (verbose >= 4).\n\t\t *\n\t\t * @param {string} label\n\t\t */\n\t\tdebugTimeEnd: function(label) {\n\t\t\tif (this.options.debugLevel >= 4) {\n\t\t\t\twindow.console.timeEnd(this + \" - \" + label);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Return all nodes as nested list of {@link NodeData}.\n\t\t *\n\t\t * @param {boolean} [includeRoot=false] Returns the hidden system root node (and its children)\n\t\t * @param {function} [callback] callback(dict, node) is called for every node, in order to allow modifications.\n\t\t *     Return `false` to ignore this node or \"skip\" to include this node without its children.\n\t\t * @returns {Array | object}\n\t\t * @see FancytreeNode#toDict\n\t\t */\n\t\ttoDict: function(includeRoot, callback) {\n\t\t\tvar res = this.rootNode.toDict(true, callback);\n\t\t\treturn includeRoot ? res : res.children;\n\t\t},\n\t\t/* Implicitly called for string conversions.\n\t\t * @returns {string}\n\t\t */\n\t\ttoString: function() {\n\t\t\treturn \"Fancytree@\" + this._id;\n\t\t\t// return \"<Fancytree(#\" + this._id + \")>\";\n\t\t},\n\t\t/* _trigger a widget event with additional node ctx.\n\t\t * @see EventData\n\t\t */\n\t\t_triggerNodeEvent: function(type, node, originalEvent, extra) {\n\t\t\t// this.debug(\"_trigger(\" + type + \"): '\" + ctx.node.title + \"'\", ctx);\n\t\t\tvar ctx = this._makeHookContext(node, originalEvent, extra),\n\t\t\t\tres = this.widget._trigger(type, originalEvent, ctx);\n\t\t\tif (res !== false && ctx.result !== undefined) {\n\t\t\t\treturn ctx.result;\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t/* _trigger a widget event with additional tree data. */\n\t\t_triggerTreeEvent: function(type, originalEvent, extra) {\n\t\t\t// this.debug(\"_trigger(\" + type + \")\", ctx);\n\t\t\tvar ctx = this._makeHookContext(this, originalEvent, extra),\n\t\t\t\tres = this.widget._trigger(type, originalEvent, ctx);\n\n\t\t\tif (res !== false && ctx.result !== undefined) {\n\t\t\t\treturn ctx.result;\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\t/** Call fn(node) for all nodes in hierarchical order (depth-first).\n\t\t *\n\t\t * @param {function} fn the callback function.\n\t\t *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n\t\t * @returns {boolean} false, if the iterator was stopped.\n\t\t */\n\t\tvisit: function(fn) {\n\t\t\treturn this.rootNode.visit(fn, false);\n\t\t},\n\t\t/** Call fn(node) for all nodes in vertical order, top down (or bottom up).<br>\n\t\t * Stop iteration, if fn() returns false.<br>\n\t\t * Return false if iteration was stopped.\n\t\t *\n\t\t * @param {function} fn the callback function.\n\t\t *     Return false to stop iteration, return \"skip\" to skip this node and children only.\n\t\t * @param {object} [options]\n\t\t *     Defaults:\n\t\t *     {start: First top node, reverse: false, includeSelf: true, includeHidden: false}\n\t\t * @returns {boolean} false if iteration was cancelled\n\t\t * @since 2.28\n\t\t */\n\t\tvisitRows: function(fn, opts) {\n\t\t\tif (!this.rootNode.hasChildren()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (opts && opts.reverse) {\n\t\t\t\tdelete opts.reverse;\n\t\t\t\treturn this._visitRowsUp(fn, opts);\n\t\t\t}\n\t\t\topts = opts || {};\n\n\t\t\tvar i,\n\t\t\t\tnextIdx,\n\t\t\t\tparent,\n\t\t\t\tres,\n\t\t\t\tsiblings,\n\t\t\t\tsiblingOfs = 0,\n\t\t\t\tskipFirstNode = opts.includeSelf === false,\n\t\t\t\tincludeHidden = !!opts.includeHidden,\n\t\t\t\tcheckFilter = !includeHidden && this.enableFilter,\n\t\t\t\tnode = opts.start || this.rootNode.children[0];\n\n\t\t\tparent = node.parent;\n\t\t\twhile (parent) {\n\t\t\t\t// visit siblings\n\t\t\t\tsiblings = parent.children;\n\t\t\t\tnextIdx = siblings.indexOf(node) + siblingOfs;\n\n\t\t\t\tfor (i = nextIdx; i < siblings.length; i++) {\n\t\t\t\t\tnode = siblings[i];\n\t\t\t\t\tif (checkFilter && !node.match && !node.subMatchCount) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!skipFirstNode && fn(node) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tskipFirstNode = false;\n\t\t\t\t\t// Dive into node's child nodes\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.children &&\n\t\t\t\t\t\tnode.children.length &&\n\t\t\t\t\t\t(includeHidden || node.expanded)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Disable warning: Functions declared within loops referencing an outer\n\t\t\t\t\t\t// scoped variable may lead to confusing semantics:\n\t\t\t\t\t\t/*jshint -W083 */\n\t\t\t\t\t\tres = node.visit(function(n) {\n\t\t\t\t\t\t\tif (checkFilter && !n.match && !n.subMatchCount) {\n\t\t\t\t\t\t\t\treturn \"skip\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (fn(n) === false) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!includeHidden && n.children && !n.expanded) {\n\t\t\t\t\t\t\t\treturn \"skip\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t/*jshint +W083 */\n\t\t\t\t\t\tif (res === false) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Visit parent nodes (bottom up)\n\t\t\t\tnode = parent;\n\t\t\t\tparent = parent.parent;\n\t\t\t\tsiblingOfs = 1; //\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\t/* Call fn(node) for all nodes in vertical order, bottom up.\n\t\t */\n\t\t_visitRowsUp: function(fn, opts) {\n\t\t\tvar children,\n\t\t\t\tidx,\n\t\t\t\tparent,\n\t\t\t\tincludeHidden = !!opts.includeHidden,\n\t\t\t\tnode = opts.start || this.rootNode.children[0];\n\n\t\t\twhile (true) {\n\t\t\t\tparent = node.parent;\n\t\t\t\tchildren = parent.children;\n\n\t\t\t\tif (children[0] === node) {\n\t\t\t\t\t// If this is already the first sibling, goto parent\n\t\t\t\t\tnode = parent;\n\t\t\t\t\tif (!node.parent) {\n\t\t\t\t\t\tbreak; // first node of the tree\n\t\t\t\t\t}\n\t\t\t\t\tchildren = parent.children;\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, goto prev. sibling\n\t\t\t\t\tidx = children.indexOf(node);\n\t\t\t\t\tnode = children[idx - 1];\n\t\t\t\t\t// If the prev. sibling has children, follow down to last descendant\n\t\t\t\t\twhile (\n\t\t\t\t\t\t// See: https://github.com/eslint/eslint/issues/11302\n\t\t\t\t\t\t// eslint-disable-next-line no-unmodified-loop-condition\n\t\t\t\t\t\t(includeHidden || node.expanded) &&\n\t\t\t\t\t\tnode.children &&\n\t\t\t\t\t\tnode.children.length\n\t\t\t\t\t) {\n\t\t\t\t\t\tchildren = node.children;\n\t\t\t\t\t\tparent = node;\n\t\t\t\t\t\tnode = children[children.length - 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Skip invisible\n\t\t\t\tif (!includeHidden && !node.isVisible()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (fn(node) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/** Write warning to browser console if debugLevel >= 2 (prepending tree info)\n\t\t *\n\t\t * @param {*} msg string or object or array of such\n\t\t */\n\t\twarn: function(msg) {\n\t\t\tif (this.options.debugLevel >= 2) {\n\t\t\t\tArray.prototype.unshift.call(arguments, this.toString());\n\t\t\t\tconsoleApply(\"warn\", arguments);\n\t\t\t}\n\t\t},\n\t};\n\n\t/**\n\t * These additional methods of the {@link Fancytree} class are 'hook functions'\n\t * that can be used and overloaded by extensions.\n\t *\n\t * @see [writing extensions](https://github.com/mar10/fancytree/wiki/TutorialExtensions)\n\t * @mixin Fancytree_Hooks\n\t */\n\t$.extend(\n\t\tFancytree.prototype,\n\t\t/** @lends Fancytree_Hooks# */\n\t\t{\n\t\t\t/** Default handling for mouse click events.\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeClick: function(ctx) {\n\t\t\t\tvar activate,\n\t\t\t\t\texpand,\n\t\t\t\t\t// event = ctx.originalEvent,\n\t\t\t\t\ttargetType = ctx.targetType,\n\t\t\t\t\tnode = ctx.node;\n\n\t\t\t\t// this.debug(\"ftnode.onClick(\" + event.type + \"): ftnode:\" + this + \", button:\" + event.button + \", which: \" + event.which, ctx);\n\t\t\t\t// TODO: use switch\n\t\t\t\t// TODO: make sure clicks on embedded <input> doesn't steal focus (see table sample)\n\t\t\t\tif (targetType === \"expander\") {\n\t\t\t\t\tif (node.isLoading()) {\n\t\t\t\t\t\t// #495: we probably got a click event while a lazy load is pending.\n\t\t\t\t\t\t// The 'expanded' state is not yet set, so 'toggle' would expand\n\t\t\t\t\t\t// and trigger lazyLoad again.\n\t\t\t\t\t\t// It would be better to allow to collapse/expand the status node\n\t\t\t\t\t\t// while loading (instead of ignoring), but that would require some\n\t\t\t\t\t\t// more work.\n\t\t\t\t\t\tnode.debug(\"Got 2nd click while loading: ignored\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Clicking the expander icon always expands/collapses\n\t\t\t\t\tthis._callHook(\"nodeToggleExpanded\", ctx);\n\t\t\t\t} else if (targetType === \"checkbox\") {\n\t\t\t\t\t// Clicking the checkbox always (de)selects\n\t\t\t\t\tthis._callHook(\"nodeToggleSelected\", ctx);\n\t\t\t\t\tif (ctx.options.focusOnSelect) {\n\t\t\t\t\t\t// #358\n\t\t\t\t\t\tthis._callHook(\"nodeSetFocus\", ctx, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Honor `clickFolderMode` for\n\t\t\t\t\texpand = false;\n\t\t\t\t\tactivate = true;\n\t\t\t\t\tif (node.folder) {\n\t\t\t\t\t\tswitch (ctx.options.clickFolderMode) {\n\t\t\t\t\t\t\tcase 2: // expand only\n\t\t\t\t\t\t\t\texpand = true;\n\t\t\t\t\t\t\t\tactivate = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3: // expand and activate\n\t\t\t\t\t\t\t\tactivate = true;\n\t\t\t\t\t\t\t\texpand = true; //!node.isExpanded();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t// else 1 or 4: just activate\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (activate) {\n\t\t\t\t\t\tthis.nodeSetFocus(ctx);\n\t\t\t\t\t\tthis._callHook(\"nodeSetActive\", ctx, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (expand) {\n\t\t\t\t\t\tif (!activate) {\n\t\t\t\t\t\t\t// this._callHook(\"nodeSetFocus\", ctx);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// this._callHook(\"nodeSetExpanded\", ctx, true);\n\t\t\t\t\t\tthis._callHook(\"nodeToggleExpanded\", ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Make sure that clicks stop, otherwise <a href='#'> jumps to the top\n\t\t\t\t// if(event.target.localName === \"a\" && event.target.className === \"fancytree-title\"){\n\t\t\t\t// \tevent.preventDefault();\n\t\t\t\t// }\n\t\t\t\t// TODO: return promise?\n\t\t\t},\n\t\t\t/** Collapse all other  children of same parent.\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {object} callOpts\n\t\t\t */\n\t\t\tnodeCollapseSiblings: function(ctx, callOpts) {\n\t\t\t\t// TODO: return promise?\n\t\t\t\tvar ac,\n\t\t\t\t\ti,\n\t\t\t\t\tl,\n\t\t\t\t\tnode = ctx.node;\n\n\t\t\t\tif (node.parent) {\n\t\t\t\t\tac = node.parent.children;\n\t\t\t\t\tfor (i = 0, l = ac.length; i < l; i++) {\n\t\t\t\t\t\tif (ac[i] !== node && ac[i].expanded) {\n\t\t\t\t\t\t\tthis._callHook(\n\t\t\t\t\t\t\t\t\"nodeSetExpanded\",\n\t\t\t\t\t\t\t\tac[i],\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tcallOpts\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Default handling for mouse douleclick events.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeDblclick: function(ctx) {\n\t\t\t\t// TODO: return promise?\n\t\t\t\tif (\n\t\t\t\t\tctx.targetType === \"title\" &&\n\t\t\t\t\tctx.options.clickFolderMode === 4\n\t\t\t\t) {\n\t\t\t\t\t// this.nodeSetFocus(ctx);\n\t\t\t\t\t// this._callHook(\"nodeSetActive\", ctx, true);\n\t\t\t\t\tthis._callHook(\"nodeToggleExpanded\", ctx);\n\t\t\t\t}\n\t\t\t\t// TODO: prevent text selection on dblclicks\n\t\t\t\tif (ctx.targetType === \"title\") {\n\t\t\t\t\tctx.originalEvent.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Default handling for mouse keydown events.\n\t\t\t *\n\t\t\t * NOTE: this may be called with node == null if tree (but no node) has focus.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeKeydown: function(ctx) {\n\t\t\t\t// TODO: return promise?\n\t\t\t\tvar matchNode,\n\t\t\t\t\tstamp,\n\t\t\t\t\t_res,\n\t\t\t\t\tfocusNode,\n\t\t\t\t\tevent = ctx.originalEvent,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\twhich = event.which,\n\t\t\t\t\t// #909: Use event.key, to get unicode characters.\n\t\t\t\t\t// We can't use `/\\w/.test(key)`, because that would\n\t\t\t\t\t// only detect plain ascii alpha-numerics. But we still need\n\t\t\t\t\t// to ignore modifier-only, whitespace, cursor-keys, etc.\n\t\t\t\t\tkey = event.key || String.fromCharCode(which),\n\t\t\t\t\tspecialModifiers = !!(\n\t\t\t\t\t\tevent.altKey ||\n\t\t\t\t\t\tevent.ctrlKey ||\n\t\t\t\t\t\tevent.metaKey\n\t\t\t\t\t),\n\t\t\t\t\tisAlnum =\n\t\t\t\t\t\t!MODIFIERS[which] &&\n\t\t\t\t\t\t!SPECIAL_KEYCODES[which] &&\n\t\t\t\t\t\t!specialModifiers,\n\t\t\t\t\t$target = $(event.target),\n\t\t\t\t\thandled = true,\n\t\t\t\t\tactivate = !(event.ctrlKey || !opts.autoActivate);\n\n\t\t\t\t// (node || FT).debug(\"ftnode.nodeKeydown(\" + event.type + \"): ftnode:\" + this + \", charCode:\" + event.charCode + \", keyCode: \" + event.keyCode + \", which: \" + event.which);\n\t\t\t\t// FT.debug( \"eventToString(): \" + FT.eventToString(event) + \", key='\" + key + \"', isAlnum: \" + isAlnum );\n\n\t\t\t\t// Set focus to active (or first node) if no other node has the focus yet\n\t\t\t\tif (!node) {\n\t\t\t\t\tfocusNode = this.getActiveNode() || this.getFirstChild();\n\t\t\t\t\tif (focusNode) {\n\t\t\t\t\t\tfocusNode.setFocus();\n\t\t\t\t\t\tnode = ctx.node = this.focusNode;\n\t\t\t\t\t\tnode.debug(\"Keydown force focus on active node\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\topts.quicksearch &&\n\t\t\t\t\tisAlnum &&\n\t\t\t\t\t!$target.is(\":input:enabled\")\n\t\t\t\t) {\n\t\t\t\t\t// Allow to search for longer streaks if typed in quickly\n\t\t\t\t\tstamp = Date.now();\n\t\t\t\t\tif (stamp - tree.lastQuicksearchTime > 500) {\n\t\t\t\t\t\ttree.lastQuicksearchTerm = \"\";\n\t\t\t\t\t}\n\t\t\t\t\ttree.lastQuicksearchTime = stamp;\n\t\t\t\t\ttree.lastQuicksearchTerm += key;\n\t\t\t\t\t// tree.debug(\"quicksearch find\", tree.lastQuicksearchTerm);\n\t\t\t\t\tmatchNode = tree.findNextNode(\n\t\t\t\t\t\ttree.lastQuicksearchTerm,\n\t\t\t\t\t\ttree.getActiveNode()\n\t\t\t\t\t);\n\t\t\t\t\tif (matchNode) {\n\t\t\t\t\t\tmatchNode.setActive();\n\t\t\t\t\t}\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tswitch (FT.eventToString(event)) {\n\t\t\t\t\tcase \"+\":\n\t\t\t\t\tcase \"=\": // 187: '+' @ Chrome, Safari\n\t\t\t\t\t\ttree.nodeSetExpanded(ctx, true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"-\":\n\t\t\t\t\t\ttree.nodeSetExpanded(ctx, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"space\":\n\t\t\t\t\t\tif (node.isPagingNode()) {\n\t\t\t\t\t\t\ttree._triggerNodeEvent(\"clickPaging\", ctx, event);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tFT.evalOption(\"checkbox\", node, node, opts, false)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// #768\n\t\t\t\t\t\t\ttree.nodeToggleSelected(ctx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttree.nodeSetActive(ctx, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"return\":\n\t\t\t\t\t\ttree.nodeSetActive(ctx, true);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"home\":\n\t\t\t\t\tcase \"end\":\n\t\t\t\t\tcase \"backspace\":\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\tcase \"up\":\n\t\t\t\t\tcase \"down\":\n\t\t\t\t\t\t_res = node.navigate(event.which, activate);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\thandled = false;\n\t\t\t\t}\n\t\t\t\tif (handled) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// /** Default handling for mouse keypress events. */\n\t\t\t// nodeKeypress: function(ctx) {\n\t\t\t//     var event = ctx.originalEvent;\n\t\t\t// },\n\n\t\t\t// /** Trigger lazyLoad event (async). */\n\t\t\t// nodeLazyLoad: function(ctx) {\n\t\t\t//     var node = ctx.node;\n\t\t\t//     if(this._triggerNodeEvent())\n\t\t\t// },\n\t\t\t/** Load child nodes (async).\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {object[]|object|string|$.Promise|function} source\n\t\t\t * @returns {$.Promise} The deferred will be resolved as soon as the (ajax)\n\t\t\t *     data was rendered.\n\t\t\t */\n\t\t\tnodeLoadChildren: function(ctx, source) {\n\t\t\t\tvar ajax,\n\t\t\t\t\tdelay,\n\t\t\t\t\tajaxDfd = null,\n\t\t\t\t\tresultDfd,\n\t\t\t\t\tisAsync = true,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\tnodePrevParent = node.parent,\n\t\t\t\t\ttag = \"nodeLoadChildren\",\n\t\t\t\t\trequestId = Date.now();\n\n\t\t\t\t// `source` is a callback: use the returned result instead:\n\t\t\t\tif ($.isFunction(source)) {\n\t\t\t\t\tsource = source.call(tree, { type: \"source\" }, ctx);\n\t\t\t\t\t_assert(\n\t\t\t\t\t\t!$.isFunction(source),\n\t\t\t\t\t\t\"source callback must not return another function\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// `source` is already a promise:\n\t\t\t\tif ($.isFunction(source.then)) {\n\t\t\t\t\t// _assert($.isFunction(source.always), \"Expected jQuery?\");\n\t\t\t\t\tajaxDfd = source;\n\t\t\t\t} else if (source.url) {\n\t\t\t\t\t// `source` is an Ajax options object\n\t\t\t\t\tajax = $.extend({}, ctx.options.ajax, source);\n\t\t\t\t\tif (ajax.debugDelay) {\n\t\t\t\t\t\t// Simulate a slow server\n\t\t\t\t\t\tdelay = ajax.debugDelay;\n\t\t\t\t\t\tdelete ajax.debugDelay; // remove debug option\n\t\t\t\t\t\tif ($.isArray(delay)) {\n\t\t\t\t\t\t\t// random delay range [min..max]\n\t\t\t\t\t\t\tdelay =\n\t\t\t\t\t\t\t\tdelay[0] +\n\t\t\t\t\t\t\t\tMath.random() * (delay[1] - delay[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\t\"nodeLoadChildren waiting debugDelay \" +\n\t\t\t\t\t\t\t\tMath.round(delay) +\n\t\t\t\t\t\t\t\t\" ms ...\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tajaxDfd = $.Deferred(function(ajaxDfd) {\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t$.ajax(ajax)\n\t\t\t\t\t\t\t\t\t.done(function() {\n\t\t\t\t\t\t\t\t\t\tajaxDfd.resolveWith(this, arguments);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.fail(function() {\n\t\t\t\t\t\t\t\t\t\tajaxDfd.rejectWith(this, arguments);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, delay);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tajaxDfd = $.ajax(ajax);\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isPlainObject(source) || $.isArray(source)) {\n\t\t\t\t\t// `source` is already a constant dict or list, but we convert\n\t\t\t\t\t// to a thenable for unified processing.\n\t\t\t\t\t// 2020-01-03: refactored.\n\t\t\t\t\t// `ajaxDfd = $.when(source)` would do the trick, but the returned\n\t\t\t\t\t// promise will resolve async, which broke some tests and\n\t\t\t\t\t// would probably also break current implementations out there.\n\t\t\t\t\t// So we mock-up a thenable that resolves synchronously:\n\t\t\t\t\tajaxDfd = {\n\t\t\t\t\t\tthen: function(resolve, reject) {\n\t\t\t\t\t\t\tresolve(source, null, null);\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tisAsync = false;\n\t\t\t\t} else {\n\t\t\t\t\t$.error(\"Invalid source type: \" + source);\n\t\t\t\t}\n\n\t\t\t\t// Check for overlapping requests\n\t\t\t\tif (node._requestId) {\n\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\"Recursive load request #\" +\n\t\t\t\t\t\t\trequestId +\n\t\t\t\t\t\t\t\" while #\" +\n\t\t\t\t\t\t\tnode._requestId +\n\t\t\t\t\t\t\t\" is pending.\"\n\t\t\t\t\t);\n\t\t\t\t\tnode._requestId = requestId;\n\t\t\t\t\t// \tnode.debug(\"Send load request #\" + requestId);\n\t\t\t\t}\n\n\t\t\t\tif (isAsync) {\n\t\t\t\t\ttree.debugTime(tag);\n\t\t\t\t\ttree.nodeSetStatus(ctx, \"loading\");\n\t\t\t\t}\n\n\t\t\t\t// The async Ajax request has now started...\n\t\t\t\t// Defer the deferred:\n\t\t\t\t// we want to be able to reject invalid responses, even if\n\t\t\t\t// the raw HTTP Ajax XHR resolved as Ok.\n\t\t\t\t// We use the ajaxDfd.then() syntax here, which is compatible with\n\t\t\t\t// jQuery and ECMA6.\n\t\t\t\t// However resultDfd is a jQuery deferred, which is currently the\n\t\t\t\t// expected result type of nodeLoadChildren()\n\t\t\t\tresultDfd = new $.Deferred();\n\t\t\t\tajaxDfd.then(\n\t\t\t\t\tfunction(data, textStatus, jqXHR) {\n\t\t\t\t\t\t// ajaxDfd was resolved, but we reject or resolve resultDfd\n\t\t\t\t\t\t// depending on the response data\n\t\t\t\t\t\tvar errorObj, res;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(source.dataType === \"json\" ||\n\t\t\t\t\t\t\t\tsource.dataType === \"jsonp\") &&\n\t\t\t\t\t\t\ttypeof data === \"string\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t$.error(\n\t\t\t\t\t\t\t\t\"Ajax request returned a string (did you get the JSON dataType wrong?).\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node._requestId && node._requestId > requestId) {\n\t\t\t\t\t\t\t// The expected request time stamp is later than `requestId`\n\t\t\t\t\t\t\t// (which was kept as as closure variable to this handler function)\n\t\t\t\t\t\t\t// node.warn(\"Ignored load response for obsolete request #\" + requestId + \" (expected #\" + node._requestId + \")\");\n\t\t\t\t\t\t\tresultDfd.rejectWith(this, [\n\t\t\t\t\t\t\t\tRECURSIVE_REQUEST_ERROR,\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t// \tnode.debug(\"Response returned for load request #\" + requestId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node.parent === null && nodePrevParent !== null) {\n\t\t\t\t\t\t\tresultDfd.rejectWith(this, [\n\t\t\t\t\t\t\t\tINVALID_REQUEST_TARGET_ERROR,\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Allow to adjust the received response data in the `postProcess` event.\n\t\t\t\t\t\tif (ctx.options.postProcess) {\n\t\t\t\t\t\t\t// The handler may either\n\t\t\t\t\t\t\t//   - modify `ctx.response` in-place (and leave `ctx.result` undefined)\n\t\t\t\t\t\t\t//     => res = undefined\n\t\t\t\t\t\t\t//   - return a replacement in `ctx.result`\n\t\t\t\t\t\t\t//     => res = <new data>\n\t\t\t\t\t\t\t//   If res contains an `error` property, an error status is displayed\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tres = tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\t\"postProcess\",\n\t\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\t\tctx.originalEvent,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tresponse: data,\n\t\t\t\t\t\t\t\t\t\terror: null,\n\t\t\t\t\t\t\t\t\t\tdataType: source.dataType,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (res.error) {\n\t\t\t\t\t\t\t\t\ttree.warn(\n\t\t\t\t\t\t\t\t\t\t\"postProcess returned error:\",\n\t\t\t\t\t\t\t\t\t\tres\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tres = {\n\t\t\t\t\t\t\t\t\terror: e,\n\t\t\t\t\t\t\t\t\tmessage: \"\" + e,\n\t\t\t\t\t\t\t\t\tdetails: \"postProcess failed\",\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (res.error) {\n\t\t\t\t\t\t\t\t// Either postProcess failed with an exception, or the returned\n\t\t\t\t\t\t\t\t// result object has an 'error' property attached:\n\t\t\t\t\t\t\t\terrorObj = $.isPlainObject(res.error)\n\t\t\t\t\t\t\t\t\t? res.error\n\t\t\t\t\t\t\t\t\t: { message: res.error };\n\t\t\t\t\t\t\t\terrorObj = tree._makeHookContext(\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\terrorObj\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresultDfd.rejectWith(this, [errorObj]);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t$.isArray(res) ||\n\t\t\t\t\t\t\t\t($.isPlainObject(res) &&\n\t\t\t\t\t\t\t\t\t$.isArray(res.children))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Use `ctx.result` if valid\n\t\t\t\t\t\t\t\t// (otherwise use existing data, which may have been modified in-place)\n\t\t\t\t\t\t\t\tdata = res;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tdata &&\n\t\t\t\t\t\t\tdata.hasOwnProperty(\"d\") &&\n\t\t\t\t\t\t\tctx.options.enableAspx\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Process ASPX WebMethod JSON object inside \"d\" property\n\t\t\t\t\t\t\t// (only if no postProcess event was defined)\n\t\t\t\t\t\t\tif (ctx.options.enableAspx === 42) {\n\t\t\t\t\t\t\t\ttree.warn(\n\t\t\t\t\t\t\t\t\t\"The default for enableAspx will change to `false` in the fututure. \" +\n\t\t\t\t\t\t\t\t\t\t\"Pass `enableAspx: true` or implement postProcess to silence this warning.\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata =\n\t\t\t\t\t\t\t\ttypeof data.d === \"string\"\n\t\t\t\t\t\t\t\t\t? $.parseJSON(data.d)\n\t\t\t\t\t\t\t\t\t: data.d;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresultDfd.resolveWith(this, [data]);\n\t\t\t\t\t},\n\t\t\t\t\tfunction(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\t// ajaxDfd was rejected, so we reject resultDfd as well\n\t\t\t\t\t\tvar errorObj = tree._makeHookContext(node, null, {\n\t\t\t\t\t\t\terror: jqXHR,\n\t\t\t\t\t\t\targs: Array.prototype.slice.call(arguments),\n\t\t\t\t\t\t\tmessage: errorThrown,\n\t\t\t\t\t\t\tdetails: jqXHR.status + \": \" + errorThrown,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresultDfd.rejectWith(this, [errorObj]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// The async Ajax request has now started.\n\t\t\t\t// resultDfd will be resolved/rejected after the response arrived,\n\t\t\t\t// was postProcessed, and checked.\n\t\t\t\t// Now we implement the UI update and add the data to the tree.\n\t\t\t\t// We also return this promise to the caller.\n\t\t\t\tresultDfd\n\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\ttree.nodeSetStatus(ctx, \"ok\");\n\t\t\t\t\t\tvar children, metaData, noDataRes;\n\n\t\t\t\t\t\tif ($.isPlainObject(data)) {\n\t\t\t\t\t\t\t// We got {foo: 'abc', children: [...]}\n\t\t\t\t\t\t\t// Copy extra properties to tree.data.foo\n\t\t\t\t\t\t\t_assert(\n\t\t\t\t\t\t\t\tnode.isRootNode(),\n\t\t\t\t\t\t\t\t\"source may only be an object for root nodes (expecting an array of child objects otherwise)\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t_assert(\n\t\t\t\t\t\t\t\t$.isArray(data.children),\n\t\t\t\t\t\t\t\t\"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmetaData = data;\n\t\t\t\t\t\t\tchildren = data.children;\n\t\t\t\t\t\t\tdelete metaData.children;\n\t\t\t\t\t\t\t// Copy some attributes to tree.data\n\t\t\t\t\t\t\t$.each(TREE_ATTRS, function(i, attr) {\n\t\t\t\t\t\t\t\tif (metaData[attr] !== undefined) {\n\t\t\t\t\t\t\t\t\ttree[attr] = metaData[attr];\n\t\t\t\t\t\t\t\t\tdelete metaData[attr];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// Copy all other attributes to tree.data.NAME\n\t\t\t\t\t\t\t$.extend(tree.data, metaData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tchildren = data;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_assert(\n\t\t\t\t\t\t\t$.isArray(children),\n\t\t\t\t\t\t\t\"expected array of children\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnode._setChildren(children);\n\n\t\t\t\t\t\tif (tree.options.nodata && children.length === 0) {\n\t\t\t\t\t\t\tif ($.isFunction(tree.options.nodata)) {\n\t\t\t\t\t\t\t\tnoDataRes = tree.options.nodata.call(\n\t\t\t\t\t\t\t\t\ttree,\n\t\t\t\t\t\t\t\t\t{ type: \"nodata\" },\n\t\t\t\t\t\t\t\t\tctx\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\ttree.options.nodata === true &&\n\t\t\t\t\t\t\t\tnode.isRootNode()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tnoDataRes = tree.options.strings.noData;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\ttypeof tree.options.nodata === \"string\" &&\n\t\t\t\t\t\t\t\tnode.isRootNode()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tnoDataRes = tree.options.nodata;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (noDataRes) {\n\t\t\t\t\t\t\t\tnode.setStatus(\"nodata\", noDataRes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// trigger fancytreeloadchildren\n\t\t\t\t\t\ttree._triggerNodeEvent(\"loadChildren\", node);\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(error) {\n\t\t\t\t\t\tvar ctxErr;\n\n\t\t\t\t\t\tif (error === RECURSIVE_REQUEST_ERROR) {\n\t\t\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\t\t\"Ignored response for obsolete load request #\" +\n\t\t\t\t\t\t\t\t\trequestId +\n\t\t\t\t\t\t\t\t\t\" (expected #\" +\n\t\t\t\t\t\t\t\t\tnode._requestId +\n\t\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else if (error === INVALID_REQUEST_TARGET_ERROR) {\n\t\t\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\t\t\"Lazy parent node was removed while loading: discarding response.\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else if (error.node && error.error && error.message) {\n\t\t\t\t\t\t\t// error is already a context object\n\t\t\t\t\t\t\tctxErr = error;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctxErr = tree._makeHookContext(node, null, {\n\t\t\t\t\t\t\t\terror: error, // it can be jqXHR or any custom error\n\t\t\t\t\t\t\t\targs: Array.prototype.slice.call(arguments),\n\t\t\t\t\t\t\t\tmessage: error\n\t\t\t\t\t\t\t\t\t? error.message || error.toString()\n\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (ctxErr.message === \"[object Object]\") {\n\t\t\t\t\t\t\t\tctxErr.message = \"\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\t\"Load children failed (\" + ctxErr.message + \")\",\n\t\t\t\t\t\t\tctxErr\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\"loadError\",\n\t\t\t\t\t\t\t\tctxErr,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t) !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\ttree.nodeSetStatus(\n\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\t\"error\",\n\t\t\t\t\t\t\t\tctxErr.message,\n\t\t\t\t\t\t\t\tctxErr.details\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.always(function() {\n\t\t\t\t\t\tnode._requestId = null;\n\t\t\t\t\t\tif (isAsync) {\n\t\t\t\t\t\t\ttree.debugTimeEnd(tag);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\treturn resultDfd.promise();\n\t\t\t},\n\t\t\t/** [Not Implemented]  */\n\t\t\tnodeLoadKeyPath: function(ctx, keyPathList) {\n\t\t\t\t// TODO: implement and improve\n\t\t\t\t// http://code.google.com/p/dynatree/issues/detail?id=222\n\t\t\t},\n\t\t\t/**\n\t\t\t * Remove a single direct child of ctx.node.\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {FancytreeNode} childNode dircect child of ctx.node\n\t\t\t */\n\t\t\tnodeRemoveChild: function(ctx, childNode) {\n\t\t\t\tvar idx,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\t// opts = ctx.options,\n\t\t\t\t\tsubCtx = $.extend({}, ctx, { node: childNode }),\n\t\t\t\t\tchildren = node.children;\n\n\t\t\t\t// FT.debug(\"nodeRemoveChild()\", node.toString(), childNode.toString());\n\n\t\t\t\tif (children.length === 1) {\n\t\t\t\t\t_assert(childNode === children[0], \"invalid single child\");\n\t\t\t\t\treturn this.nodeRemoveChildren(ctx);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.activeNode &&\n\t\t\t\t\t(childNode === this.activeNode ||\n\t\t\t\t\t\tthis.activeNode.isDescendantOf(childNode))\n\t\t\t\t) {\n\t\t\t\t\tthis.activeNode.setActive(false); // TODO: don't fire events\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.focusNode &&\n\t\t\t\t\t(childNode === this.focusNode ||\n\t\t\t\t\t\tthis.focusNode.isDescendantOf(childNode))\n\t\t\t\t) {\n\t\t\t\t\tthis.focusNode = null;\n\t\t\t\t}\n\t\t\t\t// TODO: persist must take care to clear select and expand cookies\n\t\t\t\tthis.nodeRemoveMarkup(subCtx);\n\t\t\t\tthis.nodeRemoveChildren(subCtx);\n\t\t\t\tidx = $.inArray(childNode, children);\n\t\t\t\t_assert(idx >= 0, \"invalid child\");\n\t\t\t\t// Notify listeners\n\t\t\t\tnode.triggerModifyChild(\"remove\", childNode);\n\t\t\t\t// Unlink to support GC\n\t\t\t\tchildNode.visit(function(n) {\n\t\t\t\t\tn.parent = null;\n\t\t\t\t}, true);\n\t\t\t\tthis._callHook(\"treeRegisterNode\", this, false, childNode);\n\t\t\t\t// remove from child list\n\t\t\t\tchildren.splice(idx, 1);\n\t\t\t},\n\t\t\t/**Remove HTML markup for all descendents of ctx.node.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeRemoveChildMarkup: function(ctx) {\n\t\t\t\tvar node = ctx.node;\n\n\t\t\t\t// FT.debug(\"nodeRemoveChildMarkup()\", node.toString());\n\t\t\t\t// TODO: Unlink attr.ftnode to support GC\n\t\t\t\tif (node.ul) {\n\t\t\t\t\tif (node.isRootNode()) {\n\t\t\t\t\t\t$(node.ul).empty();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(node.ul).remove();\n\t\t\t\t\t\tnode.ul = null;\n\t\t\t\t\t}\n\t\t\t\t\tnode.visit(function(n) {\n\t\t\t\t\t\tn.li = n.ul = null;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**Remove all descendants of ctx.node.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeRemoveChildren: function(ctx) {\n\t\t\t\tvar //subCtx,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\tchildren = node.children;\n\t\t\t\t// opts = ctx.options;\n\n\t\t\t\t// FT.debug(\"nodeRemoveChildren()\", node.toString());\n\t\t\t\tif (!children) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.activeNode && this.activeNode.isDescendantOf(node)) {\n\t\t\t\t\tthis.activeNode.setActive(false); // TODO: don't fire events\n\t\t\t\t}\n\t\t\t\tif (this.focusNode && this.focusNode.isDescendantOf(node)) {\n\t\t\t\t\tthis.focusNode = null;\n\t\t\t\t}\n\t\t\t\t// TODO: persist must take care to clear select and expand cookies\n\t\t\t\tthis.nodeRemoveChildMarkup(ctx);\n\t\t\t\t// Unlink children to support GC\n\t\t\t\t// TODO: also delete this.children (not possible using visit())\n\t\t\t\t// subCtx = $.extend({}, ctx);\n\t\t\t\tnode.triggerModifyChild(\"remove\", null);\n\t\t\t\tnode.visit(function(n) {\n\t\t\t\t\tn.parent = null;\n\t\t\t\t\ttree._callHook(\"treeRegisterNode\", tree, false, n);\n\t\t\t\t});\n\t\t\t\tif (node.lazy) {\n\t\t\t\t\t// 'undefined' would be interpreted as 'not yet loaded' for lazy nodes\n\t\t\t\t\tnode.children = [];\n\t\t\t\t} else {\n\t\t\t\t\tnode.children = null;\n\t\t\t\t}\n\t\t\t\tif (!node.isRootNode()) {\n\t\t\t\t\tnode.expanded = false; // #449, #459\n\t\t\t\t}\n\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t},\n\t\t\t/**Remove HTML markup for ctx.node and all its descendents.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeRemoveMarkup: function(ctx) {\n\t\t\t\tvar node = ctx.node;\n\t\t\t\t// FT.debug(\"nodeRemoveMarkup()\", node.toString());\n\t\t\t\t// TODO: Unlink attr.ftnode to support GC\n\t\t\t\tif (node.li) {\n\t\t\t\t\t$(node.li).remove();\n\t\t\t\t\tnode.li = null;\n\t\t\t\t}\n\t\t\t\tthis.nodeRemoveChildMarkup(ctx);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Create `<li><span>..</span> .. </li>` tags for this node.\n\t\t\t *\n\t\t\t * This method takes care that all HTML markup is created that is required\n\t\t\t * to display this node in its current state.\n\t\t\t *\n\t\t\t * Call this method to create new nodes, or after the strucuture\n\t\t\t * was changed (e.g. after moving this node or adding/removing children)\n\t\t\t * nodeRenderTitle() and nodeRenderStatus() are implied.\n\t\t\t *\n\t\t\t * ```html\n\t\t\t * <li id='KEY' ftnode=NODE>\n\t\t\t *     <span class='fancytree-node fancytree-expanded fancytree-has-children fancytree-lastsib fancytree-exp-el fancytree-ico-e'>\n\t\t\t *         <span class=\"fancytree-expander\"></span>\n\t\t\t *         <span class=\"fancytree-checkbox\"></span> // only present in checkbox mode\n\t\t\t *         <span class=\"fancytree-icon\"></span>\n\t\t\t *         <a href=\"#\" class=\"fancytree-title\"> Node 1 </a>\n\t\t\t *     </span>\n\t\t\t *     <ul> // only present if node has children\n\t\t\t *         <li id='KEY' ftnode=NODE> child1 ... </li>\n\t\t\t *         <li id='KEY' ftnode=NODE> child2 ... </li>\n\t\t\t *     </ul>\n\t\t\t * </li>\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} [force=false] re-render, even if html markup was already created\n\t\t\t * @param {boolean} [deep=false] also render all descendants, even if parent is collapsed\n\t\t\t * @param {boolean} [collapsed=false] force root node to be collapsed, so we can apply animated expand later\n\t\t\t */\n\t\t\tnodeRender: function(ctx, force, deep, collapsed, _recursive) {\n\t\t\t\t/* This method must take care of all cases where the current data mode\n\t\t\t\t * (i.e. node hierarchy) does not match the current markup.\n\t\t\t\t *\n\t\t\t\t * - node was not yet rendered:\n\t\t\t\t *   create markup\n\t\t\t\t * - node was rendered: exit fast\n\t\t\t\t * - children have been added\n\t\t\t\t * - children have been removed\n\t\t\t\t */\n\t\t\t\tvar childLI,\n\t\t\t\t\tchildNode1,\n\t\t\t\t\tchildNode2,\n\t\t\t\t\ti,\n\t\t\t\t\tl,\n\t\t\t\t\tnext,\n\t\t\t\t\tsubCtx,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\taria = opts.aria,\n\t\t\t\t\tfirstTime = false,\n\t\t\t\t\tparent = node.parent,\n\t\t\t\t\tisRootNode = !parent,\n\t\t\t\t\tchildren = node.children,\n\t\t\t\t\tsuccessorLi = null;\n\t\t\t\t// FT.debug(\"nodeRender(\" + !!force + \", \" + !!deep + \")\", node.toString());\n\n\t\t\t\tif (tree._enableUpdate === false) {\n\t\t\t\t\t// tree.debug(\"no render\", tree._enableUpdate);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!isRootNode && !parent.ul) {\n\t\t\t\t\t// Calling node.collapse on a deep, unrendered node\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_assert(isRootNode || parent.ul, \"parent UL must exist\");\n\n\t\t\t\t// Render the node\n\t\t\t\tif (!isRootNode) {\n\t\t\t\t\t// Discard markup on force-mode, or if it is not linked to parent <ul>\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.li &&\n\t\t\t\t\t\t(force || node.li.parentNode !== node.parent.ul)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (node.li.parentNode === node.parent.ul) {\n\t\t\t\t\t\t\t// #486: store following node, so we can insert the new markup there later\n\t\t\t\t\t\t\tsuccessorLi = node.li.nextSibling;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// May happen, when a top-level node was dropped over another\n\t\t\t\t\t\t\tthis.debug(\n\t\t\t\t\t\t\t\t\"Unlinking \" +\n\t\t\t\t\t\t\t\t\tnode +\n\t\t\t\t\t\t\t\t\t\" (must be child of \" +\n\t\t\t\t\t\t\t\t\tnode.parent +\n\t\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//\t            this.debug(\"nodeRemoveMarkup...\");\n\t\t\t\t\t\tthis.nodeRemoveMarkup(ctx);\n\t\t\t\t\t}\n\t\t\t\t\t// Create <li><span /> </li>\n\t\t\t\t\t// node.debug(\"render...\");\n\t\t\t\t\tif (node.li) {\n\t\t\t\t\t\t// this.nodeRenderTitle(ctx);\n\t\t\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// node.debug(\"render... really\");\n\t\t\t\t\t\tfirstTime = true;\n\t\t\t\t\t\tnode.li = document.createElement(\"li\");\n\t\t\t\t\t\tnode.li.ftnode = node;\n\n\t\t\t\t\t\tif (node.key && opts.generateIds) {\n\t\t\t\t\t\t\tnode.li.id = opts.idPrefix + node.key;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.span = document.createElement(\"span\");\n\t\t\t\t\t\tnode.span.className = \"fancytree-node\";\n\t\t\t\t\t\tif (aria && !node.tr) {\n\t\t\t\t\t\t\t$(node.li).attr(\"role\", \"treeitem\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.li.appendChild(node.span);\n\n\t\t\t\t\t\t// Create inner HTML for the <span> (expander, checkbox, icon, and title)\n\t\t\t\t\t\tthis.nodeRenderTitle(ctx);\n\n\t\t\t\t\t\t// Allow tweaking and binding, after node was created for the first time\n\t\t\t\t\t\tif (opts.createNode) {\n\t\t\t\t\t\t\topts.createNode.call(\n\t\t\t\t\t\t\t\ttree,\n\t\t\t\t\t\t\t\t{ type: \"createNode\" },\n\t\t\t\t\t\t\t\tctx\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Allow tweaking after node state was rendered\n\t\t\t\t\tif (opts.renderNode) {\n\t\t\t\t\t\topts.renderNode.call(tree, { type: \"renderNode\" }, ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Visit child nodes\n\t\t\t\tif (children) {\n\t\t\t\t\tif (isRootNode || node.expanded || deep === true) {\n\t\t\t\t\t\t// Create a UL to hold the children\n\t\t\t\t\t\tif (!node.ul) {\n\t\t\t\t\t\t\tnode.ul = document.createElement(\"ul\");\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(collapsed === true && !_recursive) ||\n\t\t\t\t\t\t\t\t!node.expanded\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// hide top UL, so we can use an animation to show it later\n\t\t\t\t\t\t\t\tnode.ul.style.display = \"none\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (aria) {\n\t\t\t\t\t\t\t\t$(node.ul).attr(\"role\", \"group\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (node.li) {\n\t\t\t\t\t\t\t\t// issue #67\n\t\t\t\t\t\t\t\tnode.li.appendChild(node.ul);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnode.tree.$div.append(node.ul);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Add child markup\n\t\t\t\t\t\tfor (i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\t\t\tsubCtx = $.extend({}, ctx, { node: children[i] });\n\t\t\t\t\t\t\tthis.nodeRender(subCtx, force, deep, false, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Remove <li> if nodes have moved to another parent\n\t\t\t\t\t\tchildLI = node.ul.firstChild;\n\t\t\t\t\t\twhile (childLI) {\n\t\t\t\t\t\t\tchildNode2 = childLI.ftnode;\n\t\t\t\t\t\t\tif (childNode2 && childNode2.parent !== node) {\n\t\t\t\t\t\t\t\tnode.debug(\n\t\t\t\t\t\t\t\t\t\"_fixParent: remove missing \" + childNode2,\n\t\t\t\t\t\t\t\t\tchildLI\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tnext = childLI.nextSibling;\n\t\t\t\t\t\t\t\tchildLI.parentNode.removeChild(childLI);\n\t\t\t\t\t\t\t\tchildLI = next;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tchildLI = childLI.nextSibling;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Make sure, that <li> order matches node.children order.\n\t\t\t\t\t\tchildLI = node.ul.firstChild;\n\t\t\t\t\t\tfor (i = 0, l = children.length - 1; i < l; i++) {\n\t\t\t\t\t\t\tchildNode1 = children[i];\n\t\t\t\t\t\t\tchildNode2 = childLI.ftnode;\n\t\t\t\t\t\t\tif (childNode1 === childNode2) {\n\t\t\t\t\t\t\t\tchildLI = childLI.nextSibling;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// node.debug(\"_fixOrder: mismatch at index \" + i + \": \" + childNode1 + \" != \" + childNode2);\n\t\t\t\t\t\t\t\tnode.ul.insertBefore(\n\t\t\t\t\t\t\t\t\tchildNode1.li,\n\t\t\t\t\t\t\t\t\tchildNode2.li\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// No children: remove markup if any\n\t\t\t\t\tif (node.ul) {\n\t\t\t\t\t\t// alert(\"remove child markup for \" + node);\n\t\t\t\t\t\tthis.warn(\"remove child markup for \" + node);\n\t\t\t\t\t\tthis.nodeRemoveChildMarkup(ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isRootNode) {\n\t\t\t\t\t// Update element classes according to node state\n\t\t\t\t\t// this.nodeRenderStatus(ctx);\n\t\t\t\t\t// Finally add the whole structure to the DOM, so the browser can render\n\t\t\t\t\tif (firstTime) {\n\t\t\t\t\t\t// #486: successorLi is set, if we re-rendered (i.e. discarded)\n\t\t\t\t\t\t// existing markup, which  we want to insert at the same position.\n\t\t\t\t\t\t// (null is equivalent to append)\n\t\t\t\t\t\t// \t\tparent.ul.appendChild(node.li);\n\t\t\t\t\t\tparent.ul.insertBefore(node.li, successorLi);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Create HTML inside the node's outer `<span>` (i.e. expander, checkbox,\n\t\t\t * icon, and title).\n\t\t\t *\n\t\t\t * nodeRenderStatus() is implied.\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {string} [title] optinal new title\n\t\t\t */\n\t\t\tnodeRenderTitle: function(ctx, title) {\n\t\t\t\t// set node connector images, links and text\n\t\t\t\tvar checkbox,\n\t\t\t\t\tclassName,\n\t\t\t\t\ticon,\n\t\t\t\t\tnodeTitle,\n\t\t\t\t\trole,\n\t\t\t\t\ttabindex,\n\t\t\t\t\ttooltip,\n\t\t\t\t\ticonTooltip,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\taria = opts.aria,\n\t\t\t\t\tlevel = node.getLevel(),\n\t\t\t\t\tares = [];\n\n\t\t\t\tif (title !== undefined) {\n\t\t\t\t\tnode.title = title;\n\t\t\t\t}\n\t\t\t\tif (!node.span || tree._enableUpdate === false) {\n\t\t\t\t\t// Silently bail out if node was not rendered yet, assuming\n\t\t\t\t\t// node.render() will be called as the node becomes visible\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Connector (expanded, expandable or simple)\n\t\t\t\trole =\n\t\t\t\t\taria && node.hasChildren() !== false\n\t\t\t\t\t\t? \" role='button'\"\n\t\t\t\t\t\t: \"\";\n\t\t\t\tif (level < opts.minExpandLevel) {\n\t\t\t\t\tif (!node.lazy) {\n\t\t\t\t\t\tnode.expanded = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (level > 1) {\n\t\t\t\t\t\tares.push(\n\t\t\t\t\t\t\t\"<span \" +\n\t\t\t\t\t\t\t\trole +\n\t\t\t\t\t\t\t\t\" class='fancytree-expander fancytree-expander-fixed'></span>\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// .. else (i.e. for root level) skip expander/connector alltogether\n\t\t\t\t} else {\n\t\t\t\t\tares.push(\n\t\t\t\t\t\t\"<span \" + role + \" class='fancytree-expander'></span>\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Checkbox mode\n\t\t\t\tcheckbox = FT.evalOption(\"checkbox\", node, node, opts, false);\n\n\t\t\t\tif (checkbox && !node.isStatusNode()) {\n\t\t\t\t\trole = aria ? \" role='checkbox'\" : \"\";\n\t\t\t\t\tclassName = \"fancytree-checkbox\";\n\t\t\t\t\tif (\n\t\t\t\t\t\tcheckbox === \"radio\" ||\n\t\t\t\t\t\t(node.parent && node.parent.radiogroup)\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassName += \" fancytree-radio\";\n\t\t\t\t\t}\n\t\t\t\t\tares.push(\n\t\t\t\t\t\t\"<span \" + role + \" class='\" + className + \"'></span>\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Folder or doctype icon\n\t\t\t\tif (node.data.iconClass !== undefined) {\n\t\t\t\t\t// 2015-11-16\n\t\t\t\t\t// Handle / warn about backward compatibility\n\t\t\t\t\tif (node.icon) {\n\t\t\t\t\t\t$.error(\n\t\t\t\t\t\t\t\"'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\t\"'iconClass' node option is deprecated since v2.14.0: use 'icon' instead\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnode.icon = node.data.iconClass;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If opts.icon is a callback and returns something other than undefined, use that\n\t\t\t\t// else if node.icon is a boolean or string, use that\n\t\t\t\t// else if opts.icon is a boolean or string, use that\n\t\t\t\t// else show standard icon (which may be different for folders or documents)\n\t\t\t\ticon = FT.evalOption(\"icon\", node, node, opts, true);\n\t\t\t\t// if( typeof icon !== \"boolean\" ) {\n\t\t\t\t// \t// icon is defined, but not true/false: must be a string\n\t\t\t\t// \ticon = \"\" + icon;\n\t\t\t\t// }\n\t\t\t\tif (icon !== false) {\n\t\t\t\t\trole = aria ? \" role='presentation'\" : \"\";\n\n\t\t\t\t\ticonTooltip = FT.evalOption(\n\t\t\t\t\t\t\"iconTooltip\",\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\topts,\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t\ticonTooltip = iconTooltip\n\t\t\t\t\t\t? \" title='\" + _escapeTooltip(iconTooltip) + \"'\"\n\t\t\t\t\t\t: \"\";\n\n\t\t\t\t\tif (typeof icon === \"string\") {\n\t\t\t\t\t\tif (TEST_IMG.test(icon)) {\n\t\t\t\t\t\t\t// node.icon is an image url. Prepend imagePath\n\t\t\t\t\t\t\ticon =\n\t\t\t\t\t\t\t\ticon.charAt(0) === \"/\"\n\t\t\t\t\t\t\t\t\t? icon\n\t\t\t\t\t\t\t\t\t: (opts.imagePath || \"\") + icon;\n\t\t\t\t\t\t\tares.push(\n\t\t\t\t\t\t\t\t\"<img src='\" +\n\t\t\t\t\t\t\t\t\ticon +\n\t\t\t\t\t\t\t\t\t\"' class='fancytree-icon'\" +\n\t\t\t\t\t\t\t\t\ticonTooltip +\n\t\t\t\t\t\t\t\t\t\" alt='' />\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tares.push(\n\t\t\t\t\t\t\t\t\"<span \" +\n\t\t\t\t\t\t\t\t\trole +\n\t\t\t\t\t\t\t\t\t\" class='fancytree-custom-icon \" +\n\t\t\t\t\t\t\t\t\ticon +\n\t\t\t\t\t\t\t\t\t\"'\" +\n\t\t\t\t\t\t\t\t\ticonTooltip +\n\t\t\t\t\t\t\t\t\t\"></span>\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (icon.text) {\n\t\t\t\t\t\tares.push(\n\t\t\t\t\t\t\t\"<span \" +\n\t\t\t\t\t\t\t\trole +\n\t\t\t\t\t\t\t\t\" class='fancytree-custom-icon \" +\n\t\t\t\t\t\t\t\t(icon.addClass || \"\") +\n\t\t\t\t\t\t\t\t\"'\" +\n\t\t\t\t\t\t\t\ticonTooltip +\n\t\t\t\t\t\t\t\t\">\" +\n\t\t\t\t\t\t\t\tFT.escapeHtml(icon.text) +\n\t\t\t\t\t\t\t\t\"</span>\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (icon.html) {\n\t\t\t\t\t\tares.push(\n\t\t\t\t\t\t\t\"<span \" +\n\t\t\t\t\t\t\t\trole +\n\t\t\t\t\t\t\t\t\" class='fancytree-custom-icon \" +\n\t\t\t\t\t\t\t\t(icon.addClass || \"\") +\n\t\t\t\t\t\t\t\t\"'\" +\n\t\t\t\t\t\t\t\ticonTooltip +\n\t\t\t\t\t\t\t\t\">\" +\n\t\t\t\t\t\t\t\ticon.html +\n\t\t\t\t\t\t\t\t\"</span>\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// standard icon: theme css will take care of this\n\t\t\t\t\t\tares.push(\n\t\t\t\t\t\t\t\"<span \" +\n\t\t\t\t\t\t\t\trole +\n\t\t\t\t\t\t\t\t\" class='fancytree-icon'\" +\n\t\t\t\t\t\t\t\ticonTooltip +\n\t\t\t\t\t\t\t\t\"></span>\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Node title\n\t\t\t\tnodeTitle = \"\";\n\t\t\t\tif (opts.renderTitle) {\n\t\t\t\t\tnodeTitle =\n\t\t\t\t\t\topts.renderTitle.call(\n\t\t\t\t\t\t\ttree,\n\t\t\t\t\t\t\t{ type: \"renderTitle\" },\n\t\t\t\t\t\t\tctx\n\t\t\t\t\t\t) || \"\";\n\t\t\t\t}\n\t\t\t\tif (!nodeTitle) {\n\t\t\t\t\ttooltip = FT.evalOption(\"tooltip\", node, node, opts, null);\n\t\t\t\t\tif (tooltip === true) {\n\t\t\t\t\t\ttooltip = node.title;\n\t\t\t\t\t}\n\t\t\t\t\t// if( node.tooltip ) {\n\t\t\t\t\t// \ttooltip = node.tooltip;\n\t\t\t\t\t// } else if ( opts.tooltip ) {\n\t\t\t\t\t// \ttooltip = opts.tooltip === true ? node.title : opts.tooltip.call(tree, node);\n\t\t\t\t\t// }\n\t\t\t\t\ttooltip = tooltip\n\t\t\t\t\t\t? \" title='\" + _escapeTooltip(tooltip) + \"'\"\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\ttabindex = opts.titlesTabbable ? \" tabindex='0'\" : \"\";\n\n\t\t\t\t\tnodeTitle =\n\t\t\t\t\t\t\"<span class='fancytree-title'\" +\n\t\t\t\t\t\ttooltip +\n\t\t\t\t\t\ttabindex +\n\t\t\t\t\t\t\">\" +\n\t\t\t\t\t\t(opts.escapeTitles\n\t\t\t\t\t\t\t? FT.escapeHtml(node.title)\n\t\t\t\t\t\t\t: node.title) +\n\t\t\t\t\t\t\"</span>\";\n\t\t\t\t}\n\t\t\t\tares.push(nodeTitle);\n\t\t\t\t// Note: this will trigger focusout, if node had the focus\n\t\t\t\t//$(node.span).html(ares.join(\"\")); // it will cleanup the jQuery data currently associated with SPAN (if any), but it executes more slowly\n\t\t\t\tnode.span.innerHTML = ares.join(\"\");\n\t\t\t\t// Update CSS classes\n\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t\tif (opts.enhanceTitle) {\n\t\t\t\t\tctx.$title = $(\">span.fancytree-title\", node.span);\n\t\t\t\t\tnodeTitle =\n\t\t\t\t\t\topts.enhanceTitle.call(\n\t\t\t\t\t\t\ttree,\n\t\t\t\t\t\t\t{ type: \"enhanceTitle\" },\n\t\t\t\t\t\t\tctx\n\t\t\t\t\t\t) || \"\";\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Update element classes according to node state.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeRenderStatus: function(ctx) {\n\t\t\t\t// Set classes for current status\n\t\t\t\tvar $ariaElem,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\t// \tnodeContainer = node[tree.nodeContainerAttrName],\n\t\t\t\t\thasChildren = node.hasChildren(),\n\t\t\t\t\tisLastSib = node.isLastSibling(),\n\t\t\t\t\taria = opts.aria,\n\t\t\t\t\tcn = opts._classNames,\n\t\t\t\t\tcnList = [],\n\t\t\t\t\tstatusElem = node[tree.statusClassPropName];\n\n\t\t\t\tif (!statusElem || tree._enableUpdate === false) {\n\t\t\t\t\t// if this function is called for an unrendered node, ignore it (will be updated on nect render anyway)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (aria) {\n\t\t\t\t\t$ariaElem = $(node.tr || node.li);\n\t\t\t\t}\n\t\t\t\t// Build a list of class names that we will add to the node <span>\n\t\t\t\tcnList.push(cn.node);\n\t\t\t\tif (tree.activeNode === node) {\n\t\t\t\t\tcnList.push(cn.active);\n\t\t\t\t\t// \t\t$(\">span.fancytree-title\", statusElem).attr(\"tabindex\", \"0\");\n\t\t\t\t\t// \t\ttree.$container.removeAttr(\"tabindex\");\n\t\t\t\t\t// }else{\n\t\t\t\t\t// \t\t$(\">span.fancytree-title\", statusElem).removeAttr(\"tabindex\");\n\t\t\t\t\t// \t\ttree.$container.attr(\"tabindex\", \"0\");\n\t\t\t\t}\n\t\t\t\tif (tree.focusNode === node) {\n\t\t\t\t\tcnList.push(cn.focused);\n\t\t\t\t}\n\t\t\t\tif (node.expanded) {\n\t\t\t\t\tcnList.push(cn.expanded);\n\t\t\t\t}\n\t\t\t\tif (aria) {\n\t\t\t\t\tif (hasChildren === false) {\n\t\t\t\t\t\t$ariaElem.removeAttr(\"aria-expanded\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$ariaElem.attr(\"aria-expanded\", Boolean(node.expanded));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (node.folder) {\n\t\t\t\t\tcnList.push(cn.folder);\n\t\t\t\t}\n\t\t\t\tif (hasChildren !== false) {\n\t\t\t\t\tcnList.push(cn.hasChildren);\n\t\t\t\t}\n\t\t\t\t// TODO: required?\n\t\t\t\tif (isLastSib) {\n\t\t\t\t\tcnList.push(cn.lastsib);\n\t\t\t\t}\n\t\t\t\tif (node.lazy && node.children == null) {\n\t\t\t\t\tcnList.push(cn.lazy);\n\t\t\t\t}\n\t\t\t\tif (node.partload) {\n\t\t\t\t\tcnList.push(cn.partload);\n\t\t\t\t}\n\t\t\t\tif (node.partsel) {\n\t\t\t\t\tcnList.push(cn.partsel);\n\t\t\t\t}\n\t\t\t\tif (FT.evalOption(\"unselectable\", node, node, opts, false)) {\n\t\t\t\t\tcnList.push(cn.unselectable);\n\t\t\t\t}\n\t\t\t\tif (node._isLoading) {\n\t\t\t\t\tcnList.push(cn.loading);\n\t\t\t\t}\n\t\t\t\tif (node._error) {\n\t\t\t\t\tcnList.push(cn.error);\n\t\t\t\t}\n\t\t\t\tif (node.statusNodeType) {\n\t\t\t\t\tcnList.push(cn.statusNodePrefix + node.statusNodeType);\n\t\t\t\t}\n\t\t\t\tif (node.selected) {\n\t\t\t\t\tcnList.push(cn.selected);\n\t\t\t\t\tif (aria) {\n\t\t\t\t\t\t$ariaElem.attr(\"aria-selected\", true);\n\t\t\t\t\t}\n\t\t\t\t} else if (aria) {\n\t\t\t\t\t$ariaElem.attr(\"aria-selected\", false);\n\t\t\t\t}\n\t\t\t\tif (node.extraClasses) {\n\t\t\t\t\tcnList.push(node.extraClasses);\n\t\t\t\t}\n\t\t\t\t// IE6 doesn't correctly evaluate multiple class names,\n\t\t\t\t// so we create combined class names that can be used in the CSS\n\t\t\t\tif (hasChildren === false) {\n\t\t\t\t\tcnList.push(\n\t\t\t\t\t\tcn.combinedExpanderPrefix + \"n\" + (isLastSib ? \"l\" : \"\")\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tcnList.push(\n\t\t\t\t\t\tcn.combinedExpanderPrefix +\n\t\t\t\t\t\t\t(node.expanded ? \"e\" : \"c\") +\n\t\t\t\t\t\t\t(node.lazy && node.children == null ? \"d\" : \"\") +\n\t\t\t\t\t\t\t(isLastSib ? \"l\" : \"\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcnList.push(\n\t\t\t\t\tcn.combinedIconPrefix +\n\t\t\t\t\t\t(node.expanded ? \"e\" : \"c\") +\n\t\t\t\t\t\t(node.folder ? \"f\" : \"\")\n\t\t\t\t);\n\t\t\t\t// node.span.className = cnList.join(\" \");\n\t\t\t\tstatusElem.className = cnList.join(\" \");\n\n\t\t\t\t// TODO: we should not set this in the <span> tag also, if we set it here:\n\t\t\t\t// Maybe most (all) of the classes should be set in LI instead of SPAN?\n\t\t\t\tif (node.li) {\n\t\t\t\t\t// #719: we have to consider that there may be already other classes:\n\t\t\t\t\t$(node.li).toggleClass(cn.lastsib, isLastSib);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Activate node.\n\t\t\t * flag defaults to true.\n\t\t\t * If flag is true, the node is activated (must be a synchronous operation)\n\t\t\t * If flag is false, the node is deactivated (must be a synchronous operation)\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} [flag=true]\n\t\t\t * @param {object} [opts] additional options. Defaults to {noEvents: false, noFocus: false}\n\t\t\t * @returns {$.Promise}\n\t\t\t */\n\t\t\tnodeSetActive: function(ctx, flag, callOpts) {\n\t\t\t\t// Handle user click / [space] / [enter], according to clickFolderMode.\n\t\t\t\tcallOpts = callOpts || {};\n\t\t\t\tvar subCtx,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\tnoEvents = callOpts.noEvents === true,\n\t\t\t\t\tnoFocus = callOpts.noFocus === true,\n\t\t\t\t\tscroll = callOpts.scrollIntoView !== false,\n\t\t\t\t\tisActive = node === tree.activeNode;\n\n\t\t\t\t// flag defaults to true\n\t\t\t\tflag = flag !== false;\n\t\t\t\t// node.debug(\"nodeSetActive\", flag);\n\n\t\t\t\tif (isActive === flag) {\n\t\t\t\t\t// Nothing to do\n\t\t\t\t\treturn _getResolvedPromise(node);\n\t\t\t\t} else if (\n\t\t\t\t\tflag &&\n\t\t\t\t\t!noEvents &&\n\t\t\t\t\tthis._triggerNodeEvent(\n\t\t\t\t\t\t\"beforeActivate\",\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tctx.originalEvent\n\t\t\t\t\t) === false\n\t\t\t\t) {\n\t\t\t\t\t// Callback returned false\n\t\t\t\t\treturn _getRejectedPromise(node, [\"rejected\"]);\n\t\t\t\t}\n\t\t\t\tif (flag) {\n\t\t\t\t\tif (tree.activeNode) {\n\t\t\t\t\t\t_assert(\n\t\t\t\t\t\t\ttree.activeNode !== node,\n\t\t\t\t\t\t\t\"node was active (inconsistency)\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsubCtx = $.extend({}, ctx, { node: tree.activeNode });\n\t\t\t\t\t\ttree.nodeSetActive(subCtx, false);\n\t\t\t\t\t\t_assert(\n\t\t\t\t\t\t\ttree.activeNode === null,\n\t\t\t\t\t\t\t\"deactivate was out of sync?\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.activeVisible) {\n\t\t\t\t\t\t// If no focus is set (noFocus: true) and there is no focused node, this node is made visible.\n\t\t\t\t\t\t// scroll = noFocus && tree.focusNode == null;\n\t\t\t\t\t\t// #863: scroll by default (unless `scrollIntoView: false` was passed)\n\t\t\t\t\t\tnode.makeVisible({ scrollIntoView: scroll });\n\t\t\t\t\t}\n\t\t\t\t\ttree.activeNode = node;\n\t\t\t\t\ttree.nodeRenderStatus(ctx);\n\t\t\t\t\tif (!noFocus) {\n\t\t\t\t\t\ttree.nodeSetFocus(ctx);\n\t\t\t\t\t}\n\t\t\t\t\tif (!noEvents) {\n\t\t\t\t\t\ttree._triggerNodeEvent(\n\t\t\t\t\t\t\t\"activate\",\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tctx.originalEvent\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_assert(\n\t\t\t\t\t\ttree.activeNode === node,\n\t\t\t\t\t\t\"node was not active (inconsistency)\"\n\t\t\t\t\t);\n\t\t\t\t\ttree.activeNode = null;\n\t\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t\t\tif (!noEvents) {\n\t\t\t\t\t\tctx.tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\"deactivate\",\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tctx.originalEvent\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _getResolvedPromise(node);\n\t\t\t},\n\t\t\t/** Expand or collapse node, return Deferred.promise.\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} [flag=true]\n\t\t\t * @param {object} [opts] additional options. Defaults to `{noAnimation: false, noEvents: false}`\n\t\t\t * @returns {$.Promise} The deferred will be resolved as soon as the (lazy)\n\t\t\t *     data was retrieved, rendered, and the expand animation finished.\n\t\t\t */\n\t\t\tnodeSetExpanded: function(ctx, flag, callOpts) {\n\t\t\t\tcallOpts = callOpts || {};\n\t\t\t\tvar _afterLoad,\n\t\t\t\t\tdfd,\n\t\t\t\t\ti,\n\t\t\t\t\tl,\n\t\t\t\t\tparents,\n\t\t\t\t\tprevAC,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\tnoAnimation = callOpts.noAnimation === true,\n\t\t\t\t\tnoEvents = callOpts.noEvents === true;\n\n\t\t\t\t// flag defaults to true\n\t\t\t\tflag = flag !== false;\n\n\t\t\t\t// node.debug(\"nodeSetExpanded(\" + flag + \")\");\n\n\t\t\t\tif ($(node.li).hasClass(opts._classNames.animating)) {\n\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\"setExpanded(\" + flag + \") while animating: ignored.\"\n\t\t\t\t\t);\n\t\t\t\t\treturn _getRejectedPromise(node, [\"recursion\"]);\n\t\t\t\t}\n\n\t\t\t\tif ((node.expanded && flag) || (!node.expanded && !flag)) {\n\t\t\t\t\t// Nothing to do\n\t\t\t\t\t// node.debug(\"nodeSetExpanded(\" + flag + \"): nothing to do\");\n\t\t\t\t\treturn _getResolvedPromise(node);\n\t\t\t\t} else if (flag && !node.lazy && !node.hasChildren()) {\n\t\t\t\t\t// Prevent expanding of empty nodes\n\t\t\t\t\t// return _getRejectedPromise(node, [\"empty\"]);\n\t\t\t\t\treturn _getResolvedPromise(node);\n\t\t\t\t} else if (!flag && node.getLevel() < opts.minExpandLevel) {\n\t\t\t\t\t// Prevent collapsing locked levels\n\t\t\t\t\treturn _getRejectedPromise(node, [\"locked\"]);\n\t\t\t\t} else if (\n\t\t\t\t\t!noEvents &&\n\t\t\t\t\tthis._triggerNodeEvent(\n\t\t\t\t\t\t\"beforeExpand\",\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tctx.originalEvent\n\t\t\t\t\t) === false\n\t\t\t\t) {\n\t\t\t\t\t// Callback returned false\n\t\t\t\t\treturn _getRejectedPromise(node, [\"rejected\"]);\n\t\t\t\t}\n\t\t\t\t// If this node inside a collpased node, no animation and scrolling is needed\n\t\t\t\tif (!noAnimation && !node.isVisible()) {\n\t\t\t\t\tnoAnimation = callOpts.noAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tdfd = new $.Deferred();\n\n\t\t\t\t// Auto-collapse mode: collapse all siblings\n\t\t\t\tif (flag && !node.expanded && opts.autoCollapse) {\n\t\t\t\t\tparents = node.getParentList(false, true);\n\t\t\t\t\tprevAC = opts.autoCollapse;\n\t\t\t\t\ttry {\n\t\t\t\t\t\topts.autoCollapse = false;\n\t\t\t\t\t\tfor (i = 0, l = parents.length; i < l; i++) {\n\t\t\t\t\t\t\t// TODO: should return promise?\n\t\t\t\t\t\t\tthis._callHook(\n\t\t\t\t\t\t\t\t\"nodeCollapseSiblings\",\n\t\t\t\t\t\t\t\tparents[i],\n\t\t\t\t\t\t\t\tcallOpts\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\topts.autoCollapse = prevAC;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Trigger expand/collapse after expanding\n\t\t\t\tdfd.done(function() {\n\t\t\t\t\tvar lastChild = node.getLastChild();\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tflag &&\n\t\t\t\t\t\topts.autoScroll &&\n\t\t\t\t\t\t!noAnimation &&\n\t\t\t\t\t\tlastChild &&\n\t\t\t\t\t\ttree._enableUpdate\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Scroll down to last child, but keep current node visible\n\t\t\t\t\t\tlastChild\n\t\t\t\t\t\t\t.scrollIntoView(true, { topNode: node })\n\t\t\t\t\t\t\t.always(function() {\n\t\t\t\t\t\t\t\tif (!noEvents) {\n\t\t\t\t\t\t\t\t\tctx.tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\t\tflag ? \"expand\" : \"collapse\",\n\t\t\t\t\t\t\t\t\t\tctx\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!noEvents) {\n\t\t\t\t\t\t\tctx.tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\tflag ? \"expand\" : \"collapse\",\n\t\t\t\t\t\t\t\tctx\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// vvv Code below is executed after loading finished:\n\t\t\t\t_afterLoad = function(callback) {\n\t\t\t\t\tvar cn = opts._classNames,\n\t\t\t\t\t\tisVisible,\n\t\t\t\t\t\tisExpanded,\n\t\t\t\t\t\teffect = opts.toggleEffect;\n\n\t\t\t\t\tnode.expanded = flag;\n\t\t\t\t\ttree._callHook(\n\t\t\t\t\t\t\"treeStructureChanged\",\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\tflag ? \"expand\" : \"collapse\"\n\t\t\t\t\t);\n\t\t\t\t\t// Create required markup, but make sure the top UL is hidden, so we\n\t\t\t\t\t// can animate later\n\t\t\t\t\ttree._callHook(\"nodeRender\", ctx, false, false, true);\n\n\t\t\t\t\t// Hide children, if node is collapsed\n\t\t\t\t\tif (node.ul) {\n\t\t\t\t\t\tisVisible = node.ul.style.display !== \"none\";\n\t\t\t\t\t\tisExpanded = !!node.expanded;\n\t\t\t\t\t\tif (isVisible === isExpanded) {\n\t\t\t\t\t\t\tnode.warn(\n\t\t\t\t\t\t\t\t\"nodeSetExpanded: UL.style.display already set\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (!effect || noAnimation) {\n\t\t\t\t\t\t\tnode.ul.style.display =\n\t\t\t\t\t\t\t\tnode.expanded || !parent ? \"\" : \"none\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// The UI toggle() effect works with the ext-wide extension,\n\t\t\t\t\t\t\t// while jQuery.animate() has problems when the title span\n\t\t\t\t\t\t\t// has position: absolute.\n\t\t\t\t\t\t\t// Since jQuery UI 1.12, the blind effect requires the parent\n\t\t\t\t\t\t\t// element to have 'position: relative'.\n\t\t\t\t\t\t\t// See #716, #717\n\t\t\t\t\t\t\t$(node.li).addClass(cn.animating); // #717\n\n\t\t\t\t\t\t\tif ($.isFunction($(node.ul)[effect.effect])) {\n\t\t\t\t\t\t\t\t// tree.debug( \"use jquery.\" + effect.effect + \" method\" );\n\t\t\t\t\t\t\t\t$(node.ul)[effect.effect]({\n\t\t\t\t\t\t\t\t\tduration: effect.duration,\n\t\t\t\t\t\t\t\t\talways: function() {\n\t\t\t\t\t\t\t\t\t\t// node.debug(\"fancytree-animating end: \" + node.li.className);\n\t\t\t\t\t\t\t\t\t\t$(this).removeClass(cn.animating); // #716\n\t\t\t\t\t\t\t\t\t\t$(node.li).removeClass(cn.animating); // #717\n\t\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// The UI toggle() effect works with the ext-wide extension,\n\t\t\t\t\t\t\t\t// while jQuery.animate() has problems when the title span\n\t\t\t\t\t\t\t\t// has positon: absolute.\n\t\t\t\t\t\t\t\t// Since jQuery UI 1.12, the blind effect requires the parent\n\t\t\t\t\t\t\t\t// element to have 'position: relative'.\n\t\t\t\t\t\t\t\t// See #716, #717\n\t\t\t\t\t\t\t\t// tree.debug(\"use specified effect (\" + effect.effect + \") with the jqueryui.toggle method\");\n\n\t\t\t\t\t\t\t\t// try to stop an animation that might be already in progress\n\t\t\t\t\t\t\t\t$(node.ul).stop(true, true); //< does not work after resetLazy has been called for a node whose animation wasn't complete and effect was \"blind\"\n\n\t\t\t\t\t\t\t\t// dirty fix to remove a defunct animation (effect: \"blind\") after resetLazy has been called\n\t\t\t\t\t\t\t\t$(node.ul)\n\t\t\t\t\t\t\t\t\t.parent()\n\t\t\t\t\t\t\t\t\t.find(\".ui-effects-placeholder\")\n\t\t\t\t\t\t\t\t\t.remove();\n\n\t\t\t\t\t\t\t\t$(node.ul).toggle(\n\t\t\t\t\t\t\t\t\teffect.effect,\n\t\t\t\t\t\t\t\t\teffect.options,\n\t\t\t\t\t\t\t\t\teffect.duration,\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t// node.debug(\"fancytree-animating end: \" + node.li.className);\n\t\t\t\t\t\t\t\t\t\t$(this).removeClass(cn.animating); // #716\n\t\t\t\t\t\t\t\t\t\t$(node.li).removeClass(cn.animating); // #717\n\t\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t\t};\n\t\t\t\t// ^^^ Code above is executed after loading finshed.\n\n\t\t\t\t// Load lazy nodes, if any. Then continue with _afterLoad()\n\t\t\t\tif (flag && node.lazy && node.hasChildren() === undefined) {\n\t\t\t\t\t// node.debug(\"nodeSetExpanded: load start...\");\n\t\t\t\t\tnode.load()\n\t\t\t\t\t\t.done(function() {\n\t\t\t\t\t\t\t// node.debug(\"nodeSetExpanded: load done\");\n\t\t\t\t\t\t\tif (dfd.notifyWith) {\n\t\t\t\t\t\t\t\t// requires jQuery 1.6+\n\t\t\t\t\t\t\t\tdfd.notifyWith(node, [\"loaded\"]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_afterLoad(function() {\n\t\t\t\t\t\t\t\tdfd.resolveWith(node);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.fail(function(errMsg) {\n\t\t\t\t\t\t\t_afterLoad(function() {\n\t\t\t\t\t\t\t\tdfd.rejectWith(node, [\n\t\t\t\t\t\t\t\t\t\"load failed (\" + errMsg + \")\",\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t/*\n\t\t\t\t\tvar source = tree._triggerNodeEvent(\"lazyLoad\", node, ctx.originalEvent);\n\t\t\t\t\t_assert(typeof source !== \"boolean\", \"lazyLoad event must return source in data.result\");\n\t\t\t\t\tnode.debug(\"nodeSetExpanded: load start...\");\n\t\t\t\t\tthis._callHook(\"nodeLoadChildren\", ctx, source).done(function(){\n\t\t\t\t\t\tnode.debug(\"nodeSetExpanded: load done\");\n\t\t\t\t\t\tif(dfd.notifyWith){ // requires jQuery 1.6+\n\t\t\t\t\t\t\tdfd.notifyWith(node, [\"loaded\"]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_afterLoad.call(tree);\n\t\t\t\t\t}).fail(function(errMsg){\n\t\t\t\t\t\tdfd.rejectWith(node, [\"load failed (\" + errMsg + \")\"]);\n\t\t\t\t\t});\n\t\t\t\t\t*/\n\t\t\t\t} else {\n\t\t\t\t\t_afterLoad(function() {\n\t\t\t\t\t\tdfd.resolveWith(node);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// node.debug(\"nodeSetExpanded: returns\");\n\t\t\t\treturn dfd.promise();\n\t\t\t},\n\t\t\t/** Focus or blur this node.\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} [flag=true]\n\t\t\t */\n\t\t\tnodeSetFocus: function(ctx, flag) {\n\t\t\t\t// ctx.node.debug(\"nodeSetFocus(\" + flag + \")\");\n\t\t\t\tvar ctx2,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\tnode = ctx.node,\n\t\t\t\t\topts = tree.options,\n\t\t\t\t\t// et = ctx.originalEvent && ctx.originalEvent.type,\n\t\t\t\t\tisInput = ctx.originalEvent\n\t\t\t\t\t\t? $(ctx.originalEvent.target).is(\":input\")\n\t\t\t\t\t\t: false;\n\n\t\t\t\tflag = flag !== false;\n\n\t\t\t\t// (node || tree).debug(\"nodeSetFocus(\" + flag + \"), event: \" + et + \", isInput: \"+ isInput);\n\t\t\t\t// Blur previous node if any\n\t\t\t\tif (tree.focusNode) {\n\t\t\t\t\tif (tree.focusNode === node && flag) {\n\t\t\t\t\t\t// node.debug(\"nodeSetFocus(\" + flag + \"): nothing to do\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tctx2 = $.extend({}, ctx, { node: tree.focusNode });\n\t\t\t\t\ttree.focusNode = null;\n\t\t\t\t\tthis._triggerNodeEvent(\"blur\", ctx2);\n\t\t\t\t\tthis._callHook(\"nodeRenderStatus\", ctx2);\n\t\t\t\t}\n\t\t\t\t// Set focus to container and node\n\t\t\t\tif (flag) {\n\t\t\t\t\tif (!this.hasFocus()) {\n\t\t\t\t\t\tnode.debug(\"nodeSetFocus: forcing container focus\");\n\t\t\t\t\t\tthis._callHook(\"treeSetFocus\", ctx, true, {\n\t\t\t\t\t\t\tcalledByNode: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tnode.makeVisible({ scrollIntoView: false });\n\t\t\t\t\ttree.focusNode = node;\n\t\t\t\t\tif (opts.titlesTabbable) {\n\t\t\t\t\t\tif (!isInput) {\n\t\t\t\t\t\t\t// #621\n\t\t\t\t\t\t\t$(node.span)\n\t\t\t\t\t\t\t\t.find(\".fancytree-title\")\n\t\t\t\t\t\t\t\t.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.aria) {\n\t\t\t\t\t\t// Set active descendant to node's span ID (create one, if needed)\n\t\t\t\t\t\t$(tree.$container).attr(\n\t\t\t\t\t\t\t\"aria-activedescendant\",\n\t\t\t\t\t\t\t$(node.tr || node.li)\n\t\t\t\t\t\t\t\t.uniqueId()\n\t\t\t\t\t\t\t\t.attr(\"id\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// \"ftal_\" + opts.idPrefix + node.key);\n\t\t\t\t\t}\n\t\t\t\t\t// $(node.span).find(\".fancytree-title\").focus();\n\t\t\t\t\tthis._triggerNodeEvent(\"focus\", ctx);\n\n\t\t\t\t\t// determine if we have focus on or inside tree container\n\t\t\t\t\tvar hasFancytreeFocus =\n\t\t\t\t\t\tdocument.activeElement === tree.$container.get(0) ||\n\t\t\t\t\t\t$(document.activeElement, tree.$container).length >= 1;\n\n\t\t\t\t\tif (!hasFancytreeFocus) {\n\t\t\t\t\t\t// We cannot set KB focus to a node, so use the tree container\n\t\t\t\t\t\t// #563, #570: IE scrolls on every call to .focus(), if the container\n\t\t\t\t\t\t// is partially outside the viewport. So do it only, when absolutely\n\t\t\t\t\t\t// necessary.\n\t\t\t\t\t\t$(tree.$container).focus();\n\t\t\t\t\t}\n\n\t\t\t\t\t// if( opts.autoActivate ){\n\t\t\t\t\t// \ttree.nodeSetActive(ctx, true);\n\t\t\t\t\t// }\n\t\t\t\t\tif (opts.autoScroll) {\n\t\t\t\t\t\tnode.scrollIntoView();\n\t\t\t\t\t}\n\t\t\t\t\tthis._callHook(\"nodeRenderStatus\", ctx);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** (De)Select node, return new status (sync).\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} [flag=true]\n\t\t\t * @param {object} [opts] additional options. Defaults to {noEvents: false,\n\t\t\t *     propagateDown: null, propagateUp: null,\n\t\t\t *     callback: null,\n\t\t\t *     }\n\t\t\t * @returns {boolean} previous status\n\t\t\t */\n\t\t\tnodeSetSelected: function(ctx, flag, callOpts) {\n\t\t\t\tcallOpts = callOpts || {};\n\t\t\t\tvar node = ctx.node,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\topts = ctx.options,\n\t\t\t\t\tnoEvents = callOpts.noEvents === true,\n\t\t\t\t\tparent = node.parent;\n\n\t\t\t\t// flag defaults to true\n\t\t\t\tflag = flag !== false;\n\n\t\t\t\t// node.debug(\"nodeSetSelected(\" + flag + \")\", ctx);\n\n\t\t\t\t// Cannot (de)select unselectable nodes directly (only by propagation or\n\t\t\t\t// by setting the `.selected` property)\n\t\t\t\tif (FT.evalOption(\"unselectable\", node, node, opts, false)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remember the user's intent, in case down -> up propagation prevents\n\t\t\t\t// applying it to node.selected\n\t\t\t\tnode._lastSelectIntent = flag; // Confusing use of '!'\n\n\t\t\t\t// Nothing to do?\n\t\t\t\tif (!!node.selected === flag) {\n\t\t\t\t\tif (opts.selectMode === 3 && node.partsel && !flag) {\n\t\t\t\t\t\t// If propagation prevented selecting this node last time, we still\n\t\t\t\t\t\t// want to allow to apply setSelected(false) now\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn flag;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!noEvents &&\n\t\t\t\t\tthis._triggerNodeEvent(\n\t\t\t\t\t\t\"beforeSelect\",\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tctx.originalEvent\n\t\t\t\t\t) === false\n\t\t\t\t) {\n\t\t\t\t\treturn !!node.selected;\n\t\t\t\t}\n\t\t\t\tif (flag && opts.selectMode === 1) {\n\t\t\t\t\t// single selection mode (we don't uncheck all tree nodes, for performance reasons)\n\t\t\t\t\tif (tree.lastSelectedNode) {\n\t\t\t\t\t\ttree.lastSelectedNode.setSelected(false);\n\t\t\t\t\t}\n\t\t\t\t\tnode.selected = flag;\n\t\t\t\t} else if (\n\t\t\t\t\topts.selectMode === 3 &&\n\t\t\t\t\tparent &&\n\t\t\t\t\t!parent.radiogroup &&\n\t\t\t\t\t!node.radiogroup\n\t\t\t\t) {\n\t\t\t\t\t// multi-hierarchical selection mode\n\t\t\t\t\tnode.selected = flag;\n\t\t\t\t\tnode.fixSelection3AfterClick(callOpts);\n\t\t\t\t} else if (parent && parent.radiogroup) {\n\t\t\t\t\tnode.visitSiblings(function(n) {\n\t\t\t\t\t\tn._changeSelectStatusAttrs(flag && n === node);\n\t\t\t\t\t}, true);\n\t\t\t\t} else {\n\t\t\t\t\t// default: selectMode: 2, multi selection mode\n\t\t\t\t\tnode.selected = flag;\n\t\t\t\t}\n\t\t\t\tthis.nodeRenderStatus(ctx);\n\t\t\t\ttree.lastSelectedNode = flag ? node : null;\n\t\t\t\tif (!noEvents) {\n\t\t\t\t\ttree._triggerNodeEvent(\"select\", ctx);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Show node status (ok, loading, error, nodata) using styles and a dummy child node.\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param status\n\t\t\t * @param message\n\t\t\t * @param details\n\t\t\t * @since 2.3\n\t\t\t */\n\t\t\tnodeSetStatus: function(ctx, status, message, details) {\n\t\t\t\tvar node = ctx.node,\n\t\t\t\t\ttree = ctx.tree;\n\n\t\t\t\tfunction _clearStatusNode() {\n\t\t\t\t\t// Remove dedicated dummy node, if any\n\t\t\t\t\tvar firstChild = node.children ? node.children[0] : null;\n\t\t\t\t\tif (firstChild && firstChild.isStatusNode()) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// I've seen exceptions here with loadKeyPath...\n\t\t\t\t\t\t\tif (node.ul) {\n\t\t\t\t\t\t\t\tnode.ul.removeChild(firstChild.li);\n\t\t\t\t\t\t\t\tfirstChild.li = null; // avoid leaks (DT issue 215)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\tif (node.children.length === 1) {\n\t\t\t\t\t\t\tnode.children = [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.children.shift();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttree._callHook(\n\t\t\t\t\t\t\t\"treeStructureChanged\",\n\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\"clearStatusNode\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction _setStatusNode(data, type) {\n\t\t\t\t\t// Create/modify the dedicated dummy node for 'loading...' or\n\t\t\t\t\t// 'error!' status. (only called for direct child of the invisible\n\t\t\t\t\t// system root)\n\t\t\t\t\tvar firstChild = node.children ? node.children[0] : null;\n\t\t\t\t\tif (firstChild && firstChild.isStatusNode()) {\n\t\t\t\t\t\t$.extend(firstChild, data);\n\t\t\t\t\t\tfirstChild.statusNodeType = type;\n\t\t\t\t\t\ttree._callHook(\"nodeRenderTitle\", firstChild);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode._setChildren([data]);\n\t\t\t\t\t\ttree._callHook(\n\t\t\t\t\t\t\t\"treeStructureChanged\",\n\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\"setStatusNode\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnode.children[0].statusNodeType = type;\n\t\t\t\t\t\ttree.render();\n\t\t\t\t\t}\n\t\t\t\t\treturn node.children[0];\n\t\t\t\t}\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase \"ok\":\n\t\t\t\t\t\t_clearStatusNode();\n\t\t\t\t\t\tnode._isLoading = false;\n\t\t\t\t\t\tnode._error = null;\n\t\t\t\t\t\tnode.renderStatus();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"loading\":\n\t\t\t\t\t\tif (!node.parent) {\n\t\t\t\t\t\t\t_setStatusNode(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\t\t\ttree.options.strings.loading +\n\t\t\t\t\t\t\t\t\t\t(message ? \" (\" + message + \")\" : \"\"),\n\t\t\t\t\t\t\t\t\t// icon: true,  // needed for 'loding' icon\n\t\t\t\t\t\t\t\t\tcheckbox: false,\n\t\t\t\t\t\t\t\t\ttooltip: details,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode._isLoading = true;\n\t\t\t\t\t\tnode._error = null;\n\t\t\t\t\t\tnode.renderStatus();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\t_setStatusNode(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle:\n\t\t\t\t\t\t\t\t\ttree.options.strings.loadError +\n\t\t\t\t\t\t\t\t\t(message ? \" (\" + message + \")\" : \"\"),\n\t\t\t\t\t\t\t\t// icon: false,\n\t\t\t\t\t\t\t\tcheckbox: false,\n\t\t\t\t\t\t\t\ttooltip: details,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnode._isLoading = false;\n\t\t\t\t\t\tnode._error = { message: message, details: details };\n\t\t\t\t\t\tnode.renderStatus();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"nodata\":\n\t\t\t\t\t\t_setStatusNode(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: message || tree.options.strings.noData,\n\t\t\t\t\t\t\t\t// icon: false,\n\t\t\t\t\t\t\t\tcheckbox: false,\n\t\t\t\t\t\t\t\ttooltip: details,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnode._isLoading = false;\n\t\t\t\t\t\tnode._error = null;\n\t\t\t\t\t\tnode.renderStatus();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t$.error(\"invalid node status \" + status);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeToggleExpanded: function(ctx) {\n\t\t\t\treturn this.nodeSetExpanded(ctx, !ctx.node.expanded);\n\t\t\t},\n\t\t\t/**\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\tnodeToggleSelected: function(ctx) {\n\t\t\t\tvar node = ctx.node,\n\t\t\t\t\tflag = !node.selected;\n\n\t\t\t\t// In selectMode: 3 this node may be unselected+partsel, even if\n\t\t\t\t// setSelected(true) was called before, due to `unselectable` children.\n\t\t\t\t// In this case, we now toggle as `setSelected(false)`\n\t\t\t\tif (\n\t\t\t\t\tnode.partsel &&\n\t\t\t\t\t!node.selected &&\n\t\t\t\t\tnode._lastSelectIntent === true\n\t\t\t\t) {\n\t\t\t\t\tflag = false;\n\t\t\t\t\tnode.selected = true; // so it is not considered 'nothing to do'\n\t\t\t\t}\n\t\t\t\tnode._lastSelectIntent = flag;\n\t\t\t\treturn this.nodeSetSelected(ctx, flag);\n\t\t\t},\n\t\t\t/** Remove all nodes.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\ttreeClear: function(ctx) {\n\t\t\t\tvar tree = ctx.tree;\n\t\t\t\ttree.activeNode = null;\n\t\t\t\ttree.focusNode = null;\n\t\t\t\ttree.$div.find(\">ul.fancytree-container\").empty();\n\t\t\t\t// TODO: call destructors and remove reference loops\n\t\t\t\ttree.rootNode.children = null;\n\t\t\t\ttree._callHook(\"treeStructureChanged\", ctx, \"clear\");\n\t\t\t},\n\t\t\t/** Widget was created (called only once, even it re-initialized).\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\ttreeCreate: function(ctx) {},\n\t\t\t/** Widget was destroyed.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\ttreeDestroy: function(ctx) {\n\t\t\t\tthis.$div.find(\">ul.fancytree-container\").remove();\n\t\t\t\tif (this.$source) {\n\t\t\t\t\tthis.$source.removeClass(\"fancytree-helper-hidden\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Widget was (re-)initialized.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\ttreeInit: function(ctx) {\n\t\t\t\tvar tree = ctx.tree,\n\t\t\t\t\topts = tree.options;\n\n\t\t\t\t//this.debug(\"Fancytree.treeInit()\");\n\t\t\t\t// Add container to the TAB chain\n\t\t\t\t// See http://www.w3.org/TR/wai-aria-practices/#focus_activedescendant\n\t\t\t\t// #577: Allow to set tabindex to \"0\", \"-1\" and \"\"\n\t\t\t\ttree.$container.attr(\"tabindex\", opts.tabindex);\n\n\t\t\t\t// Copy some attributes to tree.data\n\t\t\t\t$.each(TREE_ATTRS, function(i, attr) {\n\t\t\t\t\tif (opts[attr] !== undefined) {\n\t\t\t\t\t\ttree.info(\"Move option \" + attr + \" to tree\");\n\t\t\t\t\t\ttree[attr] = opts[attr];\n\t\t\t\t\t\tdelete opts[attr];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.checkboxAutoHide) {\n\t\t\t\t\ttree.$container.addClass(\"fancytree-checkbox-auto-hide\");\n\t\t\t\t}\n\t\t\t\tif (opts.rtl) {\n\t\t\t\t\ttree.$container\n\t\t\t\t\t\t.attr(\"DIR\", \"RTL\")\n\t\t\t\t\t\t.addClass(\"fancytree-rtl\");\n\t\t\t\t} else {\n\t\t\t\t\ttree.$container\n\t\t\t\t\t\t.removeAttr(\"DIR\")\n\t\t\t\t\t\t.removeClass(\"fancytree-rtl\");\n\t\t\t\t}\n\t\t\t\tif (opts.aria) {\n\t\t\t\t\ttree.$container.attr(\"role\", \"tree\");\n\t\t\t\t\tif (opts.selectMode !== 1) {\n\t\t\t\t\t\ttree.$container.attr(\"aria-multiselectable\", true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.treeLoad(ctx);\n\t\t\t},\n\t\t\t/** Parse Fancytree from source, as configured in the options.\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {object} [source] optional new source (use last data otherwise)\n\t\t\t */\n\t\t\ttreeLoad: function(ctx, source) {\n\t\t\t\tvar metaData,\n\t\t\t\t\ttype,\n\t\t\t\t\t$ul,\n\t\t\t\t\ttree = ctx.tree,\n\t\t\t\t\t$container = ctx.widget.element,\n\t\t\t\t\tdfd,\n\t\t\t\t\t// calling context for root node\n\t\t\t\t\trootCtx = $.extend({}, ctx, { node: this.rootNode });\n\n\t\t\t\tif (tree.rootNode.children) {\n\t\t\t\t\tthis.treeClear(ctx);\n\t\t\t\t}\n\t\t\t\tsource = source || this.options.source;\n\n\t\t\t\tif (!source) {\n\t\t\t\t\ttype = $container.data(\"type\") || \"html\";\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase \"html\":\n\t\t\t\t\t\t\t// There should be an embedded `<ul>` with initial nodes,\n\t\t\t\t\t\t\t// but another `<ul class='fancytree-container'>` is appended\n\t\t\t\t\t\t\t// to the tree's <div> on startup anyway.\n\t\t\t\t\t\t\t$ul = $container\n\t\t\t\t\t\t\t\t.find(\">ul\")\n\t\t\t\t\t\t\t\t.not(\".fancytree-container\")\n\t\t\t\t\t\t\t\t.first();\n\n\t\t\t\t\t\t\tif ($ul.length) {\n\t\t\t\t\t\t\t\t$ul.addClass(\n\t\t\t\t\t\t\t\t\t\"ui-fancytree-source fancytree-helper-hidden\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsource = $.ui.fancytree.parseHtml($ul);\n\t\t\t\t\t\t\t\t// allow to init tree.data.foo from <ul data-foo=''>\n\t\t\t\t\t\t\t\tthis.data = $.extend(\n\t\t\t\t\t\t\t\t\tthis.data,\n\t\t\t\t\t\t\t\t\t_getElementDataAsDict($ul)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tFT.warn(\n\t\t\t\t\t\t\t\t\t\"No `source` option was passed and container does not contain `<ul>`: assuming `source: []`.\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsource = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"json\":\n\t\t\t\t\t\t\tsource = $.parseJSON($container.text());\n\t\t\t\t\t\t\t// $container already contains the <ul>, but we remove the plain (json) text\n\t\t\t\t\t\t\t// $container.empty();\n\t\t\t\t\t\t\t$container\n\t\t\t\t\t\t\t\t.contents()\n\t\t\t\t\t\t\t\t.filter(function() {\n\t\t\t\t\t\t\t\t\treturn this.nodeType === 3;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.remove();\n\t\t\t\t\t\t\tif ($.isPlainObject(source)) {\n\t\t\t\t\t\t\t\t// We got {foo: 'abc', children: [...]}\n\t\t\t\t\t\t\t\t_assert(\n\t\t\t\t\t\t\t\t\t$.isArray(source.children),\n\t\t\t\t\t\t\t\t\t\"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmetaData = source;\n\t\t\t\t\t\t\t\tsource = source.children;\n\t\t\t\t\t\t\t\tdelete metaData.children;\n\t\t\t\t\t\t\t\t// Copy some attributes to tree.data\n\t\t\t\t\t\t\t\t$.each(TREE_ATTRS, function(i, attr) {\n\t\t\t\t\t\t\t\t\tif (metaData[attr] !== undefined) {\n\t\t\t\t\t\t\t\t\t\ttree[attr] = metaData[attr];\n\t\t\t\t\t\t\t\t\t\tdelete metaData[attr];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// Copy extra properties to tree.data.foo\n\t\t\t\t\t\t\t\t$.extend(tree.data, metaData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$.error(\"Invalid data-type: \" + type);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof source === \"string\") {\n\t\t\t\t\t// TODO: source is an element ID\n\t\t\t\t\t$.error(\"Not implemented\");\n\t\t\t\t}\n\n\t\t\t\t// preInit is fired when the widget markup is created, but nodes\n\t\t\t\t// not yet loaded\n\t\t\t\ttree._triggerTreeEvent(\"preInit\", null);\n\n\t\t\t\t// Trigger fancytreeinit after nodes have been loaded\n\t\t\t\tdfd = this.nodeLoadChildren(rootCtx, source)\n\t\t\t\t\t.done(function() {\n\t\t\t\t\t\ttree._callHook(\n\t\t\t\t\t\t\t\"treeStructureChanged\",\n\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\"loadChildren\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttree.render();\n\t\t\t\t\t\tif (ctx.options.selectMode === 3) {\n\t\t\t\t\t\t\ttree.rootNode.fixSelection3FromEndNodes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tree.activeNode && tree.options.activeVisible) {\n\t\t\t\t\t\t\ttree.activeNode.makeVisible();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttree._triggerTreeEvent(\"init\", null, { status: true });\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function() {\n\t\t\t\t\t\ttree.render();\n\t\t\t\t\t\ttree._triggerTreeEvent(\"init\", null, { status: false });\n\t\t\t\t\t});\n\t\t\t\treturn dfd;\n\t\t\t},\n\t\t\t/** Node was inserted into or removed from the tree.\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} add\n\t\t\t * @param {FancytreeNode} node\n\t\t\t */\n\t\t\ttreeRegisterNode: function(ctx, add, node) {\n\t\t\t\tctx.tree._callHook(\n\t\t\t\t\t\"treeStructureChanged\",\n\t\t\t\t\tctx,\n\t\t\t\t\tadd ? \"addNode\" : \"removeNode\"\n\t\t\t\t);\n\t\t\t},\n\t\t\t/** Widget got focus.\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {boolean} [flag=true]\n\t\t\t */\n\t\t\ttreeSetFocus: function(ctx, flag, callOpts) {\n\t\t\t\tvar targetNode;\n\n\t\t\t\tflag = flag !== false;\n\n\t\t\t\t// this.debug(\"treeSetFocus(\" + flag + \"), callOpts: \", callOpts, this.hasFocus());\n\t\t\t\t// this.debug(\"    focusNode: \" + this.focusNode);\n\t\t\t\t// this.debug(\"    activeNode: \" + this.activeNode);\n\t\t\t\tif (flag !== this.hasFocus()) {\n\t\t\t\t\tthis._hasFocus = flag;\n\t\t\t\t\tif (!flag && this.focusNode) {\n\t\t\t\t\t\t// Node also looses focus if widget blurs\n\t\t\t\t\t\tthis.focusNode.setFocus(false);\n\t\t\t\t\t} else if (flag && (!callOpts || !callOpts.calledByNode)) {\n\t\t\t\t\t\t$(this.$container).focus();\n\t\t\t\t\t}\n\t\t\t\t\tthis.$container.toggleClass(\"fancytree-treefocus\", flag);\n\t\t\t\t\tthis._triggerTreeEvent(flag ? \"focusTree\" : \"blurTree\");\n\t\t\t\t\tif (flag && !this.activeNode) {\n\t\t\t\t\t\t// #712: Use last mousedowned node ('click' event fires after focusin)\n\t\t\t\t\t\ttargetNode =\n\t\t\t\t\t\t\tthis._lastMousedownNode || this.getFirstChild();\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\ttargetNode.setFocus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Widget option was set using `$().fancytree(\"option\", \"KEY\", VALUE)`.\n\t\t\t *\n\t\t\t * Note: `key` may reference a nested option, e.g. 'dnd5.scroll'.\n\t\t\t * In this case `value`contains the complete, modified `dnd5` option hash.\n\t\t\t * We can check for changed values like\n\t\t\t *     if( value.scroll !== tree.options.dnd5.scroll ) {...}\n\t\t\t *\n\t\t\t * @param {EventData} ctx\n\t\t\t * @param {string} key option name\n\t\t\t * @param {any} value option value\n\t\t\t */\n\t\t\ttreeSetOption: function(ctx, key, value) {\n\t\t\t\tvar tree = ctx.tree,\n\t\t\t\t\tcallDefault = true,\n\t\t\t\t\tcallCreate = false,\n\t\t\t\t\tcallRender = false;\n\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase \"aria\":\n\t\t\t\t\tcase \"checkbox\":\n\t\t\t\t\tcase \"icon\":\n\t\t\t\t\tcase \"minExpandLevel\":\n\t\t\t\t\tcase \"tabindex\":\n\t\t\t\t\t\t// tree._callHook(\"treeCreate\", tree);\n\t\t\t\t\t\tcallCreate = true;\n\t\t\t\t\t\tcallRender = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"checkboxAutoHide\":\n\t\t\t\t\t\ttree.$container.toggleClass(\n\t\t\t\t\t\t\t\"fancytree-checkbox-auto-hide\",\n\t\t\t\t\t\t\t!!value\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"escapeTitles\":\n\t\t\t\t\tcase \"tooltip\":\n\t\t\t\t\t\tcallRender = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"rtl\":\n\t\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\t\ttree.$container\n\t\t\t\t\t\t\t\t.removeAttr(\"DIR\")\n\t\t\t\t\t\t\t\t.removeClass(\"fancytree-rtl\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttree.$container\n\t\t\t\t\t\t\t\t.attr(\"DIR\", \"RTL\")\n\t\t\t\t\t\t\t\t.addClass(\"fancytree-rtl\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallRender = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"source\":\n\t\t\t\t\t\tcallDefault = false;\n\t\t\t\t\t\ttree._callHook(\"treeLoad\", tree, value);\n\t\t\t\t\t\tcallRender = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttree.debug(\n\t\t\t\t\t\"set option \" +\n\t\t\t\t\t\tkey +\n\t\t\t\t\t\t\"=\" +\n\t\t\t\t\t\tvalue +\n\t\t\t\t\t\t\" <\" +\n\t\t\t\t\t\ttypeof value +\n\t\t\t\t\t\t\">\"\n\t\t\t\t);\n\t\t\t\tif (callDefault) {\n\t\t\t\t\tif (this.widget._super) {\n\t\t\t\t\t\t// jQuery UI 1.9+\n\t\t\t\t\t\tthis.widget._super.call(this.widget, key, value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// jQuery UI <= 1.8, we have to manually invoke the _setOption method from the base widget\n\t\t\t\t\t\t$.Widget.prototype._setOption.call(\n\t\t\t\t\t\t\tthis.widget,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (callCreate) {\n\t\t\t\t\ttree._callHook(\"treeCreate\", tree);\n\t\t\t\t}\n\t\t\t\tif (callRender) {\n\t\t\t\t\ttree.render(true, false); // force, not-deep\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** A Node was added, removed, moved, or it's visibility changed.\n\t\t\t * @param {EventData} ctx\n\t\t\t */\n\t\t\ttreeStructureChanged: function(ctx, type) {},\n\t\t}\n\t);\n\n\t/*******************************************************************************\n\t * jQuery UI widget boilerplate\n\t */\n\n\t/**\n\t * The plugin (derrived from [jQuery.Widget](http://api.jqueryui.com/jQuery.widget/)).\n\t *\n\t * **Note:**\n\t * These methods implement the standard jQuery UI widget API.\n\t * It is recommended to use methods of the {Fancytree} instance instead\n\t *\n\t * @example\n\t * // DEPRECATED: Access jQuery UI widget methods and members:\n\t * var tree = $(\"#tree\").fancytree(\"getTree\", \"#myTree\");\n\t * var node = $.ui.fancytree.getTree(\"#tree\").getActiveNode();\n\t *\n\t * // RECOMMENDED: Use the Fancytree object API\n\t * var tree = $.ui.fancytree.getTree(\"#myTree\");\n\t * var node = tree.getActiveNode();\n\t *\n\t * // or you may already have stored the tree instance upon creation:\n\t * import {createTree, version} from 'jquery.fancytree'\n\t * const tree = createTree('#tree', { ... });\n\t * var node = tree.getActiveNode();\n\t *\n\t * @see {Fancytree_Static#getTree}\n\t * @deprecated Use methods of the {Fancytree} instance instead\n\t * @mixin Fancytree_Widget\n\t */\n\n\t$.widget(\n\t\t\"ui.fancytree\",\n\t\t/** @lends Fancytree_Widget# */\n\t\t{\n\t\t\t/**These options will be used as defaults\n\t\t\t * @type {FancytreeOptions}\n\t\t\t */\n\t\t\toptions: {\n\t\t\t\tactiveVisible: true,\n\t\t\t\tajax: {\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\tcache: false, // false: Append random '_' argument to the request url to prevent caching.\n\t\t\t\t\t// timeout: 0, // >0: Make sure we get an ajax error if server is unreachable\n\t\t\t\t\tdataType: \"json\", // Expect json format and pass json object to callbacks.\n\t\t\t\t},\n\t\t\t\taria: true,\n\t\t\t\tautoActivate: true,\n\t\t\t\tautoCollapse: false,\n\t\t\t\tautoScroll: false,\n\t\t\t\tcheckbox: false,\n\t\t\t\tclickFolderMode: 4,\n\t\t\t\tcopyFunctionsToData: false,\n\t\t\t\tdebugLevel: null, // 0..4 (null: use global setting $.ui.fancytree.debugLevel)\n\t\t\t\tdisabled: false, // TODO: required anymore?\n\t\t\t\tenableAspx: 42, // TODO: this is truethy, but distinguishable from true: default will change to false in the future\n\t\t\t\tescapeTitles: false,\n\t\t\t\textensions: [],\n\t\t\t\tfocusOnSelect: false,\n\t\t\t\tgenerateIds: false,\n\t\t\t\ticon: true,\n\t\t\t\tidPrefix: \"ft_\",\n\t\t\t\tkeyboard: true,\n\t\t\t\tkeyPathSeparator: \"/\",\n\t\t\t\tminExpandLevel: 1,\n\t\t\t\tnodata: true, // (bool, string, or callback) display message, when no data available\n\t\t\t\tquicksearch: false,\n\t\t\t\trtl: false,\n\t\t\t\tscrollOfs: { top: 0, bottom: 0 },\n\t\t\t\tscrollParent: null,\n\t\t\t\tselectMode: 2,\n\t\t\t\tstrings: {\n\t\t\t\t\tloading: \"Loading...\", // &#8230; would be escaped when escapeTitles is true\n\t\t\t\t\tloadError: \"Load error!\",\n\t\t\t\t\tmoreData: \"More...\",\n\t\t\t\t\tnoData: \"No data.\",\n\t\t\t\t},\n\t\t\t\ttabindex: \"0\",\n\t\t\t\ttitlesTabbable: false,\n\t\t\t\ttoggleEffect: { effect: \"slideToggle\", duration: 200 }, //< \"toggle\" or \"slideToggle\" to use jQuery instead of jQueryUI for toggleEffect animation\n\t\t\t\ttooltip: false,\n\t\t\t\ttreeId: null,\n\t\t\t\t_classNames: {\n\t\t\t\t\tactive: \"fancytree-active\",\n\t\t\t\t\tanimating: \"fancytree-animating\",\n\t\t\t\t\tcombinedExpanderPrefix: \"fancytree-exp-\",\n\t\t\t\t\tcombinedIconPrefix: \"fancytree-ico-\",\n\t\t\t\t\terror: \"fancytree-error\",\n\t\t\t\t\texpanded: \"fancytree-expanded\",\n\t\t\t\t\tfocused: \"fancytree-focused\",\n\t\t\t\t\tfolder: \"fancytree-folder\",\n\t\t\t\t\thasChildren: \"fancytree-has-children\",\n\t\t\t\t\tlastsib: \"fancytree-lastsib\",\n\t\t\t\t\tlazy: \"fancytree-lazy\",\n\t\t\t\t\tloading: \"fancytree-loading\",\n\t\t\t\t\tnode: \"fancytree-node\",\n\t\t\t\t\tpartload: \"fancytree-partload\",\n\t\t\t\t\tpartsel: \"fancytree-partsel\",\n\t\t\t\t\tradio: \"fancytree-radio\",\n\t\t\t\t\tselected: \"fancytree-selected\",\n\t\t\t\t\tstatusNodePrefix: \"fancytree-statusnode-\",\n\t\t\t\t\tunselectable: \"fancytree-unselectable\",\n\t\t\t\t},\n\t\t\t\t// events\n\t\t\t\tlazyLoad: null,\n\t\t\t\tpostProcess: null,\n\t\t\t},\n\t\t\t_deprecationWarning: function(name) {\n\t\t\t\tvar tree = this.tree;\n\n\t\t\t\tif (tree && tree.options.debugLevel >= 3) {\n\t\t\t\t\ttree.warn(\n\t\t\t\t\t\t\"$().fancytree('\" +\n\t\t\t\t\t\t\tname +\n\t\t\t\t\t\t\t\"') is deprecated (see https://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Widget.html\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/* Set up the widget, Called on first $().fancytree() */\n\t\t\t_create: function() {\n\t\t\t\tthis.tree = new Fancytree(this);\n\n\t\t\t\tthis.$source =\n\t\t\t\t\tthis.source || this.element.data(\"type\") === \"json\"\n\t\t\t\t\t\t? this.element\n\t\t\t\t\t\t: this.element.find(\">ul\").first();\n\t\t\t\t// Subclass Fancytree instance with all enabled extensions\n\t\t\t\tvar extension,\n\t\t\t\t\textName,\n\t\t\t\t\ti,\n\t\t\t\t\topts = this.options,\n\t\t\t\t\textensions = opts.extensions,\n\t\t\t\t\tbase = this.tree;\n\n\t\t\t\tfor (i = 0; i < extensions.length; i++) {\n\t\t\t\t\textName = extensions[i];\n\t\t\t\t\textension = $.ui.fancytree._extensions[extName];\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\t$.error(\n\t\t\t\t\t\t\t\"Could not apply extension '\" +\n\t\t\t\t\t\t\t\textName +\n\t\t\t\t\t\t\t\t\"' (it is not registered, did you forget to include it?)\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Add extension options as tree.options.EXTENSION\n\t\t\t\t\t// \t_assert(!this.tree.options[extName], \"Extension name must not exist as option name: \" + extName);\n\n\t\t\t\t\t// console.info(\"extend \" + extName, extension.options, this.tree.options[extName])\n\t\t\t\t\t// issue #876: we want to replace custom array-options, not merge them\n\t\t\t\t\tthis.tree.options[extName] = _simpleDeepMerge(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\textension.options,\n\t\t\t\t\t\tthis.tree.options[extName]\n\t\t\t\t\t);\n\t\t\t\t\t// this.tree.options[extName] = $.extend(true, {}, extension.options, this.tree.options[extName]);\n\n\t\t\t\t\t// console.info(\"extend \" + extName + \" =>\", this.tree.options[extName])\n\t\t\t\t\t// console.info(\"extend \" + extName + \" org default =>\", extension.options)\n\n\t\t\t\t\t// Add a namespace tree.ext.EXTENSION, to hold instance data\n\t\t\t\t\t_assert(\n\t\t\t\t\t\tthis.tree.ext[extName] === undefined,\n\t\t\t\t\t\t\"Extension name must not exist as Fancytree.ext attribute: '\" +\n\t\t\t\t\t\t\textName +\n\t\t\t\t\t\t\t\"'\"\n\t\t\t\t\t);\n\t\t\t\t\t// this.tree[extName] = extension;\n\t\t\t\t\tthis.tree.ext[extName] = {};\n\t\t\t\t\t// Subclass Fancytree methods using proxies.\n\t\t\t\t\t_subclassObject(this.tree, base, extension, extName);\n\t\t\t\t\t// current extension becomes base for the next extension\n\t\t\t\t\tbase = extension;\n\t\t\t\t}\n\t\t\t\t//\n\t\t\t\tif (opts.icons !== undefined) {\n\t\t\t\t\t// 2015-11-16\n\t\t\t\t\tif (opts.icon === true) {\n\t\t\t\t\t\tthis.tree.warn(\n\t\t\t\t\t\t\t\"'icons' tree option is deprecated since v2.14.0: use 'icon' instead\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\topts.icon = opts.icons;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$.error(\n\t\t\t\t\t\t\t\"'icons' tree option is deprecated since v2.14.0: use 'icon' only instead\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (opts.iconClass !== undefined) {\n\t\t\t\t\t// 2015-11-16\n\t\t\t\t\tif (opts.icon) {\n\t\t\t\t\t\t$.error(\n\t\t\t\t\t\t\t\"'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.tree.warn(\n\t\t\t\t\t\t\t\"'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\topts.icon = opts.iconClass;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (opts.tabbable !== undefined) {\n\t\t\t\t\t// 2016-04-04\n\t\t\t\t\topts.tabindex = opts.tabbable ? \"0\" : \"-1\";\n\t\t\t\t\tthis.tree.warn(\n\t\t\t\t\t\t\"'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='\" +\n\t\t\t\t\t\t\topts.tabindex +\n\t\t\t\t\t\t\t\"' instead\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t//\n\t\t\t\tthis.tree._callHook(\"treeCreate\", this.tree);\n\t\t\t\t// Note: 'fancytreecreate' event is fired by widget base class\n\t\t\t\t//        this.tree._triggerTreeEvent(\"create\");\n\t\t\t},\n\n\t\t\t/* Called on every $().fancytree() */\n\t\t\t_init: function() {\n\t\t\t\tthis.tree._callHook(\"treeInit\", this.tree);\n\t\t\t\t// TODO: currently we call bind after treeInit, because treeInit\n\t\t\t\t// might change tree.$container.\n\t\t\t\t// It would be better, to move event binding into hooks altogether\n\t\t\t\tthis._bind();\n\t\t\t},\n\n\t\t\t/* Use the _setOption method to respond to changes to options. */\n\t\t\t_setOption: function(key, value) {\n\t\t\t\treturn this.tree._callHook(\n\t\t\t\t\t\"treeSetOption\",\n\t\t\t\t\tthis.tree,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/** Use the destroy method to clean up any modifications your widget has made to the DOM */\n\t\t\t_destroy: function() {\n\t\t\t\tthis._unbind();\n\t\t\t\tthis.tree._callHook(\"treeDestroy\", this.tree);\n\t\t\t\t// In jQuery UI 1.8, you must invoke the destroy method from the base widget\n\t\t\t\t// $.Widget.prototype.destroy.call(this);\n\t\t\t\t// TODO: delete tree and nodes to make garbage collect easier?\n\t\t\t\t// TODO: In jQuery UI 1.9 and above, you would define _destroy instead of destroy and not call the base method\n\t\t\t},\n\n\t\t\t// -------------------------------------------------------------------------\n\n\t\t\t/* Remove all event handlers for our namespace */\n\t\t\t_unbind: function() {\n\t\t\t\tvar ns = this.tree._ns;\n\t\t\t\tthis.element.off(ns);\n\t\t\t\tthis.tree.$container.off(ns);\n\t\t\t\t$(document).off(ns);\n\t\t\t},\n\t\t\t/* Add mouse and kyboard handlers to the container */\n\t\t\t_bind: function() {\n\t\t\t\tvar self = this,\n\t\t\t\t\topts = this.options,\n\t\t\t\t\ttree = this.tree,\n\t\t\t\t\tns = tree._ns;\n\t\t\t\t// selstartEvent = ( $.support.selectstart ? \"selectstart\" : \"mousedown\" )\n\n\t\t\t\t// Remove all previuous handlers for this tree\n\t\t\t\tthis._unbind();\n\n\t\t\t\t//alert(\"keydown\" + ns + \"foc=\" + tree.hasFocus() + tree.$container);\n\t\t\t\t// tree.debug(\"bind events; container: \", tree.$container);\n\t\t\t\ttree.$container\n\t\t\t\t\t.on(\"focusin\" + ns + \" focusout\" + ns, function(event) {\n\t\t\t\t\t\tvar node = FT.getNode(event),\n\t\t\t\t\t\t\tflag = event.type === \"focusin\";\n\n\t\t\t\t\t\tif (!flag && node && $(event.target).is(\"a\")) {\n\t\t\t\t\t\t\t// #764\n\t\t\t\t\t\t\tnode.debug(\n\t\t\t\t\t\t\t\t\"Ignored focusout on embedded <a> element.\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// tree.treeOnFocusInOut.call(tree, event);\n\t\t\t\t\t\t// tree.debug(\"Tree container got event \" + event.type, node, event, FT.getEventTarget(event));\n\t\t\t\t\t\tif (flag) {\n\t\t\t\t\t\t\tif (tree._getExpiringValue(\"focusin\")) {\n\t\t\t\t\t\t\t\t// #789: IE 11 may send duplicate focusin events\n\t\t\t\t\t\t\t\ttree.debug(\"Ignored double focusin.\");\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttree._setExpiringValue(\"focusin\", true, 50);\n\n\t\t\t\t\t\t\tif (!node) {\n\t\t\t\t\t\t\t\t// #789: IE 11 may send focusin before mousdown(?)\n\t\t\t\t\t\t\t\tnode = tree._getExpiringValue(\"mouseDownNode\");\n\t\t\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\t\t\ttree.debug(\n\t\t\t\t\t\t\t\t\t\t\"Reconstruct mouse target for focusin from recent event.\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\t// For example clicking into an <input> that is part of a node\n\t\t\t\t\t\t\ttree._callHook(\n\t\t\t\t\t\t\t\t\"nodeSetFocus\",\n\t\t\t\t\t\t\t\ttree._makeHookContext(node, event),\n\t\t\t\t\t\t\t\tflag\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttree.tbody &&\n\t\t\t\t\t\t\t\t$(event.target).parents(\n\t\t\t\t\t\t\t\t\t\"table.fancytree-container > thead\"\n\t\t\t\t\t\t\t\t).length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// #767: ignore events in the table's header\n\t\t\t\t\t\t\t\ttree.debug(\n\t\t\t\t\t\t\t\t\t\"Ignore focus event outside table body.\",\n\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttree._callHook(\"treeSetFocus\", tree, flag);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"selectstart\" + ns, \"span.fancytree-title\", function(\n\t\t\t\t\t\tevent\n\t\t\t\t\t) {\n\t\t\t\t\t\t// prevent mouse-drags to select text ranges\n\t\t\t\t\t\t// tree.debug(\"<span title> got event \" + event.type);\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"keydown\" + ns, function(event) {\n\t\t\t\t\t\t// TODO: also bind keyup and keypress\n\t\t\t\t\t\t// tree.debug(\"got event \" + event.type + \", hasFocus:\" + tree.hasFocus());\n\t\t\t\t\t\t// if(opts.disabled || opts.keyboard === false || !tree.hasFocus() ){\n\t\t\t\t\t\tif (opts.disabled || opts.keyboard === false) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar res,\n\t\t\t\t\t\t\tnode = tree.focusNode, // node may be null\n\t\t\t\t\t\t\tctx = tree._makeHookContext(node || tree, event),\n\t\t\t\t\t\t\tprevPhase = tree.phase;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\ttree.phase = \"userEvent\";\n\t\t\t\t\t\t\t// If a 'fancytreekeydown' handler returns false, skip the default\n\t\t\t\t\t\t\t// handling (implemented by tree.nodeKeydown()).\n\t\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\t\tres = tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\t\"keydown\",\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tres = tree._triggerTreeEvent(\"keydown\", event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (res === \"preventNav\") {\n\t\t\t\t\t\t\t\tres = true; // prevent keyboard navigation, but don't prevent default handling of embedded input controls\n\t\t\t\t\t\t\t} else if (res !== false) {\n\t\t\t\t\t\t\t\tres = tree._callHook(\"nodeKeydown\", ctx);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttree.phase = prevPhase;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"mousedown\" + ns, function(event) {\n\t\t\t\t\t\tvar et = FT.getEventTarget(event);\n\t\t\t\t\t\t// self.tree.debug(\"event(\" + event.type + \"): node: \", et.node);\n\t\t\t\t\t\t// #712: Store the clicked node, so we can use it when we get a focusin event\n\t\t\t\t\t\t//       ('click' event fires after focusin)\n\t\t\t\t\t\t// tree.debug(\"event(\" + event.type + \"): node: \", et.node);\n\t\t\t\t\t\ttree._lastMousedownNode = et ? et.node : null;\n\t\t\t\t\t\t// #789: Store the node also for a short period, so we can use it\n\t\t\t\t\t\t// in a *resulting* focusin event\n\t\t\t\t\t\ttree._setExpiringValue(\n\t\t\t\t\t\t\t\"mouseDownNode\",\n\t\t\t\t\t\t\ttree._lastMousedownNode\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.on(\"click\" + ns + \" dblclick\" + ns, function(event) {\n\t\t\t\t\t\tif (opts.disabled) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar ctx,\n\t\t\t\t\t\t\tet = FT.getEventTarget(event),\n\t\t\t\t\t\t\tnode = et.node,\n\t\t\t\t\t\t\ttree = self.tree,\n\t\t\t\t\t\t\tprevPhase = tree.phase;\n\n\t\t\t\t\t\t// self.tree.debug(\"event(\" + event.type + \"): node: \", node);\n\t\t\t\t\t\tif (!node) {\n\t\t\t\t\t\t\treturn true; // Allow bubbling of other events\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx = tree._makeHookContext(node, event);\n\t\t\t\t\t\t// self.tree.debug(\"event(\" + event.type + \"): node: \", node);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\ttree.phase = \"userEvent\";\n\t\t\t\t\t\t\tswitch (event.type) {\n\t\t\t\t\t\t\t\tcase \"click\":\n\t\t\t\t\t\t\t\t\tctx.targetType = et.type;\n\t\t\t\t\t\t\t\t\tif (node.isPagingNode()) {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\ttree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\t\t\t\t\"clickPaging\",\n\t\t\t\t\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t\t\t\t) === true\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\t\t\"click\",\n\t\t\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t\t) === false\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: tree._callHook(\"nodeClick\", ctx);\n\t\t\t\t\t\t\t\tcase \"dblclick\":\n\t\t\t\t\t\t\t\t\tctx.targetType = et.type;\n\t\t\t\t\t\t\t\t\treturn tree._triggerNodeEvent(\n\t\t\t\t\t\t\t\t\t\t\"dblclick\",\n\t\t\t\t\t\t\t\t\t\tctx,\n\t\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t\t) === false\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: tree._callHook(\"nodeDblclick\", ctx);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttree.phase = prevPhase;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t},\n\t\t\t/** Return the active node or null.\n\t\t\t * @returns {FancytreeNode}\n\t\t\t * @deprecated Use methods of the Fancytree instance instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n\t\t\t */\n\t\t\tgetActiveNode: function() {\n\t\t\t\tthis._deprecationWarning(\"getActiveNode\");\n\t\t\t\treturn this.tree.activeNode;\n\t\t\t},\n\t\t\t/** Return the matching node or null.\n\t\t\t * @param {string} key\n\t\t\t * @returns {FancytreeNode}\n\t\t\t * @deprecated Use methods of the Fancytree instance instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n\t\t\t */\n\t\t\tgetNodeByKey: function(key) {\n\t\t\t\tthis._deprecationWarning(\"getNodeByKey\");\n\t\t\t\treturn this.tree.getNodeByKey(key);\n\t\t\t},\n\t\t\t/** Return the invisible system root node.\n\t\t\t * @returns {FancytreeNode}\n\t\t\t * @deprecated Use methods of the Fancytree instance instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n\t\t\t */\n\t\t\tgetRootNode: function() {\n\t\t\t\tthis._deprecationWarning(\"getRootNode\");\n\t\t\t\treturn this.tree.rootNode;\n\t\t\t},\n\t\t\t/** Return the current tree instance.\n\t\t\t * @returns {Fancytree}\n\t\t\t * @deprecated Use `$.ui.fancytree.getTree()` instead (<a href=\"Fancytree_Widget.html\">example above</a>).\n\t\t\t */\n\t\t\tgetTree: function() {\n\t\t\t\tthis._deprecationWarning(\"getTree\");\n\t\t\t\treturn this.tree;\n\t\t\t},\n\t\t}\n\t);\n\n\t// $.ui.fancytree was created by the widget factory. Create a local shortcut:\n\tFT = $.ui.fancytree;\n\n\t/**\n\t * Static members in the `$.ui.fancytree` namespace.\n\t * This properties and methods can be accessed without instantiating a concrete\n\t * Fancytree instance.\n\t *\n\t * @example\n\t * // Access static members:\n\t * var node = $.ui.fancytree.getNode(element);\n\t * alert($.ui.fancytree.version);\n\t *\n\t * @mixin Fancytree_Static\n\t */\n\t$.extend(\n\t\t$.ui.fancytree,\n\t\t/** @lends Fancytree_Static# */\n\t\t{\n\t\t\t/** Version number `\"MAJOR.MINOR.PATCH\"`\n\t\t\t * @type {string} */\n\t\t\tversion: \"2.37.0\", // Set to semver by 'grunt release'\n\t\t\t/** @type {string}\n\t\t\t * @description `\"production\" for release builds` */\n\t\t\tbuildType: \"production\", // Set to 'production' by 'grunt build'\n\t\t\t/** @type {int}\n\t\t\t * @description 0: silent .. 5: verbose (default: 3 for release builds). */\n\t\t\tdebugLevel: 3, // Set to 3 by 'grunt build'\n\t\t\t// Used by $.ui.fancytree.debug() and as default for tree.options.debugLevel\n\n\t\t\t_nextId: 1,\n\t\t\t_nextNodeKey: 1,\n\t\t\t_extensions: {},\n\t\t\t// focusTree: null,\n\n\t\t\t/** Expose class object as `$.ui.fancytree._FancytreeClass`.\n\t\t\t * Useful to extend `$.ui.fancytree._FancytreeClass.prototype`.\n\t\t\t * @type {Fancytree}\n\t\t\t */\n\t\t\t_FancytreeClass: Fancytree,\n\t\t\t/** Expose class object as $.ui.fancytree._FancytreeNodeClass\n\t\t\t * Useful to extend `$.ui.fancytree._FancytreeNodeClass.prototype`.\n\t\t\t * @type {FancytreeNode}\n\t\t\t */\n\t\t\t_FancytreeNodeClass: FancytreeNode,\n\t\t\t/* Feature checks to provide backwards compatibility */\n\t\t\tjquerySupports: {\n\t\t\t\t// http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\n\t\t\t\tpositionMyOfs: isVersionAtLeast($.ui.version, 1, 9),\n\t\t\t},\n\t\t\t/** Throw an error if condition fails (debug method).\n\t\t\t * @param {boolean} cond\n\t\t\t * @param {string} msg\n\t\t\t */\n\t\t\tassert: function(cond, msg) {\n\t\t\t\treturn _assert(cond, msg);\n\t\t\t},\n\t\t\t/** Create a new Fancytree instance on a target element.\n\t\t\t *\n\t\t\t * @param {Element | jQueryObject | string} el Target DOM element or selector\n\t\t\t * @param {FancytreeOptions} [opts] Fancytree options\n\t\t\t * @returns {Fancytree} new tree instance\n\t\t\t * @example\n\t\t\t * var tree = $.ui.fancytree.createTree(\"#tree\", {\n\t\t\t *     source: {url: \"my/webservice\"}\n\t\t\t * }); // Create tree for this matching element\n\t\t\t *\n\t\t\t * @since 2.25\n\t\t\t */\n\t\t\tcreateTree: function(el, opts) {\n\t\t\t\tvar $tree = $(el).fancytree(opts);\n\t\t\t\treturn FT.getTree($tree);\n\t\t\t},\n\t\t\t/** Return a function that executes *fn* at most every *timeout* ms.\n\t\t\t * @param {integer} timeout\n\t\t\t * @param {function} fn\n\t\t\t * @param {boolean} [invokeAsap=false]\n\t\t\t * @param {any} [ctx]\n\t\t\t */\n\t\t\tdebounce: function(timeout, fn, invokeAsap, ctx) {\n\t\t\t\tvar timer;\n\t\t\t\tif (arguments.length === 3 && typeof invokeAsap !== \"boolean\") {\n\t\t\t\t\tctx = invokeAsap;\n\t\t\t\t\tinvokeAsap = false;\n\t\t\t\t}\n\t\t\t\treturn function() {\n\t\t\t\t\tvar args = arguments;\n\t\t\t\t\tctx = ctx || this;\n\t\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\t\tinvokeAsap && !timer && fn.apply(ctx, args);\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\ttimer = setTimeout(function() {\n\t\t\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\t\t\tinvokeAsap || fn.apply(ctx, args);\n\t\t\t\t\t\ttimer = null;\n\t\t\t\t\t}, timeout);\n\t\t\t\t};\n\t\t\t},\n\t\t\t/** Write message to console if debugLevel >= 4\n\t\t\t * @param {string} msg\n\t\t\t */\n\t\t\tdebug: function(msg) {\n\t\t\t\tif ($.ui.fancytree.debugLevel >= 4) {\n\t\t\t\t\tconsoleApply(\"log\", arguments);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Write error message to console if debugLevel >= 1.\n\t\t\t * @param {string} msg\n\t\t\t */\n\t\t\terror: function(msg) {\n\t\t\t\tif ($.ui.fancytree.debugLevel >= 1) {\n\t\t\t\t\tconsoleApply(\"error\", arguments);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Convert `<`, `>`, `&`, `\"`, `'`, and `/` to the equivalent entities.\n\t\t\t *\n\t\t\t * @param {string} s\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tescapeHtml: function(s) {\n\t\t\t\treturn (\"\" + s).replace(REX_HTML, function(s) {\n\t\t\t\t\treturn ENTITY_MAP[s];\n\t\t\t\t});\n\t\t\t},\n\t\t\t/** Make jQuery.position() arguments backwards compatible, i.e. if\n\t\t\t * jQuery UI version <= 1.8, convert\n\t\t\t *   { my: \"left+3 center\", at: \"left bottom\", of: $target }\n\t\t\t * to\n\t\t\t *   { my: \"left center\", at: \"left bottom\", of: $target, offset: \"3  0\" }\n\t\t\t *\n\t\t\t * See http://jqueryui.com/upgrade-guide/1.9/#deprecated-offset-option-merged-into-my-and-at\n\t\t\t * and http://jsfiddle.net/mar10/6xtu9a4e/\n\t\t\t *\n\t\t\t * @param {object} opts\n\t\t\t * @returns {object} the (potentially modified) original opts hash object\n\t\t\t */\n\t\t\tfixPositionOptions: function(opts) {\n\t\t\t\tif (opts.offset || (\"\" + opts.my + opts.at).indexOf(\"%\") >= 0) {\n\t\t\t\t\t$.error(\n\t\t\t\t\t\t\"expected new position syntax (but '%' is not supported)\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!$.ui.fancytree.jquerySupports.positionMyOfs) {\n\t\t\t\t\tvar // parse 'left+3 center' into ['left+3 center', 'left', '+3', 'center', undefined]\n\t\t\t\t\t\tmyParts = /(\\w+)([+-]?\\d+)?\\s+(\\w+)([+-]?\\d+)?/.exec(\n\t\t\t\t\t\t\topts.my\n\t\t\t\t\t\t),\n\t\t\t\t\t\tatParts = /(\\w+)([+-]?\\d+)?\\s+(\\w+)([+-]?\\d+)?/.exec(\n\t\t\t\t\t\t\topts.at\n\t\t\t\t\t\t),\n\t\t\t\t\t\t// convert to numbers\n\t\t\t\t\t\tdx =\n\t\t\t\t\t\t\t(myParts[2] ? +myParts[2] : 0) +\n\t\t\t\t\t\t\t(atParts[2] ? +atParts[2] : 0),\n\t\t\t\t\t\tdy =\n\t\t\t\t\t\t\t(myParts[4] ? +myParts[4] : 0) +\n\t\t\t\t\t\t\t(atParts[4] ? +atParts[4] : 0);\n\n\t\t\t\t\topts = $.extend({}, opts, {\n\t\t\t\t\t\t// make a copy and overwrite\n\t\t\t\t\t\tmy: myParts[1] + \" \" + myParts[3],\n\t\t\t\t\t\tat: atParts[1] + \" \" + atParts[3],\n\t\t\t\t\t});\n\t\t\t\t\tif (dx || dy) {\n\t\t\t\t\t\topts.offset = \"\" + dx + \" \" + dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn opts;\n\t\t\t},\n\t\t\t/** Return a {node: FancytreeNode, type: TYPE} object for a mouse event.\n\t\t\t *\n\t\t\t * @param {Event} event Mouse event, e.g. click, ...\n\t\t\t * @returns {object} Return a {node: FancytreeNode, type: TYPE} object\n\t\t\t *     TYPE: 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon' | undefined\n\t\t\t */\n\t\t\tgetEventTarget: function(event) {\n\t\t\t\tvar $target,\n\t\t\t\t\ttree,\n\t\t\t\t\ttcn = event && event.target ? event.target.className : \"\",\n\t\t\t\t\tres = { node: this.getNode(event.target), type: undefined };\n\t\t\t\t// We use a fast version of $(res.node).hasClass()\n\t\t\t\t// See http://jsperf.com/test-for-classname/2\n\t\t\t\tif (/\\bfancytree-title\\b/.test(tcn)) {\n\t\t\t\t\tres.type = \"title\";\n\t\t\t\t} else if (/\\bfancytree-expander\\b/.test(tcn)) {\n\t\t\t\t\tres.type =\n\t\t\t\t\t\tres.node.hasChildren() === false\n\t\t\t\t\t\t\t? \"prefix\"\n\t\t\t\t\t\t\t: \"expander\";\n\t\t\t\t\t// }else if( /\\bfancytree-checkbox\\b/.test(tcn) || /\\bfancytree-radio\\b/.test(tcn) ){\n\t\t\t\t} else if (/\\bfancytree-checkbox\\b/.test(tcn)) {\n\t\t\t\t\tres.type = \"checkbox\";\n\t\t\t\t} else if (/\\bfancytree(-custom)?-icon\\b/.test(tcn)) {\n\t\t\t\t\tres.type = \"icon\";\n\t\t\t\t} else if (/\\bfancytree-node\\b/.test(tcn)) {\n\t\t\t\t\t// Somewhere near the title\n\t\t\t\t\tres.type = \"title\";\n\t\t\t\t} else if (event && event.target) {\n\t\t\t\t\t$target = $(event.target);\n\t\t\t\t\tif ($target.is(\"ul[role=group]\")) {\n\t\t\t\t\t\t// #nnn: Clicking right to a node may hit the surrounding UL\n\t\t\t\t\t\ttree = res.node && res.node.tree;\n\t\t\t\t\t\t(tree || FT).debug(\"Ignoring click on outer UL.\");\n\t\t\t\t\t\tres.node = null;\n\t\t\t\t\t} else if ($target.closest(\".fancytree-title\").length) {\n\t\t\t\t\t\t// #228: clicking an embedded element inside a title\n\t\t\t\t\t\tres.type = \"title\";\n\t\t\t\t\t} else if ($target.closest(\".fancytree-checkbox\").length) {\n\t\t\t\t\t\t// E.g. <svg> inside checkbox span\n\t\t\t\t\t\tres.type = \"checkbox\";\n\t\t\t\t\t} else if ($target.closest(\".fancytree-expander\").length) {\n\t\t\t\t\t\tres.type = \"expander\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\t/** Return a string describing the affected node region for a mouse event.\n\t\t\t *\n\t\t\t * @param {Event} event Mouse event, e.g. click, mousemove, ...\n\t\t\t * @returns {string} 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon' | undefined\n\t\t\t */\n\t\t\tgetEventTargetType: function(event) {\n\t\t\t\treturn this.getEventTarget(event).type;\n\t\t\t},\n\t\t\t/** Return a FancytreeNode instance from element, event, or jQuery object.\n\t\t\t *\n\t\t\t * @param {Element | jQueryObject | Event} el\n\t\t\t * @returns {FancytreeNode} matching node or null\n\t\t\t */\n\t\t\tgetNode: function(el) {\n\t\t\t\tif (el instanceof FancytreeNode) {\n\t\t\t\t\treturn el; // el already was a FancytreeNode\n\t\t\t\t} else if (el instanceof $) {\n\t\t\t\t\tel = el[0]; // el was a jQuery object: use the DOM element\n\t\t\t\t} else if (el.originalEvent !== undefined) {\n\t\t\t\t\tel = el.target; // el was an Event\n\t\t\t\t}\n\t\t\t\twhile (el) {\n\t\t\t\t\tif (el.ftnode) {\n\t\t\t\t\t\treturn el.ftnode;\n\t\t\t\t\t}\n\t\t\t\t\tel = el.parentNode;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t/** Return a Fancytree instance, from element, index, event, or jQueryObject.\n\t\t\t *\n\t\t\t * @param {Element | jQueryObject | Event | integer | string} [el]\n\t\t\t * @returns {Fancytree} matching tree or null\n\t\t\t * @example\n\t\t\t * $.ui.fancytree.getTree();  // Get first Fancytree instance on page\n\t\t\t * $.ui.fancytree.getTree(1);  // Get second Fancytree instance on page\n\t\t\t * $.ui.fancytree.getTree(event);  // Get tree for this mouse- or keyboard event\n\t\t\t * $.ui.fancytree.getTree(\"foo\");  // Get tree for this `opts.treeId`\n\t\t\t * $.ui.fancytree.getTree(\"#tree\");  // Get tree for this matching element\n\t\t\t *\n\t\t\t * @since 2.13\n\t\t\t */\n\t\t\tgetTree: function(el) {\n\t\t\t\tvar widget,\n\t\t\t\t\torgEl = el;\n\n\t\t\t\tif (el instanceof Fancytree) {\n\t\t\t\t\treturn el; // el already was a Fancytree\n\t\t\t\t}\n\t\t\t\tif (el === undefined) {\n\t\t\t\t\tel = 0; // get first tree\n\t\t\t\t}\n\t\t\t\tif (typeof el === \"number\") {\n\t\t\t\t\tel = $(\".fancytree-container\").eq(el); // el was an integer: return nth instance\n\t\t\t\t} else if (typeof el === \"string\") {\n\t\t\t\t\t// `el` may be a treeId or a selector:\n\t\t\t\t\tel = $(\"#ft-id-\" + orgEl).eq(0);\n\t\t\t\t\tif (!el.length) {\n\t\t\t\t\t\tel = $(orgEl).eq(0); // el was a selector: use first match\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tel instanceof Element ||\n\t\t\t\t\tel instanceof HTMLDocument\n\t\t\t\t) {\n\t\t\t\t\tel = $(el);\n\t\t\t\t} else if (el instanceof $) {\n\t\t\t\t\tel = el.eq(0); // el was a jQuery object: use the first\n\t\t\t\t} else if (el.originalEvent !== undefined) {\n\t\t\t\t\tel = $(el.target); // el was an Event\n\t\t\t\t}\n\t\t\t\t// el is a jQuery object wit one element here\n\t\t\t\tel = el.closest(\":ui-fancytree\");\n\t\t\t\twidget = el.data(\"ui-fancytree\") || el.data(\"fancytree\"); // the latter is required by jQuery <= 1.8\n\t\t\t\treturn widget ? widget.tree : null;\n\t\t\t},\n\t\t\t/** Return an option value that has a default, but may be overridden by a\n\t\t\t * callback or a node instance attribute.\n\t\t\t *\n\t\t\t * Evaluation sequence:\n\t\t\t *\n\t\t\t * If `tree.options.<optionName>` is a callback that returns something, use that.\n\t\t\t * Else if `node.<optionName>` is defined, use that.\n\t\t\t * Else if `tree.options.<optionName>` is a value, use that.\n\t\t\t * Else use `defaultValue`.\n\t\t\t *\n\t\t\t * @param {string} optionName name of the option property (on node and tree)\n\t\t\t * @param {FancytreeNode} node passed to the callback\n\t\t\t * @param {object} nodeObject where to look for the local option property, e.g. `node` or `node.data`\n\t\t\t * @param {object} treeOption where to look for the tree option, e.g. `tree.options` or `tree.options.dnd5`\n\t\t\t * @param {any} [defaultValue]\n\t\t\t * @returns {any}\n\t\t\t *\n\t\t\t * @example\n\t\t\t * // Check for node.foo, tree,options.foo(), and tree.options.foo:\n\t\t\t * $.ui.fancytree.evalOption(\"foo\", node, node, tree.options);\n\t\t\t * // Check for node.data.bar, tree,options.qux.bar(), and tree.options.qux.bar:\n\t\t\t * $.ui.fancytree.evalOption(\"bar\", node, node.data, tree.options.qux);\n\t\t\t *\n\t\t\t * @since 2.22\n\t\t\t */\n\t\t\tevalOption: function(\n\t\t\t\toptionName,\n\t\t\t\tnode,\n\t\t\t\tnodeObject,\n\t\t\t\ttreeOptions,\n\t\t\t\tdefaultValue\n\t\t\t) {\n\t\t\t\tvar ctx,\n\t\t\t\t\tres,\n\t\t\t\t\ttree = node.tree,\n\t\t\t\t\ttreeOpt = treeOptions[optionName],\n\t\t\t\t\tnodeOpt = nodeObject[optionName];\n\n\t\t\t\tif ($.isFunction(treeOpt)) {\n\t\t\t\t\tctx = {\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\ttree: tree,\n\t\t\t\t\t\twidget: tree.widget,\n\t\t\t\t\t\toptions: tree.widget.options,\n\t\t\t\t\t\ttypeInfo: tree.types[node.type] || {},\n\t\t\t\t\t};\n\t\t\t\t\tres = treeOpt.call(tree, { type: optionName }, ctx);\n\t\t\t\t\tif (res == null) {\n\t\t\t\t\t\tres = nodeOpt;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres = nodeOpt == null ? treeOpt : nodeOpt;\n\t\t\t\t}\n\t\t\t\tif (res == null) {\n\t\t\t\t\tres = defaultValue; // no option set at all: return default\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t},\n\t\t\t/** Set expander, checkbox, or node icon, supporting string and object format.\n\t\t\t *\n\t\t\t * @param {Element | jQueryObject} span\n\t\t\t * @param {string} baseClass\n\t\t\t * @param {string | object} icon\n\t\t\t * @since 2.27\n\t\t\t */\n\t\t\tsetSpanIcon: function(span, baseClass, icon) {\n\t\t\t\tvar $span = $(span);\n\n\t\t\t\tif (typeof icon === \"string\") {\n\t\t\t\t\t$span.attr(\"class\", baseClass + \" \" + icon);\n\t\t\t\t} else {\n\t\t\t\t\t// support object syntax: { text: ligature, addClasse: classname }\n\t\t\t\t\tif (icon.text) {\n\t\t\t\t\t\t$span.text(\"\" + icon.text);\n\t\t\t\t\t} else if (icon.html) {\n\t\t\t\t\t\tspan.innerHTML = icon.html;\n\t\t\t\t\t}\n\t\t\t\t\t$span.attr(\n\t\t\t\t\t\t\"class\",\n\t\t\t\t\t\tbaseClass + \" \" + (icon.addClass || \"\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/** Convert a keydown or mouse event to a canonical string like 'ctrl+a',\n\t\t\t * 'ctrl+shift+f2', 'shift+leftdblclick'.\n\t\t\t *\n\t\t\t * This is especially handy for switch-statements in event handlers.\n\t\t\t *\n\t\t\t * @param {event}\n\t\t\t * @returns {string}\n\t\t\t *\n\t\t\t * @example\n\n\t\t\tswitch( $.ui.fancytree.eventToString(event) ) {\n\t\t\t\tcase \"-\":\n\t\t\t\t\ttree.nodeSetExpanded(ctx, false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"shift+return\":\n\t\t\t\t\ttree.nodeSetActive(ctx, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"down\":\n\t\t\t\t\tres = node.navigate(event.which, activate);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\thandled = false;\n\t\t\t}\n\t\t\tif( handled ){\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\t*/\n\t\t\teventToString: function(event) {\n\t\t\t\t// Poor-man's hotkeys. See here for a complete implementation:\n\t\t\t\t//   https://github.com/jeresig/jquery.hotkeys\n\t\t\t\tvar which = event.which,\n\t\t\t\t\tet = event.type,\n\t\t\t\t\ts = [];\n\n\t\t\t\tif (event.altKey) {\n\t\t\t\t\ts.push(\"alt\");\n\t\t\t\t}\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\ts.push(\"ctrl\");\n\t\t\t\t}\n\t\t\t\tif (event.metaKey) {\n\t\t\t\t\ts.push(\"meta\");\n\t\t\t\t}\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\ts.push(\"shift\");\n\t\t\t\t}\n\n\t\t\t\tif (et === \"click\" || et === \"dblclick\") {\n\t\t\t\t\ts.push(MOUSE_BUTTONS[event.button] + et);\n\t\t\t\t} else if (et === \"wheel\") {\n\t\t\t\t\ts.push(et);\n\t\t\t\t} else if (!IGNORE_KEYCODES[which]) {\n\t\t\t\t\ts.push(\n\t\t\t\t\t\tSPECIAL_KEYCODES[which] ||\n\t\t\t\t\t\t\tString.fromCharCode(which).toLowerCase()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn s.join(\"+\");\n\t\t\t},\n\t\t\t/** Write message to console if debugLevel >= 3\n\t\t\t * @param {string} msg\n\t\t\t */\n\t\t\tinfo: function(msg) {\n\t\t\t\tif ($.ui.fancytree.debugLevel >= 3) {\n\t\t\t\t\tconsoleApply(\"info\", arguments);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/* @deprecated: use eventToString(event) instead.\n\t\t\t */\n\t\t\tkeyEventToString: function(event) {\n\t\t\t\tthis.warn(\n\t\t\t\t\t\"keyEventToString() is deprecated: use eventToString()\"\n\t\t\t\t);\n\t\t\t\treturn this.eventToString(event);\n\t\t\t},\n\t\t\t/** Return a wrapped handler method, that provides `this._super`.\n\t\t\t *\n\t\t\t * @example\n\t\t\t\t// Implement `opts.createNode` event to add the 'draggable' attribute\n\t\t\t\t$.ui.fancytree.overrideMethod(ctx.options, \"createNode\", function(event, data) {\n\t\t\t\t\t// Default processing if any\n\t\t\t\t\tthis._super.apply(this, arguments);\n\t\t\t\t\t// Add 'draggable' attribute\n\t\t\t\t\tdata.node.span.draggable = true;\n\t\t\t\t});\n\t\t\t *\n\t\t\t * @param {object} instance\n\t\t\t * @param {string} methodName\n\t\t\t * @param {function} handler\n\t\t\t * @param {object} [context] optional context\n\t\t\t */\n\t\t\toverrideMethod: function(instance, methodName, handler, context) {\n\t\t\t\tvar prevSuper,\n\t\t\t\t\t_super = instance[methodName] || $.noop;\n\n\t\t\t\tinstance[methodName] = function() {\n\t\t\t\t\tvar self = context || this;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tprevSuper = self._super;\n\t\t\t\t\t\tself._super = _super;\n\t\t\t\t\t\treturn handler.apply(self, arguments);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tself._super = prevSuper;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * Parse tree data from HTML <ul> markup\n\t\t\t *\n\t\t\t * @param {jQueryObject} $ul\n\t\t\t * @returns {NodeData[]}\n\t\t\t */\n\t\t\tparseHtml: function($ul) {\n\t\t\t\tvar classes,\n\t\t\t\t\tclassName,\n\t\t\t\t\textraClasses,\n\t\t\t\t\ti,\n\t\t\t\t\tiPos,\n\t\t\t\t\tl,\n\t\t\t\t\ttmp,\n\t\t\t\t\ttmp2,\n\t\t\t\t\t$children = $ul.find(\">li\"),\n\t\t\t\t\tchildren = [];\n\n\t\t\t\t$children.each(function() {\n\t\t\t\t\tvar allData,\n\t\t\t\t\t\tlowerCaseAttr,\n\t\t\t\t\t\t$li = $(this),\n\t\t\t\t\t\t$liSpan = $li.find(\">span\", this).first(),\n\t\t\t\t\t\t$liA = $liSpan.length ? null : $li.find(\">a\").first(),\n\t\t\t\t\t\td = { tooltip: null, data: {} };\n\n\t\t\t\t\tif ($liSpan.length) {\n\t\t\t\t\t\td.title = $liSpan.html();\n\t\t\t\t\t} else if ($liA && $liA.length) {\n\t\t\t\t\t\t// If a <li><a> tag is specified, use it literally and extract href/target.\n\t\t\t\t\t\td.title = $liA.html();\n\t\t\t\t\t\td.data.href = $liA.attr(\"href\");\n\t\t\t\t\t\td.data.target = $liA.attr(\"target\");\n\t\t\t\t\t\td.tooltip = $liA.attr(\"title\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If only a <li> tag is specified, use the trimmed string up to\n\t\t\t\t\t\t// the next child <ul> tag.\n\t\t\t\t\t\td.title = $li.html();\n\t\t\t\t\t\tiPos = d.title.search(/<ul/i);\n\t\t\t\t\t\tif (iPos >= 0) {\n\t\t\t\t\t\t\td.title = d.title.substring(0, iPos);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\td.title = $.trim(d.title);\n\n\t\t\t\t\t// Make sure all fields exist\n\t\t\t\t\tfor (i = 0, l = CLASS_ATTRS.length; i < l; i++) {\n\t\t\t\t\t\td[CLASS_ATTRS[i]] = undefined;\n\t\t\t\t\t}\n\t\t\t\t\t// Initialize to `true`, if class is set and collect extraClasses\n\t\t\t\t\tclasses = this.className.split(\" \");\n\t\t\t\t\textraClasses = [];\n\t\t\t\t\tfor (i = 0, l = classes.length; i < l; i++) {\n\t\t\t\t\t\tclassName = classes[i];\n\t\t\t\t\t\tif (CLASS_ATTR_MAP[className]) {\n\t\t\t\t\t\t\td[className] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\textraClasses.push(className);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\td.extraClasses = extraClasses.join(\" \");\n\n\t\t\t\t\t// Parse node options from ID, title and class attributes\n\t\t\t\t\ttmp = $li.attr(\"title\");\n\t\t\t\t\tif (tmp) {\n\t\t\t\t\t\td.tooltip = tmp; // overrides <a title='...'>\n\t\t\t\t\t}\n\t\t\t\t\ttmp = $li.attr(\"id\");\n\t\t\t\t\tif (tmp) {\n\t\t\t\t\t\td.key = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t// Translate hideCheckbox -> checkbox:false\n\t\t\t\t\tif ($li.attr(\"hideCheckbox\")) {\n\t\t\t\t\t\td.checkbox = false;\n\t\t\t\t\t}\n\t\t\t\t\t// Add <li data-NAME='...'> as node.data.NAME\n\t\t\t\t\tallData = _getElementDataAsDict($li);\n\t\t\t\t\tif (allData && !$.isEmptyObject(allData)) {\n\t\t\t\t\t\t// #507: convert data-hidecheckbox (lower case) to hideCheckbox\n\t\t\t\t\t\tfor (lowerCaseAttr in NODE_ATTR_LOWERCASE_MAP) {\n\t\t\t\t\t\t\tif (allData.hasOwnProperty(lowerCaseAttr)) {\n\t\t\t\t\t\t\t\tallData[\n\t\t\t\t\t\t\t\t\tNODE_ATTR_LOWERCASE_MAP[lowerCaseAttr]\n\t\t\t\t\t\t\t\t] = allData[lowerCaseAttr];\n\t\t\t\t\t\t\t\tdelete allData[lowerCaseAttr];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// #56: Allow to set special node.attributes from data-...\n\t\t\t\t\t\tfor (i = 0, l = NODE_ATTRS.length; i < l; i++) {\n\t\t\t\t\t\t\ttmp = NODE_ATTRS[i];\n\t\t\t\t\t\t\ttmp2 = allData[tmp];\n\t\t\t\t\t\t\tif (tmp2 != null) {\n\t\t\t\t\t\t\t\tdelete allData[tmp];\n\t\t\t\t\t\t\t\td[tmp] = tmp2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// All other data-... goes to node.data...\n\t\t\t\t\t\t$.extend(d.data, allData);\n\t\t\t\t\t}\n\t\t\t\t\t// Recursive reading of child nodes, if LI tag contains an UL tag\n\t\t\t\t\t$ul = $li.find(\">ul\").first();\n\t\t\t\t\tif ($ul.length) {\n\t\t\t\t\t\td.children = $.ui.fancytree.parseHtml($ul);\n\t\t\t\t\t} else {\n\t\t\t\t\t\td.children = d.lazy ? undefined : null;\n\t\t\t\t\t}\n\t\t\t\t\tchildren.push(d);\n\t\t\t\t\t// FT.debug(\"parse \", d, children);\n\t\t\t\t});\n\t\t\t\treturn children;\n\t\t\t},\n\t\t\t/** Add Fancytree extension definition to the list of globally available extensions.\n\t\t\t *\n\t\t\t * @param {object} definition\n\t\t\t */\n\t\t\tregisterExtension: function(definition) {\n\t\t\t\t_assert(\n\t\t\t\t\tdefinition.name != null,\n\t\t\t\t\t\"extensions must have a `name` property.\"\n\t\t\t\t);\n\t\t\t\t_assert(\n\t\t\t\t\tdefinition.version != null,\n\t\t\t\t\t\"extensions must have a `version` property.\"\n\t\t\t\t);\n\t\t\t\t$.ui.fancytree._extensions[definition.name] = definition;\n\t\t\t},\n\t\t\t/** Inverse of escapeHtml().\n\t\t\t *\n\t\t\t * @param {string} s\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tunescapeHtml: function(s) {\n\t\t\t\tvar e = document.createElement(\"div\");\n\t\t\t\te.innerHTML = s;\n\t\t\t\treturn e.childNodes.length === 0\n\t\t\t\t\t? \"\"\n\t\t\t\t\t: e.childNodes[0].nodeValue;\n\t\t\t},\n\t\t\t/** Write warning message to console if debugLevel >= 2.\n\t\t\t * @param {string} msg\n\t\t\t */\n\t\t\twarn: function(msg) {\n\t\t\t\tif ($.ui.fancytree.debugLevel >= 2) {\n\t\t\t\t\tconsoleApply(\"warn\", arguments);\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t);\n\n\t// Value returned by `require('jquery.fancytree')`\n\treturn $.ui.fancytree;\n}); // End of closure\n"]},"metadata":{},"sourceType":"script"}