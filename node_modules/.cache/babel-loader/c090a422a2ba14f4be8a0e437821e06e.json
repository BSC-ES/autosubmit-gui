{"ast":null,"code":"import React,{useContext,Fragment}from\"react\";import GraphContext from\"../context/graph/graphContext\";import ExperimentContext from\"../context/experiment/experimentContext\";import CommandModal from\"./CommandModal\";var GraphNodeSelection=function GraphNodeSelection(_ref){var _ref$target=_ref.target,target=_ref$target===void 0?\"manual-graph\":_ref$target;var graphContext=useContext(GraphContext);var experimentContext=useContext(ExperimentContext);var selection=graphContext.selection,updateGraphSelectedNodes=graphContext.updateGraphSelectedNodes;var canSelect=experimentContext.canSelect;var onChangeStatus=function onChangeStatus(e){e.preventDefault();updateGraphSelectedNodes();};if(selection&&!canSelect){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn-sm btn-info\",type:\"button\",\"data-toggle\":\"modal\",\"data-target\":\"#command\"+target,onClick:onChangeStatus},/*#__PURE__*/React.createElement(\"strong\",null,\"Change Status\")),/*#__PURE__*/React.createElement(CommandModal,{source:\"graph-only\",target:target}));}return null;};export default GraphNodeSelection;","map":{"version":3,"sources":["/Users/BleuDChan/ReposBSC/autosubmitreact/src/components/experiment/GraphNodeSelection.js"],"names":["React","useContext","Fragment","GraphContext","ExperimentContext","CommandModal","GraphNodeSelection","target","graphContext","experimentContext","selection","updateGraphSelectedNodes","canSelect","onChangeStatus","e","preventDefault"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yCAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAAiC,sBAA9BC,MAA8B,CAA9BA,MAA8B,sBAArB,cAAqB,aAC1D,GAAMC,CAAAA,YAAY,CAAGP,UAAU,CAACE,YAAD,CAA/B,CACA,GAAMM,CAAAA,iBAAiB,CAAGR,UAAU,CAACG,iBAAD,CAApC,CAF0D,GAGlDM,CAAAA,SAHkD,CAGVF,YAHU,CAGlDE,SAHkD,CAGvCC,wBAHuC,CAGVH,YAHU,CAGvCG,wBAHuC,IAIlDC,CAAAA,SAJkD,CAIpCH,iBAJoC,CAIlDG,SAJkD,CAM1D,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BA,CAAC,CAACC,cAAF,GACAJ,wBAAwB,GACzB,CAHD,CAKA,GAAID,SAAS,EAAI,CAACE,SAAlB,CAA6B,CAC3B,mBACE,oBAAC,QAAD,mBACE,8BACE,SAAS,CAAC,iBADZ,CAEE,IAAI,CAAC,QAFP,CAGE,cAAY,OAHd,CAIE,cAAa,WAAaL,MAJ5B,CAKE,OAAO,CAAEM,cALX,eAOE,kDAPF,CADF,cAUE,oBAAC,YAAD,EAAc,MAAM,CAAE,YAAtB,CAAoC,MAAM,CAAEN,MAA5C,EAVF,CADF,CAcD,CAED,MAAO,KAAP,CACD,CA7BD,CA+BA,cAAeD,CAAAA,kBAAf","sourcesContent":["import React, { useContext, Fragment } from \"react\";\nimport GraphContext from \"../context/graph/graphContext\";\nimport ExperimentContext from \"../context/experiment/experimentContext\";\nimport CommandModal from \"./CommandModal\";\n\nconst GraphNodeSelection = ({ target = \"manual-graph\" }) => {\n  const graphContext = useContext(GraphContext);\n  const experimentContext = useContext(ExperimentContext);\n  const { selection, updateGraphSelectedNodes } = graphContext;\n  const { canSelect } = experimentContext;\n\n  const onChangeStatus = (e) => {\n    e.preventDefault();\n    updateGraphSelectedNodes();\n  };\n\n  if (selection && !canSelect) {\n    return (\n      <Fragment>\n        <button\n          className='btn-sm btn-info'\n          type='button'\n          data-toggle='modal'\n          data-target={\"#command\" + target}\n          onClick={onChangeStatus}\n        >\n          <strong>Change Status</strong>\n        </button>\n        <CommandModal source={\"graph-only\"} target={target} />\n      </Fragment>\n    );\n  }\n\n  return null;\n};\n\nexport default GraphNodeSelection;\n"]},"metadata":{},"sourceType":"module"}