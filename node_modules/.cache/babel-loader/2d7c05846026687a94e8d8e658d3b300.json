{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js\";\nimport React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport class Experiment extends Component {\n  componentDidMount() {\n    console.log(this.props.experiment.experiment);\n    this.props.getExperiment(this.props.match.params.expid);\n  }\n\n  render() {\n    const _this$props$experimen = this.props.experiment,\n          expid = _this$props$experimen.expid,\n          contents = _this$props$experimen.contents,\n          contents_conf = _this$props$experimen.contents_conf,\n          contents_pkl = _this$props$experimen.contents_pkl,\n          contents_plot = _this$props$experimen.contents_plot,\n          contents_status = _this$props$experimen.contents_status,\n          contents_tmp = _this$props$experimen.contents_tmp,\n          error_message = _this$props$experimen.error_message,\n          owner = _this$props$experimen.owner,\n          owner_id = _this$props$experimen.owner_id,\n          path = _this$props$experimen.path,\n          time_last_access = _this$props$experimen.time_last_access,\n          time_last_mod = _this$props$experimen.time_last_mod;\n    const loading = this.props.loading;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Back To Search\"), \"Message:\", ' ', error_message.length() === 4 ? React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, expid)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"card text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js"],"names":["React","Fragment","Component","Spinner","PropTypes","Link","Experiment","componentDidMount","console","log","props","experiment","getExperiment","match","params","expid","render","contents","contents_conf","contents_pkl","contents_plot","contents_status","contents_tmp","error_message","owner","owner_id","path","time_last_access","time_last_mod","loading","length","propTypes","bool","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAExCK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAX,CAAsBA,UAAlC;AACA,SAAKD,KAAL,CAAWE,aAAX,CAAyB,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,KAAjD;AACD;;AAQDC,EAAAA,MAAM,GAAG;AAAA,kCAeH,KAAKN,KAAL,CAAWC,UAfR;AAAA,UAELI,KAFK,yBAELA,KAFK;AAAA,UAGLE,QAHK,yBAGLA,QAHK;AAAA,UAILC,aAJK,yBAILA,aAJK;AAAA,UAKLC,YALK,yBAKLA,YALK;AAAA,UAMLC,aANK,yBAMLA,aANK;AAAA,UAOLC,eAPK,yBAOLA,eAPK;AAAA,UAQLC,YARK,yBAQLA,YARK;AAAA,UASLC,aATK,yBASLA,aATK;AAAA,UAULC,KAVK,yBAULA,KAVK;AAAA,UAWLC,QAXK,yBAWLA,QAXK;AAAA,UAYLC,IAZK,yBAYLA,IAZK;AAAA,UAaLC,gBAbK,yBAaLA,gBAbK;AAAA,UAcLC,aAdK,yBAcLA,aAdK;AAAA,UAiBCC,OAjBD,GAiBa,KAAKnB,KAjBlB,CAiBCmB,OAjBD;AAmBP,QAAIA,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEb,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,cAIW,GAJX,EAKGN,aAAa,CAACO,MAAd,OAA2B,CAA3B,GACC;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AAAG,MAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAUE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,KAAL,CAPF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAVF,EA0DE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DF,CADF;AAmED;;AArGuC;AAA7BT,U,CAOJyB,S,GAAY;AACjBF,EAAAA,OAAO,EAAEzB,SAAS,CAAC4B,IADF;AAEjBrB,EAAAA,UAAU,EAAEP,SAAS,CAAC6B,MAAV,CAAiBC,UAFZ;AAGjBtB,EAAAA,aAAa,EAAER,SAAS,CAAC+B,IAAV,CAAeD;AAHb,C;AAiGrB,eAAe5B,UAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport class Experiment extends Component {  \n\n  componentDidMount() {\n    console.log(this.props.experiment.experiment)\n    this.props.getExperiment(this.props.match.params.expid);\n  }\n\n  static propTypes = {\n    loading: PropTypes.bool,\n    experiment: PropTypes.object.isRequired,\n    getExperiment: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      expid,\n      contents,\n      contents_conf,\n      contents_pkl,\n      contents_plot,\n      contents_status,\n      contents_tmp,\n      error_message,\n      owner,\n      owner_id,\n      path,\n      time_last_access,\n      time_last_mod\n    } = this.props.experiment;\n\n    const { loading } = this.props;\n\n    if (loading) return <Spinner />;\n\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n          Back To Search\n        </Link>\n        Message:{' '}\n        {error_message.length() === 4 ? (\n          <i className='fas fa-check text-success' />\n        ) : (\n          <i className='fas fa-times-circle text-danger' />\n        )}\n        <div className='card grid-2'>\n          <div className='all-center'>\n            {/* <img\n              src={avatar_url}\n              className='round-img'\n              alt=''\n              style={{ width: '150px' }}\n            /> */}\n            <h1>{expid}</h1>\n            {/* <p>Description: {description}</p> */}\n          </div>\n          <div>\n            {/* {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className='btn btn-dark my-1'>\n              Visit Github Profile\n            </a>\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username: </strong> {login}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong> {company}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website: </strong> {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul> */}\n          </div>\n        </div>\n        <div className='card text-center'>\n          {/* <div className='badge badge-primary'>Followers: {followers}</div>\n          <div className='badge badge-success'>Following: {following}</div>\n          <div className='badge badge-light'>Public Repos: {public_repos}</div>\n          <div className='badge badge-dark'>Public Gists: {public_gists}</div> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}