{"ast":null,"code":"var _jsxFileName = \"/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport GraphRepresentation from \"./GraphRepresentation\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Experiment = ({\n  getExperiment,\n  loading,\n  loadingGraph,\n  getExperimentGraph,\n  match,\n  data,\n  experiment,\n  cleanParent,\n  showGraph\n}) => {\n  useEffect(() => {\n    console.log(match.params.expid);\n    getExperiment(match.params.expid);\n    return () => {\n      cleanParent();\n    }; // eslint-disable-next-line\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  };\n\n  const cleanParentLocal = () => {\n    console.log('Exp clean ');\n    cleanParent();\n  };\n\n  const expid = experiment.expid,\n        contents = experiment.contents,\n        contents_conf = experiment.contents_conf,\n        contents_pkl = experiment.contents_pkl,\n        contents_plot = experiment.contents_plot,\n        contents_tmp = experiment.contents_tmp,\n        error_message = experiment.error_message,\n        owner = experiment.owner,\n        owner_id = experiment.owner_id,\n        path = experiment.path,\n        time_last_access = experiment.time_last_access,\n        time_last_mod = experiment.time_last_mod,\n        description = experiment.description,\n        version = experiment.version,\n        size = experiment.size;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Back To Search\"), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Owner: \", owner_id, \" \", owner), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Last Access: \", time_last_access), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Last Modified: \", time_last_mod)), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, expid), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Description: \", description), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Version: \", version)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, error_message !== \"None\" && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Error Message: \", error_message, \" \"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, path && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Path: \"), \" \", path)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, time_last_access && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Last Access: \"), \" \", time_last_access)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, time_last_mod && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Last Modified: \"), \" \", time_last_mod)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, size && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Size: \"), \" \", size)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, contents && React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Contents\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, contents && contents.map(content => React.createElement(\"li\", {\n    key: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"- \", path, \"/\", content))))))), React.createElement(\"div\", {\n    className: \"card grid-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Show Graph\",\n    className: \"btn btn-success btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), data.error === true && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, data.error_message), showGraph && React.createElement(GraphRepresentation, {\n    loading: loadingGraph,\n    nodes_prop: data.nodes,\n    edges_prop: data.edges,\n    cleanParent: cleanParentLocal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: experimentStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"CONF contents\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, contents_conf && contents_conf.slice(0, 10).map(content => React.createElement(\"li\", {\n    key: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"- \", content))))), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"PKL contents\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, contents_pkl && contents_pkl.slice(0, 10).map(content => React.createElement(\"li\", {\n    key: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"- \", content))))), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"PLOT contents\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, contents_plot && contents_plot.slice(0, 10).map(content => React.createElement(\"li\", {\n    key: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"- \", content))))), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"TMP contents\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, contents_tmp && contents_tmp.slice(0, 10).map(content => React.createElement(\"li\", {\n    key: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"- \", content)))))));\n};\n\nconst experimentStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(4, 1fr)\",\n  gridGap: \"1rem\"\n};\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\nexport default Experiment;","map":{"version":3,"sources":["/home/Earth/wuruchi/Documents/ReactProj/dev-react-api/src/components/experiment/Experiment.js"],"names":["React","Fragment","useEffect","Spinner","GraphRepresentation","PropTypes","Link","Experiment","getExperiment","loading","loadingGraph","getExperimentGraph","match","data","experiment","cleanParent","showGraph","console","log","params","expid","onSubmit","e","preventDefault","cleanParentLocal","contents","contents_conf","contents_pkl","contents_plot","contents_tmp","error_message","owner","owner_id","path","time_last_access","time_last_mod","description","version","size","map","content","error","nodes","edges","experimentStyle","slice","display","gridTemplateColumns","gridGap","propTypes","bool","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA,YAA1B;AAAwCC,EAAAA,kBAAxC;AAA4DC,EAAAA,KAA5D;AAAmEC,EAAAA,IAAnE;AAAyEC,EAAAA,UAAzE;AAAqFC,EAAAA,WAArF;AAAkGC,EAAAA;AAAlG,CAAD,KAAmH;AAEpId,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAN,CAAaC,KAAzB;AACAZ,IAAAA,aAAa,CAACI,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAb;AACA,WAAO,MAAM;AACXL,MAAAA,WAAW;AACZ,KAFD,CAHc,CAMd;AACD,GAPQ,EAON,EAPM,CAAT;;AAWA,QAAMM,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,kBAAkB,CAACG,UAAU,CAACM,KAAZ,CAAlB;AACD,GAHD;;AAKA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,IAAAA,WAAW;AACZ,GAHD;;AAlBoI,QAwBlIK,KAxBkI,GAuChIN,UAvCgI,CAwBlIM,KAxBkI;AAAA,QAyBlIK,QAzBkI,GAuChIX,UAvCgI,CAyBlIW,QAzBkI;AAAA,QA0BlIC,aA1BkI,GAuChIZ,UAvCgI,CA0BlIY,aA1BkI;AAAA,QA2BlIC,YA3BkI,GAuChIb,UAvCgI,CA2BlIa,YA3BkI;AAAA,QA4BlIC,aA5BkI,GAuChId,UAvCgI,CA4BlIc,aA5BkI;AAAA,QA6BlIC,YA7BkI,GAuChIf,UAvCgI,CA6BlIe,YA7BkI;AAAA,QA8BlIC,aA9BkI,GAuChIhB,UAvCgI,CA8BlIgB,aA9BkI;AAAA,QA+BlIC,KA/BkI,GAuChIjB,UAvCgI,CA+BlIiB,KA/BkI;AAAA,QAgClIC,QAhCkI,GAuChIlB,UAvCgI,CAgClIkB,QAhCkI;AAAA,QAiClIC,IAjCkI,GAuChInB,UAvCgI,CAiClImB,IAjCkI;AAAA,QAkClIC,gBAlCkI,GAuChIpB,UAvCgI,CAkClIoB,gBAlCkI;AAAA,QAmClIC,aAnCkI,GAuChIrB,UAvCgI,CAmClIqB,aAnCkI;AAAA,QAoClIC,WApCkI,GAuChItB,UAvCgI,CAoClIsB,WApCkI;AAAA,QAqClIC,OArCkI,GAuChIvB,UAvCgI,CAqClIuB,OArCkI;AAAA,QAsClIC,IAtCkI,GAuChIxB,UAvCgI,CAsClIwB,IAtCkI;AAyCpI,MAAI7B,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAUE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUuB,QADV,OACqBD,KADrB,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBG,gBADhB,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkBC,aADlB,CAPF,CAVF,EAqBE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,KAAL,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBgB,WAAjB,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiBC,OAAjB,CATF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,aAAa,KAAK,MAAlB,IACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAwBA,aAAxB,MADF,CAFJ,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IAAI,IACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OAC2BA,IAD3B,CAFJ,CARF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBAAgB,IACf,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,OACkCA,gBADlC,CAFJ,CAhBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,IACZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,OACoCA,aADpC,CAFJ,CAxBF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IAAI,IACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OAC2BA,IAD3B,CAFJ,CA/BF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADf,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,IACPA,QAAQ,CAACc,GAAT,CAAaC,OAAO,IAClB;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKP,IADL,OACYO,OADZ,CADF,CAFJ,CAFF,CAtCF,CAVF,CAZF,CArBF,EA+FE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEnB,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASGR,IAAI,CAAC4B,KAAL,KAAe,IAAf,IACD;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B5B,IAAI,CAACiB,aAAjC,CAVF,EAWGd,SAAS,IACR,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAIN,YADb;AAEE,IAAA,UAAU,EAAEG,IAAI,CAAC6B,KAFnB;AAGE,IAAA,UAAU,EAAE7B,IAAI,CAAC8B,KAHnB;AAIE,IAAA,WAAW,EAAEnB,gBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CA/FF,EAmHE;AAAK,IAAA,KAAK,EAAEoB,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,aAAa,IACZA,aAAa,CAACmB,KAAd,CAAoB,CAApB,EAAuB,EAAvB,EAA2BN,GAA3B,CAA+BC,OAAO,IACpC;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUA,OAAV,CADF,CADF,CAFJ,CAFF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,YAAY,IACXA,YAAY,CAACkB,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,EAA0BN,GAA1B,CAA8BC,OAAO,IACnC;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUA,OAAV,CADF,CADF,CAFJ,CAFF,CAZF,EAuBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,aAAa,IACZA,aAAa,CAACiB,KAAd,CAAoB,CAApB,EAAuB,EAAvB,EAA2BN,GAA3B,CAA+BC,OAAO,IACpC;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUA,OAAV,CADF,CADF,CAFJ,CAFF,CAvBF,EAkCE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,YAAY,IACXA,YAAY,CAACgB,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,EAA0BN,GAA1B,CAA8BC,OAAO,IACnC;AAAI,IAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAUA,OAAV,CADF,CADF,CAFJ,CAFF,CAlCF,CAnHF,CADF;AAoKD,CA/MD;;AAiNA,MAAMI,eAAe,GAAG;AACtBE,EAAAA,OAAO,EAAE,MADa;AAEtBC,EAAAA,mBAAmB,EAAE,gBAFC;AAGtBC,EAAAA,OAAO,EAAE;AAHa,CAAxB;AAMAzC,UAAU,CAAC0C,SAAX,GAAuB;AACrBxC,EAAAA,OAAO,EAAEJ,SAAS,CAAC6C,IADE;AAErBpC,EAAAA,UAAU,EAAET,SAAS,CAAC8C,MAAV,CAAiBC,UAFR;AAGrB5C,EAAAA,aAAa,EAAEH,SAAS,CAACgD,IAAV,CAAeD;AAHT,CAAvB;AAMA,eAAe7C,UAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport GraphRepresentation from \"./GraphRepresentation\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Experiment = ({ getExperiment, loading, loadingGraph, getExperimentGraph, match, data, experiment, cleanParent, showGraph }) => {\n    \n  useEffect(() => {\n    console.log(match.params.expid);\n    getExperiment(match.params.expid);\n    return () => {\n      cleanParent();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getExperimentGraph(experiment.expid);\n  };\n\n  const cleanParentLocal = () => {\n    console.log('Exp clean ')\n    cleanParent();\n  };\n\n  const {\n    expid,\n    contents,\n    contents_conf,\n    contents_pkl,\n    contents_plot,\n    contents_tmp,\n    error_message,\n    owner,\n    owner_id,\n    path,\n    time_last_access,\n    time_last_mod,\n    description,\n    version,\n    size\n  } = experiment;\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back To Search\n      </Link>\n      {/* Message:{' '} */}\n      {/* {error_message.length() === 4 ? (\n        <i className='fas fa-check text-success' />\n      ) : (\n        <i className='fas fa-times-circle text-danger' />\n      )} */}\n      <div className='card text-center'>\n        <div className='badge badge-primary'>\n          Owner: {owner_id} {owner}\n        </div>\n        <div className='badge badge-success'>\n          Last Access: {time_last_access}\n        </div>\n        <div className='badge badge-light'>\n          Last Modified: {time_last_mod}\n        </div>\n      </div>\n      <div className='card grid-2'>\n        <div className='all-center'>\n          {/* <img\n            src={avatar_url}\n            className='round-img'\n            alt=''\n            style={{ width: '150px' }}\n          /> */}\n          <h1>{expid}</h1>\n          <p>Description: {description}</p>\n          <small>Version: {version}</small>\n        </div>\n        <div>\n          {/* {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1'>\n            Visit Github Profile\n          </a> */}\n          <ul>\n            <li>\n              {error_message !== \"None\" && (\n                <Fragment>\n                  <strong>Error Message: {error_message} </strong>\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {path && (\n                <Fragment>\n                  <strong>Path: </strong> {path}\n                </Fragment>\n              )}\n            </li>\n\n            <li>\n              {time_last_access && (\n                <Fragment>\n                  <strong>Last Access: </strong> {time_last_access}\n                </Fragment>\n              )}\n            </li>\n\n            <li>\n              {time_last_mod && (\n                <Fragment>\n                  <strong>Last Modified: </strong> {time_last_mod}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {size && (\n                <Fragment>\n                  <strong>Size: </strong> {size}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {contents && <strong>Contents</strong>}\n              <ul>\n                {contents &&\n                  contents.map(content => (\n                    <li key={content}>\n                      - {path}/{content}\n                    </li>\n                  ))}\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className='card grid-1'>\n        <form onSubmit={onSubmit} className='form'>\n          <input\n            type='submit'\n            value='Show Graph'\n            className='btn btn-success btn-block'\n          />\n        </form>\n                    \n        {data.error === true &&\n        <p className='text-danger'>{data.error_message}</p>}\n        {showGraph && (\n          <GraphRepresentation\n            loading = {loadingGraph}\n            nodes_prop={data.nodes}\n            edges_prop={data.edges}\n            cleanParent={cleanParentLocal}\n          />\n        )}\n      </div>\n      <div style={experimentStyle}>\n        <div className='card'>\n          <strong>CONF contents</strong>\n          <ul>\n            {contents_conf &&\n              contents_conf.slice(0, 10).map(content => (\n                <li key={content}>\n                  <small>- {content}</small>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className='card'>\n          <strong>PKL contents</strong>\n          <ul>\n            {contents_pkl &&\n              contents_pkl.slice(0, 10).map(content => (\n                <li key={content}>\n                  <small>- {content}</small>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className='card'>\n          <strong>PLOT contents</strong>\n          <ul>\n            {contents_plot &&\n              contents_plot.slice(0, 10).map(content => (\n                <li key={content}>\n                  <small>- {content}</small>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className='card'>\n          <strong>TMP contents</strong>\n          <ul>\n            {contents_tmp &&\n              contents_tmp.slice(0, 10).map(content => (\n                <li key={content}>\n                  <small>- {content}</small>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nconst experimentStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(4, 1fr)\",\n  gridGap: \"1rem\"\n};\n\nExperiment.propTypes = {\n  loading: PropTypes.bool,\n  experiment: PropTypes.object.isRequired,\n  getExperiment: PropTypes.func.isRequired\n};\n\nexport default Experiment;\n"]},"metadata":{},"sourceType":"module"}